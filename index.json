[{"body":"","link":"https://EM-Tec.github.io/","section":"","tags":null,"title":""},{"body":"","link":"https://EM-Tec.github.io/tags/css/","section":"tags","tags":null,"title":"CSS"},{"body":" 這是我高一在學校吃肉蛋吐司時想到的做法，因此此篇文章假設你已熟悉國小數學。\n傳統跑馬燈雖然在現代乍看之下是一個又醜又過時的設計，但是如果應用的好的話其實是非常有質感且蠻有趣的。裝飾效果多大於實際用途。\n這是我幫朋友製作的個人網頁，裡面使用跑馬燈搭配旋轉效果。卡頓是因為 GIF 的緣故，如果想看原始網頁可以到這裡。\n如果要你做跑馬燈你會怎麼做呢？如果你是一個有年紀的工程師的話應該使用過 \u0026lt;marquee\u0026gt; 吧，然而這是一個還沒正式啟用就已經被淘汰的語法，且能設定的屬性有限。如果你是一個現代的工程師應該有想過使用 @keyframes 動畫吧。但是這樣會遇到幾個問題。首先是跑完不會連續，會有一段空白的時間。但是如果說多疊幾個你怎麼知道需要幾個？萬一內容很短又在電競超長曲面螢幕怎麼辦？還有一個最大的問題，我們知道速率的公式是距離除以時間對吧？\n$$ V=\\frac{s}{t} $$\n那麼我們設定同樣的動畫長度(t)，如果螢幕寬度(s)變大速率就變快了對吧！所以讓我們再加上一些簡單的 Js 來製作能夠適應各種螢幕的跑馬燈吧！\n切版 首先我們來切一個簡單的版面出來\n1\u0026lt;div class=\u0026#34;marquee\u0026#34;\u0026gt; 2 \u0026lt;div class=\u0026#34;element\u0026#34;\u0026gt;SALE\u0026lt;/div\u0026gt; 3\u0026lt;/div\u0026gt; 1body { 2 min-height: 100svh; 3 display: flex; 4 align-items: center; 5 margin: 0; 6} 7.marquee { 8 font-size: 3rem; 9 color: #fff; 10 height: 1.5em; 11 background: red; 12 width: 100%; 13 position: relative; 14 font-family: Arial; 15} 16.element { 17 position: absolute; 18 left: 0; 19 top: 0.25em; 20} CSS 動畫 接著我們來製作一個基本的 CSS 動畫。他會從螢幕的最右邊移動到最左邊整個跑馬燈消失為止。\n1.element { 2 position: absolute; 3 left: 0; 4 top: 0.25em; 5 animation: marquee 2s forwards linear; 6} 7 8@keyframes marquee{ 9 from { 10 transform: translateX(100vw) 11 } 12 to { 13 transform: translateX(-100%) 14 } 15} 自動生成新的 我們什麼時候會需要一個新的跑馬燈呢？是在一個跑馬燈整條都出現在畫面上，要開始有空白的時候。我們只需要算好時間什麼時候需要插入新的，跑馬燈要跑多久才會跑，跑完之後把它刪掉就可以了（讓 Dom 乾淨一點，不要塞滿一堆撞在一起的殘骸）。\n速率 先來計算速率吧，距離是螢幕寬度 window.innerWidth 加上元素寬度 offsetWidth。你可以設一個變數當作速率並嘗試調整，接者用舉例除以它就可以得到動畫長度 animation_duration 了\n1var v = 100 / 1000; 2var element = document.querySelector(\u0026#34;.element\u0026#34;); 3var element_width = element.offsetWidth; 4var time = (window.innerWidth + element_width) / v; 5element.style.animationDuration = time + \u0026#34;ms\u0026#34;; 6var loopTime = element_width / v; 速率我除以1000是因為後面時間都要緩算成毫秒。因為 v 都是在除數所以除以1000就會變成乘1000。應該都懂吧…算了我還是寫一下…\n$$ a\\div(b\\div c)=a\\div \\frac{b}{c}=a\\times \\frac{c}{b}=a\\div b \\times c $$\n新增頻率 我們有了速率和元素的寬度就可以算出從動畫開始到整根出現(紅色到橘色位置)的時間了。\n1var v = 30; 2var time = window.innerWidth / v; 3var element = document.querySelector(\u0026#34;.element\u0026#34;); 4var element_width = element.offsetWidth; //元素寬度 5var loopTime = element_width / v; //每 delay 秒放入一個新的 結束刪除 我們知道運行的時間，只需要在動畫結束時刪除就可以了，我給他多加一秒延遲緩衝，避免有延遲還沒跑完就被刪除了。記得單位是毫秒\n1setTimeout(() =\u0026gt; { 2 marquee.removeChild(marqueeBox); 3 }, time * 1000 + 1000); 生成函式 完整生成函式如下。會在固定時間複製一個跑馬燈，放入 marquee，時間到刪除\n1function newMaquee() { 2 var clonedElement = element.cloneNode(true); 3 marquee.appendChild(clonedElement); 4 setTimeout(() =\u0026gt; { 5 marquee.removeChild(clonedElement); 6 }, time + 1000); 7} 8 9setInterval(newMaquee, loopTime); Debug 時間! 有一個小問題就是元素之前沒有距離。我們只需要在 setInterval 把 loopTime 設定久一點就可以了\n再一個問題，就是在速率算出來之前第一個已經先跑了幾步了，所以我們可以在計算完之後再開始動畫\n1element.style.animation = `marquee ${time}ms forwards linear`; 最後一個問題，如果有人沒事更改視窗大小理論上時間要重算，不然會變這樣…\n所以把速率計算都丟入函式內，整理一下樣式，完整程式碼如下。\nhttps://codepen.io/edit-mr/pen/YzdZdKv 1\u0026lt;div class=\u0026#34;marquee\u0026#34;\u0026gt; 2 \u0026lt;div class=\u0026#34;element\u0026#34;\u0026gt;SALE\u0026lt;/div\u0026gt; 3\u0026lt;/div\u0026gt; 1body { 2 min-height: 100svh; 3 display: flex; 4 align-items: center; 5 margin: 0; 6 overflow:hidden; 7} 8.marquee { 9 font-size: 3rem; 10 color: #fff; 11 height: 1.5em; 12 background: red; 13 width: 100%; 14 position: relative; 15 font-family: Arial; 16 font-weight:800; 17 font-style: italic; 18} 19.element { 20 position: absolute; 21 left: 0; 22 top: 0.2em; 23} 24 25@keyframes marquee{ 26 from { 27 transform: translateX(100vw); 28 } 29 to { 30 transform: translateX(-100%); 31 } 32} 1var v = 110 / 1000; 2var element = document.querySelector(\u0026#34;.element\u0026#34;); 3var element_width = element.offsetWidth; 4var time = (window.innerWidth + element_width) / v; 5element.style.animation = `marquee ${time}ms forwards linear`; 6var loopTime = element_width / v + 100; 7const marquee = document.querySelector(\u0026#34;.marquee\u0026#34;); 8 9function newMaquee() { 10 time = (window.innerWidth + element_width) / v; 11 element.style.animation = `marquee ${time}ms forwards linear`; 12 loopTime = element_width / v + 100; 13 var clonedElement = element.cloneNode(true); 14 marquee.appendChild(clonedElement); 15 setTimeout(() =\u0026gt; { 16 marquee.removeChild(clonedElement); 17 }, time + 1000); 18} 19marquee.removeChild(element); //第一個先移除，避免卡住 20newMaquee(); //手動新增第一個 21setInterval(newMaquee, loopTime); //之後自動 以上就是我今天的分享，歡迎將你得成品放在評論和大家分享，也歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，或訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-10/","section":"post","tags":["HTML","CSS","JS"],"title":"Day10 永無止境跑馬燈 - 不同螢幕 相同速度"},{"body":"","link":"https://EM-Tec.github.io/tags/html/","section":"tags","tags":null,"title":"HTML"},{"body":"","link":"https://EM-Tec.github.io/tags/js/","section":"tags","tags":null,"title":"JS"},{"body":"","link":"https://EM-Tec.github.io/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://EM-Tec.github.io/series/","section":"series","tags":null,"title":"Series"},{"body":"","link":"https://EM-Tec.github.io/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://EM-Tec.github.io/series/%E4%B8%8D%E7%94%A8%E5%BA%AB-%E4%B9%9F%E8%83%BD%E9%85%B7-%E7%8E%A9%E8%BD%89-css-js-%E7%89%B9%E6%95%88/","section":"series","tags":null,"title":"不用庫 也能酷 - 玩轉 CSS \u0026 Js 特效"},{"body":" 昨天我們只是一個人的色而已，今天疊在一起更刺激。\n你有使用過 iOS17 的 StandBy 功能嗎？就是那個你一定要買磁吸充電還要喬好角度的功能。這不是重點，你有發現白色的數字時鐘似乎不只是有點半透明而已，還有一點說不出來的…高級感。\n之所以會有這種效果是因為他使用了不同的混合模式，如果是有在畫圖或 P 圖的朋友絕對對它不陌生。我這裡使用 iPhone 的 Procreate 來示範，希望你能理解。\n首先這是一顆球\n好啦我知道我很不會畫畫，有些事情模糊一點比較好。前天學的 filter: blur() 拿來用一下，順便打上一道陽光。\n好吧看來我把他救回來，然後又毀了。這個黃色和我這個直男一樣太直了。當顏色疊在一起的時候不一定要直接顯示上面的顏色，可以把兩個疊再一起的顏色做一些運算得出不同的數值。比如說我們可以用乘法把兩個顏色乘在一起得到一個很暗的結果（下面最右邊的圖）中文叫做色彩增值，而英文叫做 multiply 乘法就白話很多。以下是幾個不同混合模式的效果：\n可以看出明明是同樣的顏色相疊但整個出來的感覺差很多對吧！\n而要在 CSS 使用混合模式也很簡單，語法是\n1mix-blend-mode: normal; 2mix-blend-mode: multiply; 3mix-blend-mode: screen; 4mix-blend-mode: overlay; 5mix-blend-mode: darken; 6mix-blend-mode: lighten; 7mix-blend-mode: color-dodge; 8mix-blend-mode: color-burn; 9mix-blend-mode: hard-light; 10mix-blend-mode: soft-light; 11mix-blend-mode: difference; 12mix-blend-mode: exclusion; 13mix-blend-mode: hue; 14mix-blend-mode: saturation; 15mix-blend-mode: color; 16mix-blend-mode: luminosity; 要死記這些語法代表的顏色很難，建議大家都可以測試玩看看。這裡給大家一個線上的測試工具\n我們來實際應用看看吧，這是一個簡單的數字範例。可以看出 mix-blend-mode 讓你的顏色堆疊有著更多的可能，不只是半透明而已，還有顏色互相堆疊渲染的效果。\nhttps://codepen.io/edit-mr/pen/jOXayXa\n1\u0026lt;h1\u0026gt; 2 09:41 3 \u0026lt;div class=\u0026#34;mix\u0026#34;\u0026gt;09:41\u0026lt;/div\u0026gt; 4\u0026lt;/h1\u0026gt; 1body { 2 background: linear-gradient( 3 90deg, 4 rgba(2, 0, 36, 1) 0%, 5 rgba(9, 9, 121, 1) 35%, 6 rgba(0, 212, 255, 1) 100% 7 ); 8 color: rgba(255, 255, 255, 0.6); 9 display: flex; 10 align-item: center; 11 justify-content: center; 12 height: 100svh; 13 font-size: 10vw; 14} 15.mix { 16 mix-blend-mode: plus-lighter; 17} 18* { 19 margin: 0; 20} 我有自己復刻一個網頁版的 StandBy，有興趣的可以去逛逛或加入書籤喔。\n你可以看出 mix-blend-mode 讓你的顏色堆疊有著更多的可能，一開始黑色的陰影也變得五彩斑斕。不過如果是圖片的話最好還是希望設計師可以弄到直接可以丟上來的狀態，因為這個屬性在很多情況下會罷工，又很難 debug；而且顯示出來的效果多少和Photoshop裡面也有一點點出入，所以如果是圖片的話最好還是調好比較好，不管是對於瀏覽器還是對於你都會比較輕鬆。這是我在上一個案子用血換的教訓。\n以上就是我今天的分享，歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-9/","section":"post","tags":["HTML","CSS"],"title":"Day9 給你五彩斑斕的黑: mix-blend-mode"},{"body":" 今天這一篇是一個很色的冷知識分享。可以讓你調出很冷的顏色。\n你平常用 CSS 都在怎麼表示顏色呢？是使用 RGB 還是 HEX 碼呢？不管你是使用哪一種他們都是使用三個數字表達每種顏色通道（紅、綠、藍）要多亮。由於每個通道都可以有256種可能的值（從00到FF），所以一個Hexadecimal顏色碼可以表示的顏色總數為256 x 256 x 256 = 16,777,216 種顏色。\n人類的眼睛可以分辨約700萬種顏色，很明顯這些顏色很不夠用對吧！\n應該說隨著瀏覽器和螢幕的發展，螢幕的色域越來越廣，是超過 RGB 能表達的，讓我們可以看到更亮眼跟絢麗的色彩。而且每一間公司出場的螢幕顏色多少有點不一樣，而且科技一直在進步，誰知道發明新的單位什麼時候會淘汰。於是惠普與微軟於1996年一起開發了 sRGB 色彩空間。\n圖片來源:維基共享資源\n看我們突然多出好多顏色可以用了！但是人類對色的慾望是用無止境的，一下就發現不夠用了。尤其是藍色的部分很多印刷能夠印出來的顏色在螢幕上根本顯示不出來。於是又跑出Adobe RGB等等更多標準…\n所以我到底要怎麼打啦？ CSS支援以下幾個色彩空間\nsRGB色彩空間：hsl()hwb()rgb() CIELAB色彩空間：lab()lch() Oklab色彩空間：oklab()oklch() 他們都有自己的規則，而今天我要講的是不管是什麼色彩空間都可以使用的屬性：\n1color: color 呃沒錯，真的是這樣…\n以下是如何使用color() 的一些基本知識：\n基本語法 首先，讓我們看一下color() 函數表示法的基本語法：\n1color(colorspace c1 c2 c3[ / A]) colorspace你要使用的色彩空間，例如srgb，display-p3，rec2020等等。 c1，c2，c3：這些是數字，百分比值或關鍵字none，用於指定在所選色彩空間中的組件值。 A（選擇性）：這是不透明度，用於指定元素的透明度，其中1對應於100％的不透明度。 選擇適當的色彩空間 根據您的需求，選擇適當的色彩空間非常重要。不同的色彩空間適合不同的情境。例如，display-p3 可以用於支援廣色域的螢幕，而 srgb 可能更適合一般的情況。\n使用示例 以下是一些使用 color() 函數表示法的示例：\n1/* 在sRGB色彩空間中指定紅色 */ 2color(srgb 1 0 0); 3 4/* 在display-p3色彩空間中指定橙色，同時設置透明度為50% */ 5color(display-p3 1 0.5 0 / 0.5); 媒體特性檢測 要在您的CSS中使用color() 函數表示法，您還需要確保瀏覽器支援您所選擇的色彩空間。這可以通過 color-gamut CSS 媒體特性來檢測。這將有助於確保您的設計在不同設備上呈現一致的外觀。\n1/* 檢測是否支援display-p3色彩空間 */ 2@media (color-gamut: p3) { 3 /* 在此使用display-p3色彩空間中的顏色 */ 4 color(display-p3 1 0.5 0); 5} 其實也不用這麼麻煩，把 HEX 碼寫在上面，這些高級的屬性寫在下面，如果瀏覽器看得懂的話他自然就會選下面的啦\n總之，color() 函數表示法是一個強大的工具，它使網頁設計師能夠更精確地控制顏色的呈現方式，並考慮不同色彩空間的因素。讓你的網站可以更刺眼 ，更能抓住使用者的目光，留下深刻的印象。\n以上就是我今天的分享，歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-8/","section":"post","tags":["CSS"],"title":"Day8 滿足你的色域! color: color"},{"body":"CSS 的濾鏡屬性是一個非常實用且可以瞬間讓一個網頁看起來很厲害的功能。讓你可以以各種方式修改和調整圖像和元素的呈現方式，也可以讓元素模糊，或者是直接改變圖示顏色等等。今天我們將深入探討CSS filter 屬性，解釋其各種功能以及如何使用它來創建引人注目的效果。\n現在，讓我們來看一些CSS filter 屬性的常見用法：\n1. 模糊（Blur） 模糊效果可以用來模糊圖像或元素，創建出柔和的背景效果或是陰影效果。你可以通過調整模糊半徑的值來控制模糊的程度，例如：\n1/* 模糊半徑為5像素 */ 2filter: blur(5px); 冷知識：正方形 blur 可以變圓形\n2. 亮度（Brightness） 這不用解釋吧，讓它變更明亮或更暗。值為100%時保持原樣，大於100%將增加亮度，小於100%則減少亮度，例如：\n1/* 增加亮度至150% */ 2filter: brightness(150%); 3. 對比度（Contrast） 對比度效果可以增加或減少圖像的對比度，使畫面更鮮明或柔和。值為100%時保持原樣，大於100%將增加對比度，小於100%則減少對比度，例如：\n1/* 增加對比度至200% */ 2filter: contrast(200%); 4. 灰度（Grayscale） 灰度效果將圖像轉換為灰階，使其變成黑白圖像。值為100%時完全灰階，0%時保持原色，例如：\n1/* 轉換為完全灰階 */ 2filter: grayscale(100%); 5. 反轉顏色（Invert） 反轉顏色效果可以將圖像的顏色反轉，使白色變為黑色，黑色變為白色。值為100%時完全反轉，0%時保持原色，例如：\n1/* 完全反轉顏色 */ 2filter: invert(100%); 6. 飽和度（Saturate） 飽和度效果可以讓畫面更加鮮豔或更加淡化。值為100%時保持原飽和度，大於100%增加飽和度，小於100%減少飽和度，例如：\n1/* 增加飽和度至200% */ 2filter: saturate(200%); 7. 色彩轉換（Hue-rotate） 旋轉圖像的色相。它的值以度數表示，例如：\n1/* 旋轉色相90度 */ 2filter: hue-rotate(90deg); 8. 透明度（Opacity） 透明度效果控制圖像或元素的不透明度。值為0時完全透明，1時完全不透明，例如：\n1/* 使元素變得半透明 */ 2filter: opacity(0.5); 為什麼不直接使用 opacity 屬性? 我自己的想法是如果你已經要使用 filter 屬性屬性的話寫在一起可以更明確的表達在為了達成同一個效果，否則直接使用 opacity 就好了。\n9. 遮罩（Drop-shadow） 這個效果可以在圖像或元素周圍添加陰影，以使其看起來浮在其他元素之上。你可以指定陰影的偏移、模糊半徑、顏色等，例如：\n1/* 添加陰影效果 */ 2filter: drop-shadow(5px 5px 10px rgba(0, 0, 0, 0.5)); 10. 多重效果 您可以將多個 filter 屬性組合在一個規則中，以同時應用多個效果，例如：\n1/* 同時應用多個效果 */ 2filter: grayscale(50%) brightness(150%) blur(3px); 這樣，你可以根據具體需求混合和匹配這些效果，創建出獨特的視覺效果，使網頁更具創意和吸引力。\n11. 自定義濾鏡 除了上述內置的濾鏡效果，您還可以使用自定義的 SVG 濾鏡效果。這需要定義一個 SVG 濾鏡元素，然後將其引用到 filter 屬性中。這個就有一點複雜了，不在本文的討論範圍，但提供了更高度可定制性，有興趣的話可以自己研究看看。\n用一個顏色製作漸層 finter 在製作漸層很實用，可以讓你只需要選擇一個顏色就能生成不錯看的漸層。\nhttps://codepen.io/edit-mr/pen/GRPyNYY\n1:root { 2 --color: blue; 3} 4 5body { 6 background: var(--color); 7 min-height: 100svh; 8 margin: 0; 9} 10body::after { 11 display: block; 12 width: 100%; 13 height: 100svh; 14 content: \u0026#34;\u0026#34;; 15 background: linear-gradient(var(--color), transparent); 16 filter: hue-rotate(-60deg) brightness(3); 17} 你可以看到我先設定了背景顏色，接著建立一個偽元素，並且設定他的背景為漸層。一半是設定的顏色，一半是透明。接著使用 filter 來調整顏色，我讓亮度高一點然後色相旋轉一下讓顏色淺一點。這樣就能夠做出漸層的效果囉。\n這些都是 CSS filter 屬性的一些常見和進階功能。通過組合這些效果，你可以為網站的元素創建出各種視覺效果，無論是圖像處理還是動畫，都能夠實現。我們會在之後的文章繼續講你可以怎麼玩 filter 屬性。\n歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-7/","section":"post","tags":["HTML","CSS","JS"],"title":"Day7 幫我開濾鏡 filter"},{"body":"在使用 CSS 做網站時幾乎一定會使用到 position 屬性，不過你真的知道它的原理和使用方式嗎？雖然乍看之下感覺很複雜但其實超簡單，你只需要幾分鐘就能完全理解了。\n語法 1position: 屬性 Static - 該怎樣就怎樣 預設屬性，該在哪裡在哪裡，區塊元素佔整排，行內元素繼續往右。\n通常不需要特別設定，除非其他 CSS 把他設定到別的然後你想要改回來。\nRelative - 解鎖偏移（相對位置） 設定成 relative 的元素可以解鎖使用 top, bottom, left, right 屬性，讓它看起來往某個地方移動一點點。但是還是佔據原本的位置。\nAbsolute - 在哪都行（相對位置） 設定成 absolute 的元素會變成像是一張貼紙一樣貼在網頁上，所以原本的位置不在佔據。你一樣可以使用 top, bottom, left, right 屬性來定位元素。它定位的位置（也就是設定 top:0; left:0; 最左上角的位置）會變成外面不是 position: static 的元素。最常見的使用方法是先在外面使用 relative，然後裡面放入 absolute 就可以完成置中等各種定位。\nFixed - 卡在畫面上 設定 Fixed 的元素會直接以螢幕的左上角為定位點進行定位，並且無論怎麼滾動畫面都會待在哪裡。最常見的使用時機是網頁右下角回到最上面的按鈕，或者是煩人的分享按鈕。\n範例 來一個範例讓大家分辨它們不同的效果\nhttps://codepen.io/edit-mr/pen/rNoYOKZ 1\u0026lt;div class=\u0026#34;sun\u0026#34;\u0026gt;Fixed\u0026lt;/div\u0026gt; 2\u0026lt;div class=\u0026#34;cloud\u0026#34;\u0026gt;Static\u0026lt;/div\u0026gt; 3\u0026lt;div class=\u0026#34;cloud relative\u0026#34;\u0026gt;Relative\u0026lt;/div\u0026gt; 4\u0026lt;div class=\u0026#34;building\u0026#34;\u0026gt;Relative 5 \u0026lt;div class=\u0026#34;roof\u0026#34;\u0026gt;Absolute\u0026lt;/div\u0026gt; 6\u0026lt;/div\u0026gt; 1body { 2 background: lightblue; 3 text-align: center; 4 font-weight: 800; 5} 6.sun { 7 width: 100px; 8 height: 100px; 9 background: yellow; 10 border-radius: 50%; 11 position: fixed; 12 right: 30px; 13 top: 30px; 14} 15.cloud { 16 width: 300px; 17 height: 100px; 18 left: 20%; 19 background: white; 20 border-radius: 30px 20px 100px 50px; 21} 22.relative { 23 position: relative; 24} 25.building { 26 width: 300px; 27 height: 1000px; 28 background: gray; 29 position: relative; 30 left: 50%; 31} 32.roof { 33 position: absolute; 34 top: 0; 35 left: 50%; 36 width: 100px; 37 height: 70px; 38 background: #000; 39 margin-top: -70px; 40 color: #fff; 41} 在這裡你可以看到\n太陽設定為 fixed，所以就算滾輪滾動也不會改變位置。 第一朵雲因為沒有設定 position，所以就是預設的 static，所以它會在原本的位置。雖然他有設定 left: 20%; 但是因為他是 static 所以沒有效果。 第二朵雲設定為 relative，所以他會在原本的位置，但是可以使用 top, bottom, left, right 來偏移位置。 建築物設定為 relative，所以他會在原本的位置，我們使用 right 來偏移到正中間。可以看到它是元素左邊在最中間，因為對齊點是左上角。 裡面的黑色屋頂設定為 absolute，所以他會以外面的 relative 為對齊點，並且不佔據原本的位置。我們使用 top: 0; left: 50%; 來定位他，但這樣會讓他在建築物裡面，因此我們可以使用 margin-top: -70px; 來把他拉上去。 實際用途 CSS Position 在網頁設計中當然不只是這樣畫畫，他是非常實用的。以下是一些實際用途：\n懸浮按鈕：當你想在網頁上添加一個固定在一側的懸浮按鈕，以便用戶可以輕鬆回到頁首或執行其他動作時，可以使用 fixed 定位方式。 訊息提示框：當你需要在頁面的特定位置顯示一個訊息或提示時，可以使用 absolute 定位方式。這樣你可以輕鬆控制提示框的位置和顯示時間。 圖片輪播：在網頁上創建圖片輪播時，你可以使用 relative 或 absolute 定位方式，使圖片在特定位置輪播顯示。 懸浮菜單：如果你想在網站的一個區域添加一個懸浮菜單，以便用戶可以訪問不同的頁面或功能，可以使用 fixed 定位方式，讓菜單保持可見性。 對話框：當需要彈出對話框或模態框時，通常會使用 fixed 或 absolute 定位方式，以確保它出現在用戶的視線範圍內並居中顯示。 圖像縮放效果：如果你希望用戶可以點擊圖像進行放大或縮小，可以使用 absolute 定位方式，將放大的圖像放在螢幕中央，然後用戶可以通過單擊關閉它。 自定義滾動條：你可以使用 fixed 定位方式來創建自己的自定義滾動條，以增強網頁的外觀和交互性。 這些只是我列出幾個常見的使用方法，我們不管是在前面幾天或者是接下來的文章都一直會使用 position 語法，因此熟悉這篇文章的內容非常重要。\n如果還是不清楚或是需要範例都歡迎提出，也歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-6/","section":"post","tags":["HTML","CSS"],"title":"Day6 你怎在這? 攻克 Position"},{"body":"假設你今天想製作這個載入動畫…\nhttps://codepen.io/edit-mr/pen/YzdzvdV\n可以看出來每個方塊的縮放速度是一樣的，只是越往右下就越有延遲對吧。昨天我們學到可以在 animation 設定延遲，其實也可以在 animation-delay 個別設定。讓我們來一步步用前面幾天學到的知識做出這個動畫吧。\n用 flex 切版 在想要怎麼切板時可以尋找找齊排列的矩形來群組。以下是我想到的切版方式。\n不知道這樣你知道如何下手了嗎?\n我們先寫HTML。emmet縮寫如下。\n1main\u0026gt;(.left\u0026gt;(.wheelBox\u0026gt;.wheel*2)+.box\u0026gt;div*25)+.right\u0026gt;.wheel*3 2\u0026lt;!-- 外框裡面 左邊 裝滾輪 裡面兩個 再一個裝按鈕 25個 右邊 三個滾輪--\u0026gt; CSS 設定一下寬高、形狀、與排列方式\n提示: border-radius 設定大於等於 50% 即可生成圓形\n1.box div, 2.wheel { 3 background-color: #000; 4} 5body { 6 height: 100vh; 7 display: flex; 8 justify-content: center; 9 align-items: center; 10} 11main { 12 width: 300px; 13 border: 4px solid #000; 14 display: flex; 15 border-radius: 20px; 16 padding: 10px; 17} 18.wheel { 19 width: 70px; 20 height: 70px; 21 border-radius: 50%; 22} 23.box, 24.right, 25.wheelBox { 26 display: flex; 27 justify-content: center; 28 align-items: center; 29 gap: 10px; 30 flex-wrap: wrap; 31 padding: 10px; 32} 33.wheelBox { 34 justify-content: space-between; 35 padding: 10px 20px; 36} 37.box div { 38 width: 28px; 39 height: 28px; 40 border-radius: 3px; 41 transform: scale(1); 42 animation: 1.5s ease-in-out infinite zoom; 43} 這樣就有靜態的外觀了\n方塊得動畫我們設成\n1animation: 1.5s ease-in-out infinite zoom; 代表他會無限重複，每次1.5秒。我們來建立 zoom 的動畫吧，我們先縮小、放大、然後維持在原尺寸直到動畫結束。\n1@keyframes zoom { 2 0% { 3 transform: scale(1); 4 } 5 20% { 6 transform: scale(0.7); 7 } 8\t40% { 9 transform: scale(1); 10 } 11} 重複的CSS可以縮寫在一起，像這樣\n1@keyframes zoom { 2 0%, 3 40% { 4 transform: scale(1); 5 } 6 20% { 7 transform: scale(0.7); 8 } 9} 你就會得到一個同時縮放的動畫。我們希望它可以有海浪滾動的感覺，所以越右下角延遲應該要越大。\n我們在 HTML 用行內 CSS 個別設定元素的延遲就可以了。可以使用 Emmet 生成再微調。\n1\u0026lt;div class=box\u0026gt; 2 \u0026lt;div style=\u0026#34;animation-delay: .0s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 3 \u0026lt;div style=\u0026#34;animation-delay: .1s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 4 \u0026lt;div style=\u0026#34;animation-delay: .2s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 5 \u0026lt;div style=\u0026#34;animation-delay: .3s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 6 \u0026lt;div style=\u0026#34;animation-delay: .4s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 7 \u0026lt;div style=\u0026#34;animation-delay: .1s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 8 \u0026lt;div style=\u0026#34;animation-delay: .2s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 9 \u0026lt;div style=\u0026#34;animation-delay: .3s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 10 \u0026lt;div style=\u0026#34;animation-delay: .4s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 11 \u0026lt;div style=\u0026#34;animation-delay: .5s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 12 \u0026lt;div style=\u0026#34;animation-delay: .2s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 13 \u0026lt;div style=\u0026#34;animation-delay: .3s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 14 \u0026lt;div style=\u0026#34;animation-delay: .4s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 15 \u0026lt;div style=\u0026#34;animation-delay: .5s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 16 \u0026lt;div style=\u0026#34;animation-delay: .6s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 17 \u0026lt;div style=\u0026#34;animation-delay: .3s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 18 \u0026lt;div style=\u0026#34;animation-delay: .4s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 19 \u0026lt;div style=\u0026#34;animation-delay: .5s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 20 \u0026lt;div style=\u0026#34;animation-delay: .6s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 21 \u0026lt;div style=\u0026#34;animation-delay: .7s\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 22 \u0026lt;/div\u0026gt; 這樣就能夠做出最上面的動畫啦! 如果你跟我一樣使用 Firefox Developer Edition，在偵錯工具可以看到動畫時間軸曲線。\n再來一個小練習吧，來做一個圓圈載入 loading 動畫\n圓圈 Loading 動畫 https://codepen.io/edit-mr/pen/LYMZeZE?editors=1100\n有點像 Windows 更新動畫。首先我們先來製作圓圈。我畫了一張圖希望讓你更好理解。\n我們把一個正方形放在畫面中間，並在裡面放入一個圓形。只要讓正方形旋轉裡面的圓形就會做圓周運動。我們只需要多疊幾個，並設定動畫的延遲及持續時間即可做出這個動畫。\n旋轉動畫很簡單：\n1@keyframes spin { to { transform: rotate(360deg) } } 在正方形上面套用，讓他無限旋轉。預設速度 ease 又漸入漸出效果。\n1animation: spin 2s infinte 我有在正方形裡面再包一層正方形，讓我可以讓每個正方形再旋轉一點，使每一個的開始點和結束點不太一樣。所有的參數你都可以調整看看。\nHTML Emmet如下：\n1.loading\u0026gt;(div[style=\u0026#34;animation-delay: calc(.1s * $)\u0026#34;]\u0026gt;div[style=\u0026#34;transform:rotate(calc(-15deg * $))\u0026#34;])*8 以上就是我今天的分享，歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-5/","section":"post","tags":["HTML","CSS"],"title":"Day5 載入中… Animation-delay"},{"body":"今天我們要來玩玩 CSS 動畫。CSS動畫有兩種:\n@keyframes - 動作效果 transition - 轉場效果 我們今天都拿 PowerPoint 來舉例，雖然感覺現在的學生都快只認識 Canva 了(順帶一提 Canva 就是 CSS 動畫)\n你可以想像 @Keyframes 是 PowerPoint的動畫\n而且是一載入網頁就執行。當然我們可以透過 JavaScript 來指定執行的時間(比如說滾動到元素的時候)\n而Transition是轉場裡面的轉化效果\n當元素的外觀因為各種原因 CSS 被改變(比如說滑鼠滑過，JavaScript 設定，打開 F12 亂搞)，會平滑的轉換過去。我們先來講 Transition 因為他比較簡單。語法如下\n1transition: 要改的屬性 持續時間 速度曲線 延遲; 2transition: background 4s ease-in-out 1s; 每一個屬性都可以分開設定，但真的不用跟自己過意不去。有興趣的連結下收\ntransition-delay transition-duration transition-property transition-timing-function 每一個屬性都可以分開設定，也可以省略一些屬性不寫。比如說\n1transition: background 1s; 你可以在後面用逗號分隔其他元素\n1transition: background 1s, color 2s; 秒數也可以用毫秒 ms，但我習慣使用秒因為比較短。如果是零點幾零可以省略。比如說以下幾個都是一樣效果\n1transition: background 500ms; 2transition: background 0.5s; 3transition: background .5s; /* 是不是看起來超舒服! */ 以下是一個按鈕範例。你可以看到放大屬性 scale 有設定 transition 所以會漸變，而背景顏色則沒有。\nhttps://codepen.io/edit-mr/pen/mdaPYLv\n1\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;按鈕\u0026lt;/a\u0026gt; 1a:hover { 2 background-color: #ffffff4a; 3 transform: scale(1.2); 4} 5 6a { 7 transition: transform 0.3s ease-out; 8 /* 以下只是裝飾 */ 9 display: block; 10 color: #fff; 11 text-decoration: none; 12 font-family: sans-serif; 13 font-size: 5em; 14 border: #fff solid 5px; 15 padding: 1rem; 16 text-align: center; 17 width: 3em; 18} 19 20body { 21 background: #000; 22 min-height: 100svh; 23 /* 昨天講的置中 */ 24 display: flex; 25 justify-content: center; 26 align-items: center; 27} 記得設定 display:none 不會有淡出效果，請用 opacity:0; 然後 pointer-event: none; 以防止誤觸。\n下面是一個設定 Width 的範例\nhttps://codepen.io/edit-mr/pen/RwEamev\n1a::after { 2 transition: width .5s ease-out; 3 content: \u0026#34;\u0026#34;; 4 height: 2px; 5 display: block; 6 background: red; 7 width: 0em; 8} 9a:hover::after,a:active::after { 10 width: 100%; 11} 12/* 以下只是裝飾 */ 13a { 14 display: block; 15 color: #fff; 16 text-decoration: none; 17 font-family: sans-serif; 18 font-size: 5em; 19 text-align: center; 20 cursor: pointer; 21} 22body { 23 background: #000; 24 min-height: 100svh; 25 /* 昨天講的置中 */ 26 display: flex; 27 justify-content: center; 28 align-items: center; 29} @keyframes 要使用 keyframes 我們需要先建立一個動畫，再套用到元素上。他的語法是\n1@keyframes 動畫名稱{ 2 0% { 3\t/* 要套用的CSS */ 4 } 5\t30% { 6\t/* 要套用的CSS */ 7 } 8/* ...(中間可以放更多) */ 9 100% { 10\t/* 要套用的CSS */ 11 } 12} 以第一天我們做的汽車動畫為例。想要從最左邊移動到中間，也就是 left 從0變到50%。動畫可以這樣寫:\n1@keyframes drive { 2\t0% { 3 left: 0; 4 } 5 100% { 6 left: 50%; 7 } 8} 如果是從0%~100%可以寫 from 和 to\n1@keyframes drive { 2\tfrom { 3 left: 0; 4 } 5 to { 6 left: 50%; 7 } 8} 因為我們本來 left 就在0了所以可以省略。只有一行CSS也分號也可以省略\n1@keyframes drive { 2 to { 3 left: 50% 4 } 5} 最後再套用到元素上就好啦~\n1animation: drive 3s forwards; https://codepen.io/edit-mr/pen/NWeKpjj CSS Animation 的語法如下\n1/* @keyframes 持續時間 | 速度曲線 | 延遲 | 次數 | 方向 | 填充模式 | 播放狀態 | 名稱 */ 2animation: 3s ease-in 1s 2 reverse both paused slidein; 3 4/* 持續三秒，延遲一秒 */ 5animation: 3s linear 1s slidein; 6/* 和上面一樣，順序可以自由變換，我自己習慣這樣寫比較好讀 */ 7animation: slidein 3s linear 1s; 8/* 這樣效果也一樣，記得前面的是時長，後面是延遲 */ 9animation: slidein linear 3s 1s; 10 11/* 多重動畫 */ 12animation: 13 3s linear slidein, 14 3s ease-out 5s slideout; 速度曲線 我們在前面不管是設定 transition 還是 animation 都有時間曲線可以設定。可以根據你的需求做調整，也可以使用 cubic-bezier() 來自訂曲線。你可以使用這個網站生成看看，不過我覺得內建的已經很夠用了。\n圖片來源: Max\n設定速度曲線可以讓你的動畫更流暢，不會有突然爆走的感覺，也可以讓動畫更有質感。對於超連結 hover 做特效建議可以設定成 ease-out ，因為滑鼠動畫通常大家會希望有即時反應，但又不希望突然結束。\n以上就是我今天的分享，歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-4/","section":"post","tags":["HTML","CSS"],"title":"Day4 自己動! @keyframes 與 Transition"},{"body":"當你拿到一張設計圖要照著做出來你的第一反應是什麼呢？是直接套 bootstrap 再說嗎？但我幾乎所有的切版**只要是整齊能畫出網格的，我都會使用flex。**而這個網格也不一定是正方形，只要是矩形就可以了。\n什麼意思呢？假設 Google 拿了一張首頁的設計圖給我要我照著做出來（假設）\n那麼我會先看出來整個頁面被包在一個和螢幕一樣大的 flex 方框，垂直排列。而排完剩餘的空間全部給一個空白的方框。而上面的 nav 目錄方框裡面分左右兩個方框，靠兩側對齊。\n當然這沒有正確答案，但你可以發現其實只用 flex 就可以完成所有的切版作業了。因此讓我們先來認識他的基本語法吧。\nFlex 基本語法 要使用 flex 很簡單，在 HTML 請你用一個箱子包住幾個元素。比如說我建立一個 \u0026lt;section\u0026gt; 包著幾個 \u0026lt;div\u0026gt; ，並設個背景顏色方便查看，同時附上昨天學到的快捷鍵。\n1\u0026lt;!-- section\u0026gt;div*4 --\u0026gt; 2\u0026lt;section\u0026gt; 3 \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; 4 \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; 5 \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; 6 \u0026lt;div\u0026gt;\u0026lt;/div\u0026gt; 7\u0026lt;/section\u0026gt; 1section { 2 background: #191d88; /* bg #191d88 */ 3 padding: 5px; /* p5 */ 4} 5 6div { 7 width: 100px; /* w100 */ 8 height: 100px; /* h100 */ 9 background: #ffc436; /* bg #ffc436 */ 10 margin: 20px; /* m20 */ 11} 因為 div 是區塊元素 (display: block) 所以元素都會換行，而這很重要因為這樣我們才能設定他的寬高。但如果我們加上 display: flex 就可以讓他們並排。\n我們把外面包著大家的藍色元素叫做外容器，裡面叫做內容器。我們可以在外容器的CSS設定裡面的東西怎麼排。\n方向 flex-direction 1section{ 2 flex-direction: row; /* 預設左到右 */ 3 flex-direction: row-reverse; /* 右到左 */ 4 flex-direction: column; /* 上到下 */ 5 flex-direction: column-reverse; /* 下到上 */ 6} 比如說我設成 row-reverse 就會從右到左排。\n超過換行 flex-wrap 如果不設定的話瀏覽器會硬擠成一排。\n你可以加上 flex-wrap: wrap 來解放他。所有值如下\n1flex-wrap: nowrap; /* 不換行 */ 2flex-wrap: wrap; /* 太寬換行 */ 3flex-wrap: wrap-reverse; /* 換行但從下到上排 */ flex-flow 這是 flex-direction 和 flex-wrap 的縮寫，所以只要在這前後帶上相對應的值即可。\n1.flex-container { 2 flex-flow: \u0026lt;\u0026#39;flex-direction\u0026#39;\u0026gt; || \u0026lt;\u0026#39;flex-wrap\u0026#39;\u0026gt; 3} 水平對齊 justify-content 元素要對齊哪裡。注意如果你設定 flex-direction: column; 就是垂直對齊方向。這裡使卡伯斯製作的示意圖，非常清楚。\n1justify-content: flex-start | flex-end | center | space-between | space-around; 垂直對齊 align-items 你懂得，和上面相反。如果你設定 flex-direction: column; 就是水平對齊方向。\nflex-start 靠開始位置、 flex-end 靠結束位置、 center 致中、 strech 拉到一樣高、 base-line 會找文字的位置對齊。\n多行對齊 align-content 是上一個屬性的多行版本，比較少用，但排列方式也有多一些，但注意 stretch 在高度被限制的情況下不會正常伸展。\n1align-content: flex-start | flex-end | center | space-between | space-around | stretch; 內元件設定 我們會再內元件(黃色方塊)設定的 CSS 不多。我們可以使用 align-self: flex-end 設定單獨一個元素的特別往另一邊靠，也可以設定假設排完有多的空間要給誰。\nflex-grow: 剩下空間方給他幾份，預設值為 0，如果設置為 0 則不會縮放，1以上就大家來分。 flex-shrink: 反之，當空間分配還不足時的當前元件的收縮性，預設值為 1，如果設置為 0 則不會縮放。 flex-basis: 元件的基準值，可使用不同的單位值。 比如說以下是一個頁首，使用 flex-grow 把剩下的空間都給中間。\nhttps://codepen.io/edit-mr/pen/ZEVWaqq\n你可以使用 order 屬性來設定順序，前到後放入整數，支援負值。但我從來沒有用到過，都是直接在 HTML 改，不過還是提供給大家。\n如果你不熟悉 flex 的話你可以到 Flexbox Froggy 這個網站，用遊戲的方式了解 flex。(然後提示是可以直接按，不用慢慢輸入喔)\n你也可以使用今天所學到的語法複製一個 Google 的網頁。重點在排版所以按鍵的陰影和顏色可以直接打開開發者工具查看喔。我先做了一個範例提供大家參考，也能實現搜尋功能。如果有任何問題也歡迎留言。\n範例網站 | 原檔HTML | 原檔CSS\n以上就是我今天的分享，歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-3/","section":"post","tags":["HTML","CSS"],"title":"Day3 用 Flex 切遍天下"},{"body":"記得我在國一寫HTML的時候，傻傻的在那裡打小於、h1、大於、標題、小於、斜線、大於。我的朋友甚至發現了一個偷吃步就是先打好一堆大於小於，然後再填空。\n既然HTML 和 CSS 都長那樣，這種繁瑣的操作早就可以交給電腦來解決。所以今天我要和你分享如何使用 Emmet 快速的打 HTML 以及 CSS\nEmmet 可以做什麼呢？比如說我們想要建立一個一級標題，我們只需要先輸入 h1 再按下 Tab 即可，所有的標籤都可以這樣做。\n不過 emmet 不只是幫你省打兩個大於小於的時間，他還有很多的語法可以供你使用。這裡我寫出幾個我最常使用的技巧。\n基本 HTML5 架構 - ! 只要按下驚嘆號並按下 tab 就會自動生成一個基本的 HTML5 架構，非常方便。\n添加class - . 比如說我想建立一個 img 圖片元素，並加上一個 class 叫做 avatar，我只需要打\n1img.avatar 即可生成 \u0026lt;img *src*=\u0026quot;\u0026quot; *alt*=\u0026quot;\u0026quot; *class*=\u0026quot;avatar\u0026quot;\u0026gt;。而如果要建立的是一個div元素，因為平常大家太長用 div 了，直接打 .avatar 就可以了\n包在裡面 - \u0026gt; 比如說我想要建立一個 li 清單包著一個超連結 a 元素，那麼只需要打\n1li\u0026gt;a 即可生成 \u0026lt;li\u0026gt;\u0026lt;a *href*=\u0026quot;\u0026quot;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt;。可以無限往下包\n以及 - + 就跟 CSS 選取器 + 一樣，就是加在後面。比如說標題後面常接文章，我們就可以打\n1h2+p 生成 \u0026lt;h2\u0026gt;\u0026lt;/h2\u0026gt;\u0026lt;p\u0026gt;\u0026lt;/p\u0026gt;\n乘以 - * 比如說我們要建立清單，你可以打 li*3\n可以搭配前面的大於符號，效果如下\n1\u0026lt;!-- ul\u0026gt;li*3 --\u0026gt; 2 \u0026lt;ul\u0026gt; 3 \u0026lt;li\u0026gt;\u0026lt;/li\u0026gt; 4 \u0026lt;li\u0026gt;\u0026lt;/li\u0026gt; 5 \u0026lt;li\u0026gt;\u0026lt;/li\u0026gt; 6 \u0026lt;/ul\u0026gt; 括號 - () 就說你想的那樣。延續前面的例子,假設你要生成三個li元素，而每個都是超連結，你不能只打 li\u0026gt;a*3，因為這樣會變成一個li元素裡面有三個超連結。不過這時我們只需要加上括號就可以了\n1\u0026lt;!-- ul\u0026gt;(li\u0026gt;a)*3 --\u0026gt; 2 \u0026lt;ul\u0026gt; 3 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 4 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 5 \u0026lt;li\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/li\u0026gt; 6 \u0026lt;/ul\u0026gt; 內文 - {} 比如說剛才我們製作了一個目錄，但裡面我們想要先插入一點字，只需要加上中括號之間打內文就可以了\n1\u0026lt;!-- a{連結}*3 --\u0026gt; 2\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結\u0026lt;/a\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結\u0026lt;/a\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結\u0026lt;/a\u0026gt; 插入索引值 - $ 比如說你想要內文分別是連結1，連結2，連結3，那麼你可以打\n1\u0026lt;!-- a{連結$}*3 --\u0026gt; 2\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結1\u0026lt;/a\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結2\u0026lt;/a\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;連結3\u0026lt;/a\u0026gt; 再來一個範例，今天我們要輸入五個 li 標籤，標籤的 class name 分別為 list-1、list-2、list-3、list-4、list-5，輸入 li.list$*5 就可以了。\n如果要從不是1的數開始計算可以在 $ 後面補上一個 @ 告訴它從哪裡開始。比如說要從 5 開始就輸入 li.list$@5*5\n如果你想要編號自動補0的話可以多打 $ 。幾個 $ 就是幾位數，比如說 $$ 就是從01開始數\n這兩個我可以說是從來沒用過，但還是補充給大家\n屬性 - [] 今天你想要建立三個輸入框，並且強調他是數字輸入框，你可以把屬性直接打在中括號裡面\n1input[type=\u0026#34;number\u0026#34;] 有些人因為覺得HTML很難打很難維護因此使用 haml, slim, pug, 甚至是 Markdown 來取代 HTML…然後再用編譯器轉回HTML。我自己是覺得HTML格式都長一樣很整齊，算是非常好維護，但是每一個語言都有他自己的優勢在，有的能夠少打一些字，有的能和別的程式語言更好的溝通所以才會存在。大家只要找到自己最習慣的方式就好了。\n快速的打 CSS 應該大部分的人會發現你打 CSS 時， VS Code 會猜測你可能要打的詞，並且你只需要按 tab 就會自動完成。比如說你想換顏色，輸入 c 就會自動選擇 color，按 tab 就會自動打好。然而由於他是按照字母排得，有一些字需要幾乎打完才能選，甚至是可能會預設輸入錯誤的值。比如說你想設定 display，按下 d 並按 tab 竟然出現的是 display: inherit。我就問一年全世界有超過10個人會這樣打嗎？還需要刪除重新打，非常麻煩。\n不過 VS Code自動選字很聰明的地方是**你不需要照著字母順序打，且可以同時打屬性。**比如說如果你想輸入 display: flex 你只需要輸入 df 按 tab 就可以了。我是不知道你覺得怎麼樣啦，我是覺得很帥可以讓我瞬間打完一堆常用的 CSS。\n使用加號可以同時打好幾個屬性。以我最常使用的 flex 致中為例\n1display: flex 2justify-content: center; 3align-item: center; 可以直接打 dc+jcc+aic 就結束了。當然，同一行 CSS 有不一樣的打法，你只要找到你習慣好打的就可以了。\n你也許有看過有人打 w100 來生成 width: 100px ，不過預設的px單位可以說是越來越少用。它的原理和上面一樣就是你先打值也是可以的，比如說你想要 H1 標題變成預設字體三倍大，你可以打 fz3re。\n打fz是因為不管是 fo 變 font: optional, fn 變 font: none, ft 變 font-stretch: normal, fs 變 font-style: italic, fi 變 font: inherit, fe 變 font-emphasize\n最後補充一下，百分比%可以打 p。比如說50p 就是50%。\n你可以找你最常使用的幾款 CSS 語法記一下，再搭配 Copilot 就整個飛起來了。\n希望今天的分享對你有幫助，我自己還會搭配 Copilot 以及 Copilot Chat 一起使用，可以更進一步的提升你的效率。如果你們有興趣想聽船長是怎麼帶我飛的可以在留言去告訴我，也歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技，也歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見。\n","link":"https://EM-Tec.github.io/post/2023ironman-2/","section":"post","tags":["HTML","CSS"],"title":"Day2 如何打的更快 | Emmet \u0026 預測輸入"},{"body":"哈囉大家好我是毛哥EM，歡迎來到 【不用庫 也能酷 - 玩'轉 CSS \u0026amp; Js 特效 】\n在這30天裡面我會先帶大家複習一些許多人搞不懂但很重要的語法，接者將揭開如何以最精簡的代碼，實現從簡單到複雜的特效，讓元素變得生動有趣。同時，我們也將挑戰自己，使用純JavaScript實現無需依賴庫的互動，從而提高網站效能和速度。\n基本上如果你有追蹤且照著順序讀下來大部分的內容都會滿輕鬆的。而如果你是一位大神的話也歡迎沒事來逛逛，搞不好你會找到你沒聽過的各種冷知識喔w\n無論你是前端初學者還是經驗豐富的開發者，這個系列都將帶給你嶄新的思維。帶你製作令人驚艷的網站。\n背景 第一天來講一下為什麼我要來寫這個系列。我從小學三年級開始玩 Wix（類似 WordPress 或 Google Site 的視覺化網頁編輯器），做網頁就像做簡報一樣拉一拉就好了。不過做出來的網頁預設載入了一大堆厚重的函式庫，明明只是淡入淡出還需要GSAP。，載入6、7秒都算正常發揮。當時雖然不會 HTML 但按 F12 也能看出機器生成的程式碼又臭又長。加上 Wix 網站會有很醜的廣告橫幅，裡面充滿了各種付費解鎖功能，還有 RWD 非常難弄，讓我決定從此走向手刻這條不歸路…\n然而並不只是機器生成的程式碼才有載入問題，在現代網頁函式庫的使用也是非常氾濫的。像是明明只是顯示號碼牌的網頁還要套 Bootstrap，因為懶得打 document.querySelector()而安裝 jQuery，甚至打開 Awwwards 隨便找一個得獎的網站都要放一個載入動畫，似乎在洗腦你好的網站就是要等待的。\n也許是我這個剛要升上高二的菜鳥不太會用函式庫，但自己做除了載入更快以外和可自訂性也比較高。只要熟悉效果後面的原理自己做是不會比較慢的。\n用庫就不酷了嗎? 然而不一定所有東西都是手刻才是最好的選擇。比如像是顯示 3D 模型的 three.js、手機擴增實境功能的 ar.js 都不是自己能夠輕鬆手刻的。現成的函式庫除了幫你省時以外大多瀏覽器相容性都不錯。你可以根據你自己開發和學習的成本取的一個甜蜜點。**做網站的方式千百種，只要能傳遞資訊和給使用者好體驗就是好網站。**不過對於簡單單一功能的函式庫，或是只需要大函式庫裡面的單一功能，那麼自己寫除了能省去學習及開發成本，也能避免一些衝突的問題。比如說這是一台車，並用以下程式把它致中。\n1.car{ 2\tposition: absolute; 3\tleft: 50%; 4\ttop: 50%; 5\ttransform: translate(-50%, -50%); 6} 我使用Animate.CSS想要製作一個車開進來的效果，只需要加入一個class就可以了…\nhttps://codepen.io/edit-mr/pen/bGObqWq\n等等我們的定位怎麼跑掉啦? 仔細一看原來 Animate.css 也是使用 transform 屬性來製作動畫，所以我們互相衝突了。\n當然你可以為了使用 Animate.css 所有的 CSS 都不使用 transform 屬性，但其實自己寫也沒有多麻煩喔，你只需要先把我們原本的 left: 50 改成出發點 0 ，製作動畫 @keyframes drive { to { left: 50% } ，然後套用到車子上就可以了。同時你對於車要動多快，加速度，時間點都可以自由地掌握。\nSee the Pen Car Move by Edit Mr. (@edit-mr) on CodePen. 我寫這一個系列並不是期待所有人都開始排斥函式庫，而是希望就算你要使用函式庫你也可以大致知道背後的原理，就像你不該先學習 React 再學習 JavaScript 一樣。這樣你除了走得更踏實以外，遇到問題需要微調也可以知道從何下手，而不是只會貼上範例程式。\n如果你認同我的想法的話歡迎追蹤這個系列，也歡迎在 Instagram 和 Google 新聞追蹤毛哥EM資訊密技。而如果你不會HTML和CSS但因為某種原因你讀到這裡的話，歡迎訂閱我新開的YouTube頻道：網棧。\n我是毛哥EM，讓我們明天再見\n","link":"https://EM-Tec.github.io/post/2023ironman-1/","section":"post","tags":["HTML","CSS","JS"],"title":"Day1 相見歡 - 庫就不酷嗎？"},{"body":"","link":"https://EM-Tec.github.io/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"大家都認識 Twitter 的藍色小鳥，但近期的 Logo 更改卻引起了不少爭議，許多用戶都不喜歡 iPhone 和 iPad 上面的 X。若你也是其中一員，別擔心！我將向大家介紹一個全網唯一且不需捷徑跳轉的方法，讓你在 iOS 設備上將 Twitter 換回原本的 Logo，而且這個方法不會有煩人的通知強迫你再看一次 Logo，甚至可以把原本的X軟體直接刪除。讓我們一步步來看如何實現吧！\n安裝教學 想要一個原本 Twitter 的 Logo，你可以安裝我自製的這個描述檔。\n首先請你到我的 GitHub 頁面點擊Twitter Logo.mobileconfig下載我的描述檔。 點擊後你的瀏覽器會友善的提醒你正在下載描述檔，選擇確定。\n接著請你到設定。在最上面就可以看到他提示你安裝描述檔。 請你點選安裝，上面會警告這個描述檔沒有經過簽署，因為是我自己臨時做的。只要你是從我的 GitHub 頁面下載的且作者是 Edit Mr. 就不用擔心。如果你想確認的話可以點擊 More Details 查看描述檔內容。\n安裝好之後你就會看到你的主畫面出現藍色小鳥 Logo了！沒錯就是那麼簡單。點擊後就會直接顯示網頁版的 Twitter ，因此你也可以直接刪除原本的X軟體，釋放手機空間。我個人認為在iPad上面比 App 還好用呢!排版更有效利用空間。而且在App會被要求用 email 登入，在這個版本甚至可以使用 Google 或 Apple 等方式。 不過要注意這個Twitter的Web App需要網路才可以使用，無過誰看Twitter不用網路嘛\n透過以上的方法，你可以將 Twitter 換回原本的 Logo，並享受更貼近原始體驗的使用感受。\n如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技。如果你有任何問題，歡迎直接到毛哥EM資訊密技的Instagram私訊我，我很樂意協助解決你的問題。\n","link":"https://EM-Tec.github.io/post/twitter-logo/","section":"post","tags":["自製"],"title":"iOS如何把Twitter換成原本Logo?全網唯一不用捷徑!沒有跳轉!"},{"body":"","link":"https://EM-Tec.github.io/tags/%E8%87%AA%E8%A3%BD/","section":"tags","tags":null,"title":"自製"},{"body":"","link":"https://EM-Tec.github.io/categories/%E8%BB%9F%E9%AB%94%E5%88%86%E4%BA%AB/","section":"categories","tags":null,"title":"軟體分享"},{"body":"哈囉大家好，我是毛哥EM，歡迎來到網棧。\n在我們開始之前讓我先簡單介紹什麼是VSCode。VSCode是一個整合式開發環境Integrated Development Environment（簡稱IDE）。因為寫程式需要同時用到很多工具，包括寫程式的文字編輯器，終端機，瀏覽器等。這時如果你有一個軟體可以做到所有的功能，還可以在需要其他功能時直接下載擴充，是不是十分的方便！\n安裝軟體 首先請你到 Visual Studio Code 官網下載並安裝Visual Studio Code。打開安裝檔並一直下一步即可。如果顯示的版本不正確的話請你點擊箭頭選擇正確的作業系統版本。\n建立網站 進到VSCode中會顯示歡迎畫面，你可以選擇你喜歡的主題顏色佈置。我們直接來試著架設一個網頁，首先請你先開啟一個資料夾，如果沒有的話你可以建立一個。比如說我建立了一個叫做資料夾的資料夾。在VSCode中我建議你開啟資料夾而不是單一檔案，除了切換檔案比較方便以外，有一些功能也需要開啟資料夾才能使用。\n我們在資料夾建立一個檔案，命名叫做index.html。VSCode完全支援Emmet語法，我們輸入!並按下tab就會建立一個基本的HTML架構。沒錯，這才是完整的HTML，我們之前打在Codepen的HTML應該要打在\u0026lt;body\u0026gt;裡面。第一排的\u0026lt;!DOCTYPE html\u0026gt; 是在告訴瀏覽器使用最新的HTML5，\u0026lt;head\u0026gt;是放使用者看不到的網頁資訊，而\u0026lt;body\u0026gt;就是頁面內容。讓我來嘗試打開這個HTML檔案。點擊文件並且按下alt+shift+r或是點擊右鍵選擇在檔案總管開啟。雙擊使用瀏覽器打開。\n你可以把視窗往螢幕的右側頂就會填滿右半部，左半部選擇VSCode即可完成左右畫面切割。對於製作網頁即時預覽非常方便。\n擴充功能 Live Server - 即時預覽 不過你可以發現每次編輯完存檔後右邊的瀏覽器都需要重新整理，非常麻煩，而且如果你使用久了，你會發現很多網站功能會失效。因此我建議你安裝一個擴充功能叫做Live Server。切換到擴充功能分頁並且安裝後，點擊右下角的Go Live就會自動架設本地的網頁伺服器，並顯示你的網頁。只要編輯完按control+S存檔就會即時同步更新。\nIndent Rainbow - 縮排彩虹 我建議你安裝一個擴充功能叫做Indent Rainbow - 縮排彩虹。他會幫你用不同的顏色標記每個縮排，在閱讀複雜文件時非常有用。\nVS Code Pets - 養隻寵物吧 一個人寫程式非常孤獨，但是你可以在VSCode裡養寵物。下載VSCode Pets擴充功能你就可以在VSCode視窗裡面養寵物，且我有把它翻譯成中文（對了，如果你看不慣英文介面VSCode也有繁體中文擴充功能可以安裝），你可以在設定裡改變寵物大小，場地背景以及開啟丟球模式。點擊+可以生成更多寵物，讓他們陪伴你度過痛苦的寫程式時光。\nNight Owl - 看起來舒服的主題 一直看著同一個畫面長時間會感到膩和煩躁。一個好看的主題可以讓你的眼睛更舒服。我十分喜歡Night Owl這個主題，對於不同資料型態的顏色和字體區分讓我開發起來很有效率，且長時間注視不會不舒服。\nCopilot / Tabnine - 讓AI助你一臂之力 我還建議你安裝GitHub Copilot。他會在你寫程式的時候預測你之後要打的內容，可以大幅加速你開發的效率。不過Copilot對於非學生是需要付費的，如果你有的話可以登入你的GitHub帳號驗證。如果沒有的話，使用Tabnine也有不錯的效果。你在寫程式的時候，他自己就會幫你猜下一行。你也可以透過註解要求他生成指定的內容比如說這裡我要求他生成一個質感設計的按鈕。\nMaterial Desig Icon - 好看圖示 最後我推薦你安裝一個圖示的擴充功能，它會給不同種類的檔案不同形狀的符號，讓你更輕鬆的找到檔案。我自己是使用Material Design Icon，我覺得滿好看的。\n總結 好啦，以上就是我對VSCode的分享。我們還剩下git的功能還沒有提到，讓我們下禮拜再繼續聊。\n週一早上六點，我會在YouTube和各大Podcast平台不定時更新。如果你喜歡文字版，也歡迎在Instagram和Google新聞追蹤毛哥EM資訊密技。 我是毛哥EM，讓我們下週再見！\n","link":"https://EM-Tec.github.io/post/webpallet-4/","section":"post","tags":["HTML"],"title":"VS Code 教學與你值得擁有的擴充功能"},{"body":"","link":"https://EM-Tec.github.io/series/%E7%B6%B2%E6%A3%A7/","section":"series","tags":null,"title":"網棧"},{"body":"哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我要讓你10分鐘學會所有常用的CSS語法\nCSS的功能是來裝飾HTML的，因此這部影片假設你已經會使用Codepen和HTML了，如果還沒有的話建議你先去看EP.2 十分鐘完結HTML喔。有一些部分可能比較難理解，但我相信你只要多練習幾次就可以了。\n簡單的CSS 首先請你先建立一個h1標題。\n1\u0026lt;h1\u0026gt;我是標題\u0026lt;/h1\u0026gt; 如果你想讓它變成藍色的話你可以這樣打CSS\n1h1 { 2color: blue; 3} 這樣就可以了，你可以試試看改成其他顏色，例如紅色、綠色、黃色等等。\n接下來我們要來改變字體大小，你可以這樣打\n1h1 { 2color: blue; 3font-size: 50px; 4} 我們來看一下CSS的結構。h1是選擇器，代表我們要選擇的元素，而color和font-size是屬性，代表我們要改變的屬性，blue和50px是屬性質，代表我們要改成的值。選擇器有很多種，我們來看一下最常用的幾種。\n選擇器 元素選擇器: 比如說h1就是選擇所有的h1元素 所有後代: 比如說*就是選擇所有的元素 後代選擇器: 比如說 nav a就是選擇所有nav裡面的a元素 親代選擇器: 比如說 ol \u0026gt; li 就是選擇所有ol裡面的li元素。而如果是ol裡的li裡的li就不會被選到。 群組選擇器: 比如說 nav, a就是選擇所有nav元素和a元素 相鄰兄弟: 比如說 h1 + p就是選擇h1正後方的那一個p元素 一般兄弟: 比如說 h1 ~ p就是選擇h1後面的所有p元素 屬性選擇器: 比如說 a[href=\u0026quot;https://twitter.com\u0026quot;]就是選擇所有連結到twitter首頁的a元素 屬性網址包含某字是使用星號: a[href*=\u0026quot;tuts\u0026quot;] (比如說nettuts.com、net.tutsplus.com、tutsplus.com) 屬性開頭是使用上箭頭caret符號: a[href^=\u0026quot;http\u0026quot;] 屬性結尾是使用錢符號: [href$=\u0026quot;.jpg\u0026quot;] 權重 當有兩個CSS是在描述同一個元素，那們瀏覽器要聽誰的呢?這個時候我們就會看權重。有兩個規則\n權重越高，就越有權力 你女朋友說你很醜，早餐店阿姨說你是帥哥，那麼你應該很醜，因為女朋友權重比較重。\n權重從高到低分別是\nID 選擇器 類別選擇器、屬性選擇器、偽類選擇器(如:root) 元素選擇器、偽元素選擇器 任何元素選擇符*沒有權級 記得是可以相加的喔，這裡有一個計算機，如果不確定的話可以試試看。\n如果你想要讓你的樣式宣告比較有權力，你可以使用!important，但是這個方法不是很好，但是如果真的沒辦法讓你的樣式宣告生效的話，你可以使用這個方法。\n權重如果相等，後寫的樣式宣告會蓋過先前的樣式宣告 就像你女朋友在剛交往時很愛你，但是後來你變得很醜，所以她就不愛你了。那麼他不愛你了，因為要以後面的為主。\n各種單位 接下來我們來看一下各種單位。CSS有很多種單位，我們來看一下最常用的幾種。\n顏色 今天假設你想表示紅色，你可以使用以下幾種方式，都是一樣的效果\n1h1 { 2color: red; /* 顏色名稱 */ 3color: #ff0000; /* 16進位HEX碼 */ 4color: rgb(255, 0, 0); 5color: rgba(255, 0, 0, 1); /* RBG加上A透明度 */ 6color: hsl(0, 100%, 50%); /* HSL分別代表色相、飽和度、亮度 */ 7color: hsla(0, 100%, 50%, 1); /* HSL加上A透明度 */ 8color: color(display-p3 1 0 0 / 1); /* 使用color可以顯示RGB不能表示的顏色，我們之後再來討論 */ 9} 大小 接下來是大小單位\n1h1 { 2font-size: 100px; /* px是像素 */ 3font-size: 10rem; /* rem是相對於系統設定的字體大小 */ 4font-size: 10em; /* em是相對於父元素的字體大小 */ 5font-size: 10vw; /* 10vw是相對於螢幕寬度10% */ 6font-size: 10vh; /* 10vh是相對於螢幕高度的10% */ 7font-size: 10vmin; /* vmin是相對於螢幕寬度和高度的最小值的百分比 */ 8font-size: 10vmax; /* vmax是相對於螢幕寬度和高度的最大值的百分比 */ 9font-size: 10%; /* %在不同時候的意思不太一樣，但原則上就是你想的那樣...嗯對 */ 10} width跟height的%基準是父層 line-height以本身文字行高為基準 接下來我們來有效率的一次認識所有常用的CSS語法吧\n裝飾文字 語法直接全上!\n1h1 { 2 color: red; /*顏色*/ 3 font-size:1em; /*字體大小*/ 4 letter-spacing: 10px; /*字體間距*/ 5 line-height: 1.5; /*行高。通常會用數字代表正常高的倍數 */ 6 font-weight: 500; /*字體粗細，數字最大900，越大越重，預設*/ 7 text-decoration:underline; /*底線，最長是用none來把超連結醜醜的底線移除*/ 8 font-style:italic; /*斜體*/ 9 Opacity:0.5; /*不透明度*/ 10 text-align:center; /*文字對齊方向*/ 11 font-family:arial, sans-serif; /*字體，如果第一個沒有就依序往後*/ 12} font-weight font-weight是字體粗細，有以下幾種寫法\n1/* 關鍵字 */ 2font-weight: normal; 3font-weight: bold; 4 5/* 比較級關鍵字 */ 6font-weight: lighter; 7font-weight: bolder; 8 9/* 絕對的數值 */ 10font-weight: 100; 11font-weight: 400; /* 正常 */ 12font-weight: 700; /* 粗 */ 13font-weight: 900; text-decoration text-decoration是裝飾文字，有以下幾種寫法:\n1text-decoration: underline; /*底線*/ 2text-decoration: overline red; /*上線並且是紅色*/ 3text-decoration: none; /*沒有裝飾*/ 4text-decoration-color: #ff00ff; /*裝飾的顏色*/ 背景 background-color background-color是背景顏色\n1background-color: #ff0000; background-image background-image是背景圖片，可以用url()來指定圖片位置\n1background-image: url(cloud.png); 2background-repeat: no-repeat; 3background-size: cover; /* 寬填滿 */ 4background-size: contain; /* 高填滿 */ 5 6background-position: top left; 7background-position: 20% 40%; /* 從左上開始算 */ 8 9background-attachment: scroll; /* 不動但可以往下滾 */ 10background-attachment: fixed; /* 卡住不動 */ 11background-attachment: local; /* 一起動 */ 漸層 漸層的邏輯可以參考我的網頁漸層指引(然後你可以順便按讚追蹤)\n語法可以直接寫多個顏色，在空白後寫佔的比例。\n1background: linear-gradient(#333, #333 50%, #eee 75%, #333 75%); 這個比例可能跟你想像的不太一漾，漸層開始的位置是0%，漸層結束的地方是100%。你寫的百分比代表你寫的位置的顏色，顏色間會自動平分，如果沒有寫就會自動平分。前面可以加入關鍵字表示漸層方向。12點是0度，依序循轉漸進。\n1background: linear-gradient(#e66465, #9198e5); 2background: linear-gradient(0.25turn, #3f87a6, #ebf8e1, #f69d3c); 3background: linear-gradient(217deg, rgba(255,0,0,.8), rgba(255,0,0,0) 70.71%), ![](https://i.imgur.com/XUupJaf.png) border 邊框。分成border-top,border-bottom, border-left, border-right，或是使用border一次指定所有的\n1border-style: solid; /* 花邊，Solid是預設的直線 */ 2border-width: 10px; /* 寬度 */ 3border-color: #00ff00; /*邊框顏色 */ 4border: solid 10px hsl(0 ,100%, 100%); /* 縮寫 */ border-radius 圓角。單位可以是半徑或著是百分比。所以如果你設成50%就會變成圓形。如果有兩格值就是上下和左右，四個就是上右下左。\n1border-radius: 四個角; 2border-radius: 左上角與右下角 右上角與左下角; 3border-radius: 左上角 右上角 右下角 左下角; 4border-top-left-radius: 10%; outline outline位置在border的外緣，但不佔用元素的任何空間。原則上我通常不會想用到它，因為border比較好用。 outline不能夠聲明單邊樣式，它一定是圍繞呈現的。\noutline的形狀可以不規則，它會順著border邊緣顯示，不一定得是矩形。可是目前大多數的瀏覽器不支援該特性。實際上驗證之下會發現outline並不會去適應border-radius的圓弧。\n1outline-style | outline-width | outline-color | outline-offset Box-sizing 可以指定元素大小的計算方式。\n1box-sizing:content-box; // 把寬度範圍指定給內容物的空間 2box-sizing:border-box; // 把寬度範圍指定給整個邊框到邊框之間的空間。 所以在 block 元素中只要設定 box-sizing:border-box; 就不用另外再計算padding、border 的寬度造成 width 賦予的值不直覺。\n假設 width:300px, padding 就算加了 20px, border 加了4px，寬度依舊是300px。\ndisplay CSS的Display屬性可以改變元素對外所參與的佈局環境（outer display type），白話文就是元素怎麼排。\ninline: 像文字一樣左到右上到下，不能決定寬高 block: 佔滿\u0026lt;body\u0026gt;整排，下一個東西會換行 contents: 只有contents area的box，只顯示內容文字。 inline-block: 保持像block一樣得特性，可以設長寬等等，但一樣從左到右排 display: none Bang不見 block 是有面積的，可以設定寬跟高 inline 設定寬高無效，可以設定 padding 的左右值，上下值無效，無法被撐開。 inline-block 同時擁有兩種 display 的特性，可以設定寬高，但也可以與其他元素並排。 如果使用 inline-block(像是 a 或 li 設定)，標籤之間會有空白字元約 4~5px\n也可以為元素創造內部的佈局環境，提供後代元素佈局的規則（inner display type）。對內創造的佈局例如：\nflex\n彈性盒佈局，該屬性值的元素本身對外仍參與normal flow，可是內部環境為獨立的flex formatting context。 grid\n格線佈局，該屬性值的元素本身對外仍參與normal flow，可是內部環境為獨立的彈性盒佈局grid formatting context。 這些我們之後會再細細討論。\nfloat 用法 常見用法像是文字繞圖片的特效。none是正常排，left就是去左邊，right是去右邊。\nnone left float是我比較少用的CSS，因為會遇到一些問題比如說float collapse\n當然解決方法很多，列幾個\n元素的float參數不為none 元素的position參數為absolute或fixed 元素的display為inline-block overflow參數不為visible的block元素 display參數為flow-root的元素 Clear 1clear: left|right|both; 可以讓左/右不會重疊到\nPosition 功能是設定物件定位時所要的參考對像。可以用的有\n1position:static | relative | absolute | fixed | sticky; static 原始定位 inline往右，block往下\nreletive 相對定位 我原本該在哪裡位置就佔著，但我可以看起來要往右/下...\nabsolute 絕對定位 會以reletive的位置來定位，接著再用top left bottom right排。有一個口決:父相子絕，就是外面用relative,裡面用absolute。\nfixed 貼著視窗，卡在那裡，原本位置不再佔據。\nsticky 以自己為基準，卡在那裡，但sticky元素仍然in flow，元素佔位會保留。\nTransform 原本位置佔著，但是可以做出各種效果如rotate 旋轉\nTransform: translate 可以改變元素定位的參考位置，最常見的是把參考點變成元素正中間，方便定位。\n1transform: translate(單位或百分比, 單位或百分比); 2transform: translateX(單位或百分比); 3transform: translateY(單位或百分比); 單位值為多少就平移多少，然後transform支援負值\n1.translate { 2 background-color: pink; 3 transform: translate(100px, -50px); 4} translate的百分比基準是自己的width跟height\n來一個推方塊範例\n1.outer { 2 position: relative; 3} 4 5img { 6 position: absolute; 7 top:50%; 8 left: 50%; 9} 再來往左上推: transform: translate(-50%, -50%);\n就做到致中的效果啦\ntransition 轉場 當元素因為各種原因改變屬性質，比如說javascript改的或著是因為元素被點擊等等。會在指定時間平滑的切換過去，做出簡單的動畫。\n1transition: 屬性 轉換時間 延遲執行動畫的時間 速度; 2 3transition:all .3s 0s ease;// 設定全部 0.3秒轉換 沒有延遲 ease為預設值 4transition: padding .3s 0s, background-color 1s 1s; // 可以各別設定，用逗號分開，並用延遲時間設定出現的先後順序 任何屬性都可以設定transition，比如說文字段落滑過要變色也可以。\noverflow 假設元素超過了框框的大小。可能是父原素的大小有可能是超過了螢幕的大小。這時候我們可以使用overflow屬性來決定要怎麼處理。最常用的是hidden隱藏、auto自動還有scroll，也就是顯示滾動軸。\n1/* Keyword values */ 2overflow: visible; /* 可突出 */ 3overflow: hidden; 4overflow: clip; /* 禁止所有滾動 */ 5overflow: scroll; 6overflow: auto; 7overflow: overlay; /* 不佔空間的auto */ 8overflow: hidden visible; Media Media可以告訴瀏覽器在不同的螢幕大小該如何呈現。這個是基本的語法。\n1@media screen and (條件) and (條件)...{ // 判斷式，用在screen螢幕的媒體 2} 語法有很多不同的寫法，我決定教你一個雖然是最近出來，但是絕對是最好理解的屬性。\n1@media (height \u0026gt; 600px) { 2h1{ 3font-size:2em; 4} 他的意思是說假設螢幕寬度大於600像素，那麼大標題就要以正常字體的兩倍大顯示。\n偽類 偽類可以讓我們針對特定的元素狀態或條件應用樣式，這使得我們可以更好地控制和美化網頁的外觀。\n在CSS中，偽類以冒號（:）開頭，並在選擇器後面添加。它們可以根據元素的特定狀態或其他條件應用樣式，例如當滑鼠懸停在元素上方時，或當元素是其父元素的第一個子元素時。\n以下是一些常見的CSS偽類：\n:hover：當滑鼠懸停在元素上方時應用的樣式。這是一個常見的偽類，常用於添加互動效果，例如當滑鼠懸停在按鈕上時改變其背景顏色。 :active：當元素被激活時應用的樣式。通常用於按下按鈕或鏈接時，以顯示按下效果。 :visited：應用於已訪問過的連結的樣式。這使得訪問過的連結可以與未訪問的連結區分開來。 :first-child：選擇父元素的第一個子元素。這使得我們可以針對列表中的第一個元素或表格中的第一列應用特定的樣式。 :nth-child()：選擇父元素中特定位置的子元素。這個偽類允許我們按照一定的模式選擇元素，例如 :nth-child(2n) 可以選擇所有偶數位置的元素。 比如說你想要元素在滑鼠放在上面時往上移一點，有選牌得感覺，你可以這樣打\n1.card:hover{ 2 transform: translateX(-10px); 3} 4 5這只是偽類的一小部分，還有其他更多的偽類可供使用。使用偽類，我們可以根據特定的條件和狀態來微調網頁的樣式，使其更具交互性和吸引力。 6 7 8## 偽元素 9 10最後我們來談談偽元素 11跟偽類的差異在於，偽類是基於真實存在的元素去選取不存在的class，而偽類則是基於存在的元素，創出一個虛擬的元素。它的選擇符是::雙冒號。 12 13直接看範例，你們就懂了 14 15```html 16\u0026lt;p\u0026gt;大家好\u0026lt;/p\u0026gt; 1p::before { 2 content: ”哈囉“; 3} 哈囉大家好\n沒錯就是這麼簡單，通常我們會拿它來做視覺效果。比如說在開啟新分頁的超連結旁邊放一個小小的箭頭符號。\n總結 好啦，今天我們介紹了許多不同的CSS屬性。這些已經是最常用的屬性了，但礙於篇幅我們有一些沒有講的很詳細。如果你想知道更多的屬性，可以到MDN查詢。下一週我們要來介紹如何使用VSCode這個酷酷的「整合式開發環境」。\n每週一早上六點，我們會在YouTube和各大Podcast平台不定時更新。如果你喜歡文字版，也歡迎在Instagram和Google新聞追蹤毛哥EM資訊密技。 我是毛哥EM，讓我們下週再見！\n","link":"https://EM-Tec.github.io/post/webpallet-3/","section":"post","tags":["CSS"],"title":"EP.3 10分鐘 基本CSS教學"},{"body":"","link":"https://EM-Tec.github.io/tags/ios/","section":"tags","tags":null,"title":"iOS"},{"body":"iOS17, iPadOS17在6/6號發佈，隔天就開放給我們使用了，可以說是最快的一次。這一次的更新不是炫砲的功能，而是質感的大提升。滿滿的細節升級享受絲滑的體驗，發布會Ai不提但滿滿的都是人工智慧和深度學習。\n毛哥我這兩天很忙，使用我M1 iPad Pro的量非常大。從文書處裡到影片剪輯都有使用到。因此經過了所有功能完整的體驗，我來跟大家分享一下我的心得。如果你看到其他部落格或YouTuber提到的功能我沒提到那就是明明之前就有了，看他在唬爛。\n更新 這一次的更新不算太久，整個過程大約30分鐘，進度條會跑兩次，都是到1/3就直接跳到滿了。\n鎖定畫面更新 首先是鎖定畫面的更新，這次的更新移植了iOS16的自訂功能，讓鎖定畫面變得更加的有質感。\n首先是鎖定畫面的小工具，小工具的位置會由上往下排，但是我比較喜歡在中間的感覺所以我自己寫了點程式做了個透明小工具(之後再來出教學，你們每周盯我更新網棧真的有夠累)。\n整體來說我覺得非常好看。提醒事項可以直接打勾互動，非常方便。不過需要先解鎖，所以不用擔心誤觸或是別人亂按。\n直過來背景上方會逐漸變暗來凸顯時間，我覺得處裡的非常好，不會太過於突兀。而播放音樂也和iOS16一樣有這個\n背景桌布由逍遥吖提供，我自己非常喜歡。iPad可以套用各種濾鏡，但是我覺得這個背景很好看了，所以就沒有套用其他的濾鏡了。\n本來是想要測試人物微微遮住時鐘的立體效果，但是似乎插畫雖然在圖片長按可以去背但是在鎖定畫面上還是會被遮住，有點可惜。\n有趣的是內建的行星都不會突出，但是人物及動物則會。我認為應該是個Bug，因為在發布會上的Demo影片中，行星也是會突出的。\n你可以設定桌布在主畫面的模糊程度，避免背景太花俏導致看不清楚圖示。\n計時器 計時器在計時當中可以點擊有上角的＋號新增多個計時器，且可以看到計時器的歷史紀錄。\n計時器會以通知顯示。比起之前在時鐘下面小小的時間多出了互動的按鈕，也讓計時器變得更明顯。\n桌面 \u0026amp; 小工具Widget 更新之後的APP名稱加上了陰影，在淺色背景中可以更清楚的看到。而Widget有可以有互動功能，不需要進到App中即可直接執行。位置也可以隨意擺放，不會自動對齊。\n不過APP還是會自動對齊，如果想要空白可以參考這篇教學建立透明小工具。\n輸入法優化 現在語言切換會以圓形顯示，不會再像之前一樣長長的文字在畫面正中間。整體使用不管是動畫還是位置都非常流場，眼睛不用移開游標。而顏色也會跟著App顏色主題做變化。而注音輸入多了部首排序以及筆畫排序，可以更快速的找到想要的字。且輸入會自動預測語詞，不用再一個一個打。英文甚至會提前顯示猜你要打的詞，不用再打完整個單字。\n備忘錄PDF優化 PDF可以以小、中、大顯示，且點擊簽名按鈕不只可以簽名，甚至為自己判斷輸入框的大小，可以直接在上面輸入文字。如果沒有顯示也可以自己插入文字方塊，不過就是插入位置是以你按的位置為中心，佐以都會偏左。\n無邊記 無邊記是我自己非常喜歡的一款筆記軟體，不管是拿來做筆記、與朋友討論專案、或者是在寫成程式來做運算都非常方便。\n心智圖 而這次加入了心智圖的功能，可以建立形狀之後，拉線條往4周再建立不同的形狀。只需要點擊右下角流程圖按紐即可。隱藏格點的按紐改到他的右邊，我自己是習慣開著。\n尺規\u0026amp;水彩 在截圖編輯時還可以使用尺規，結果在這裡既然沒有辦法使用。現在終於有了，可以控制旋轉角度畫出直線。且顏色選擇變得更方便。畫圖形長按會自動變成幾何圖形\n這次更新多次了水彩筆刷，還蠻好看的。同樣支援感斜感壓，副廠也可以。\n翻譯 翻譯變得更精準且介面重新設計過。之前常常遇到語言辨識亂辨識的情況完全改善了。\n輔助使用 標籤 就是按紐右邊多出了一個標籤，個人覺得實用性不高。\n按鈕形狀 理論上應該是按紐會出現形狀，但是我測試了很久都沒有出現，不知道是不是我用的方法不對，還是是一個Bug。且我印象中之前這個功能是有的。\n增加對比 可以增加對比度，讓顏色更鮮明，在光線亮的環境下可以看得更清楚。\n個人聲音 這個功能是可以輸入文字，iPad會幫你唸出來。效果很好，且任何字他都會念。\n如果你想要個人聲音(官方說可以在別人打電話來你不方便打電話的時候代替你說)請到輔助功能設定，不過目前只支援英文。勸你想清楚確定有一段時間再建立個人聲音，你需要念166句英文，上面寫15分鐘我實際念了半小時 (正好下午是英文辯論賽當練習，也許我拿MVP他也有功勞吧)\n聲音念完可以下載下來。個人聲音建立深度學習需要時間(大約一整天)，且要一邊沖著電才會訓練。\n效果不錯但是還是聽得出來不是真人，但已經很接近了，比網路上的語音合成好很多。\n敏感內容 現在開Safari進入無痕模式會需要先通過FaceID才會開啟。且可以再設定開啟如果別人發送訊息的內容有敏感內容會自動遮蓋，點擊後才會顯示。支援Airdrop, iMessage, 和影音訊息。不過我平常沒有再看敏感內容所以就留給大家自己體驗了。\nSiri 直接念Siri就可以了，不用念Hey Siri。反應稍微變慢但還可以接受\nBug 整體使用起來沒有太大問題，電池耗電無感，但是還是有一些小問題，原則上不影響使用。例如使用iPad會有背景圖片忘記轉，小工具不能用拉的，幕前調度超過5個剛開始會死機後來就是把最後面的移走，還有更新後出現很多沒連接過的藍芽裝置。偶爾卡頓跑版， 都是小問題偶爾出現不影響使用。\n我也要玩iOS17! 如果你也想要跟我一起受災可以參考我寫的這片文章。\n我遇到問題 我有整理翻譯官方釋出錯誤及解決分案提供參考\n如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技。如果你有任何問題，歡迎直接到毛哥EM資訊密技的Instagram私訊我，我很樂意協助解決你的問題。\n","link":"https://EM-Tec.github.io/post/ipados17/","section":"post","tags":["ios"],"title":"iPadOS 17 真實心得 官方沒講的秘密，質感體驗的大升級（不斷更新）"},{"body":"iOS17在6/6號發佈，且在昨天釋出測試版。以下是我整理出來目前Apple官方釋出遇到的問題及解決方案，希望能幫助到你。\n如果你想知道要如何提前預覽iOS17，你可以參考我寫的這片文章。資訊是我從Apple的開發者資料整理而成，我會在這兩天發布我iPadOS 17的使用心得，敬請期待\n問題整理 iOS \u0026amp; iPadOS 17 Beta Release Notes\n一般 已知問題\n安裝了大量應用程式的設備在更新文件系統格式時會顯示帶有進度條的蘋果標誌，時間會延長一段時間。這是升級到 iOS 17 beta 的第一次遷移。 (109431767) Accelerate 框架 新功能\n更新包括： Spatial 為 Spatial 角度類型引入三角函數功能 為 Spatial 旋轉引入球面線性插值 為 Spatial 旋轉引入擺盪-扭曲分解 BNNS 引入 BNNSRandomFillCategoricalFloat，用於以事件概率從分類分布中填充張量的隨機值 引入最近鄰居計算 vImage 引入 vImageConvolveFloatKernel_ARGB8888，用於對每通道 8 位、4 通道交錯影像應用卷積，使用 32 位浮點權重 引入 vImageSepConvolve_ARGB8888，用於對每通道 8 位、4 通道交錯影像應用可分離卷積 將泛洪填充、透視變換和新的查找表變換添加到 vImage.PixelBuffer (105830806) 無障礙功能 已知問題\nVoiceOver 可能無法在某些文本字段中朗讀預測文本。 (108858169) 解決方法：用戶可以在設置應用中暫時禁用預測文本。 創建個人語音後，您可能無法選擇此語音用於現場演講。 (109580709) 解決方法：重新啟動設備，然後再試一次。 AirPlay 已知問題\niPad Pro (10.5 英吋) 或 iPad Pro (第二代 12.9 英吋) 目前不支援 AirPlay 鏡像。使用 iPad 作為 Mac 的擴展顯示器可能也會受到影響。 (109683501) AirPods 已知問題\n在 iOS 和 macOS 的設置中，按住 AirPods 按鈕只會將噪音控制旋轉保存在本地設備上。 (110266311) 使用 macOS 回答 iOS 的 FaceTime 通話並使用 AirPods 軸，可能會處於無法靜音的狀態。 (110266339) 解決方法：重新啟動機器。 macOS 上的 Spotify 應用程式會自動將 iOS 上的 Spotify 音頻路由到無聲。 (110266347) 在 Adaptive Audio 的教學卡片中，AirPods 的顏色可能在深色模式下反轉。 (110266361) 應用程式意圖 已知問題\n在 Shortcuts 應用程式中，DeprecatedAppIntent 協議可能不會將 App Intent 標記為已棄用。 (103277731) Widget 配置和 Shortcuts 編輯器中顯示的 UI 可能不會遵守陣列 @Parameter 的大小。 (109050453) Widget 配置、專注過濾器和 Shortcuts 編輯器可能無法配置某些測量維度。 (109114787) Apple Studio Display 已知問題\n在播放音頻時拔下 Apple Studio Display 可能導致顯示器繼續循環播放最後一秒的音頻。 (105232584) 解決方法：將顯示器重新插入設備數秒，直到循環播放的音頻停止。或者，將顯示器斷電數秒。 輔助存取 新功能\n輔助存取提供了另一種 iOS 使用體驗。可以在「設定」\u0026gt;「無障礙」\u0026gt;「輔助存取」中配置並啟用輔助存取。要結束輔助存取，請三次點擊側邊或主頁按鈕，然後輸入配置的退出密碼。 (109227206) 已知問題\n在通話中，結束通話按鈕可能無法使用。 (107597320) 解決方法：強制重置設備。 音頻編解碼器 棄用功能\n不再支援 QDesign 音頻編解碼器 (qdmc 和 qdm2) 和 Qualcomm PureVoice 音頻編解碼器 (qclp 和 qclq)。 (82414419) 身份驗證服務和密碼鍵 新功能\n憑證提供者 API 已擴展以支援密碼鍵。憑證提供者可以保存並提供應用程式和網站的密碼鍵。 (83501802) ASSettingsHelper 允許密碼管理器應用程式直接打開「設定」視圖，以啟用系統範圍的自動填充密碼和密碼鍵登錄的憑證提供者擴展。ASSettingsHelper 還允許驗證碼 (TOTP) 應用程式直接打開「設定」視圖，以配置打開驗證碼設定連結的應用程式。 (106351958) AVFoundation 已知問題\nAVCaptureDevice 的屬性 userPreferredCamera 和 systemPreferredCamera 的描述狀態：「此屬性始終返回一個存在的設備。」這些屬性在應用程式啟動期間的短暫時間內會返回 nil。 (109424245) 解決方法：使用鍵值觀察，並在提供第一個非 nil 結果後開始對該屬性的更改作出回應。 CarPlay 已知問題\n在與 CarPlay 斷開連接後，當其他信息仍可見時，地圖可能會呈現空白地圖視圖。此問題不會影響 CarPlay Dashboard 中的 Apple 地圖。(109433602) 解決方法：從 CarPlay 斷開連接至少 8 分鐘，或者強制退出並重新啟動地圖應用程式。 行動網路 已知問題\n在切換「設定」\u0026gt;「行動網路」\u0026gt;「行動數據」後，第六代 iPad（Wi-Fi + 行動網路）可能會顯示「無服務」。(109705637) 解決方法：重新啟動設備。 登記 已知問題\n如果設備設定了登記並且設備離線，可能會發生所要求與登記接收者共享的內容與實際共享的內容不一致。(108265124) Siri 的通告可能會重複播報部分來自登記的通知。(109409441) 會話結束後，狀態可能解除關聯，留下一個可見的即時活動。(110066137) 解決方法：開始和結束新的登記將清除即時活動。 登記目前不支援中國地區。(110069236) 內容快取 已知問題\n在「設定」中，目前的內容快取狀態可能無法正確顯示。(109496539) 內容限制 已知問題\nSiri 的「明確語言過濾器」無法啟用以下地區的設定：he-IL 和 tr-TR。(109157875) eSIM 轉移 已知問題\n在使用「從附近的 iPhone 轉移」進行 eSIM 轉移時，如果使用不同的 iCloud 帳戶或者沒有 iCloud 帳戶的設備之間進行轉移，可能會失敗。(109543664) 解決方法：在嘗試轉移 eSIM 之前，確保兩個設備都登錄到相同的 iCloud 帳戶。 Apple TV 上的 FaceTime 已知問題\n如果 Apple TV 通過以太網連接，則無法使用訪客配對功能。(107163191) 解決方法：通過 Wi-Fi 連接 Apple TV。 如果手機已經作為連接的攝像頭，並且在接聽 FaceTime 呼叫後切換到 Apple TV，可能會導致呼叫中斷。(107187159) 解決方法：先從 Apple TV 斷開手機，然後再切換呼叫。 通過點擊「切換到手機」將 FaceTime 呼叫從 Apple TV 轉移到 iPhone 可能會導致呼叫中斷。(108810085) 解決方法：要將呼叫轉移到 iPhone，首先結束呼叫，然後從 iPhone 重新開始呼叫。 在從 iPhone 移到 Apple TV 的通話中，可能會出現重複的參與者。(110087471) 尋找我的iPhone 已知問題\n對於在「尋找我的iPhone」中共享多個項目的用戶，使用安全檢查停止項目共享可能會失敗。(110141887) 解決方法：在「尋找我的」中停止共享項目。 Foundation 新功能 引入了 TermOfAddress，用於描述在語言中應該如何稱呼某人。這可以與自動語法協議一起使用，以在英語、西班牙語、葡萄牙語、法語、意大利語和德語中使用首選的代名詞和語法協議來引用人。(99745330) Foundation 現在支持使用 agreeWithConcept Markdown 屬性對一個分離的短語進行語法協議。(102595293) 模擬器上的健康應用程式 已知問題\n默認的模擬器地區設置為不帶國家代碼的 en-001。在模擬器上的健康應用程式中，缺少臨床健康記錄和與醫生共享的功能。(109408273) 解決方法：將模擬器地區設置為加拿大，然後切換回 en-US。 健康藥物 已知問題\n跟進通知可能無法按預期顯示，通知可能在鎖定屏幕上意外消失。(109246855) 之前存檔的藥物可能會意外出現在活躍的藥物時間表中，並觸發提醒。(110029786) 解決方法：將受影響的藥物從存檔中添加到活躍的藥物列表，然後重新存檔該藥物。 家庭 已知問題\n在新的家庭中，通過從附近的配件列表中選擇配件來配對第一個 Matter 配件會失敗。(109905770) 解決方法：通過掃描「添加配件」卡上的 QR 碼來配對第一個 Matter 配件。可以使用附近的配件列表配對其他 Matter 配件。 實時語音信箱 已知問題\n不能共享實時語音信箱。(105513708) 即使設備設置為靜音模式，語音信箱仍會播放。(110112187) 本地化 已知問題\n一些內容可能以英語顯示。有些字符串可能被截斷。(109393568) 鎖定模式 已知問題\n如果在啟用鎖定模式之前選擇了 2G 蜂窩服務（設置 \u0026gt; 蜂窩網絡），則鎖定模式可能無法在所有蜂窩網絡上禁用 2G。(109406777) 解決方法：如果不想在鎖定模式下啟用 2G 蜂窩服務，請選擇其他蜂窩選項，例如 3G、4G、LTE 或 5G，以確保在鎖定模式下禁用 2G。 郵件 已知問題\n郵件無法從使用 NAMESPACE 擴展的 IMAP 服務器中獲取新郵件。(109102644) 解決方法：遇到此問題的 Fastmail 用戶應將傳入郵件服務器設置更改為 imap.fastmail.com。 地圖 已知問題\n在 SwiftUI 中，如果將線性漸變筆劃與 MapPolyline 一起使用，可能會忽略指定的漸變顏色。(106152300) 在使用地圖時，Xcode 會發出運行時警告：\u0026quot;不允許在視圖更新中發布更改。\u0026quot;(106174743) 在某些縮放級別下，選定的 MKMarkerAnnotationView 的標題可能會重疊其他標記的標題。(109491779) 媒體 新功能\n在 macOS 和 iPadOS 上添加了對受管控媒體源的支持，並在 iOS 上作為預覽支持。(30320350) 網絡 新功能\n在運行 iOS 17 測試版的 iPhone 和 iPad 設備支持加入有線 802.1X 網絡。運行 tvOS 17 測試版的 Apple TV 設備也支持加入Safari 已知問題 Safari在隱私瀏覽模式下可能會使用本地模型提供搜索建議。搜索詞不會從設備發送到搜索提供商。（105606453） 在iPhone縱向模式下，如果之前沒有使用智能搜索字段進行搜索，當聚焦於智能搜索字段時，Safari可能會意外退出。（109685060） 解決方法：在橫向模式下至少進行一次使用智能搜索字段的搜索。 設置個人資料顏色可能不會反映在起始頁面背景上。（109742827） 創建新的Safari個人資料時，擴展可能會意外打開或關閉。（109796433） 解決方法：通過Safari設置管理該個人資料中打開和關閉的擴展。 獨立的Safari個人資料可能會在搜索界面中顯示其他個人資料的歷史記錄結果。（109798974） 屏幕使用時間 已知問題\n在更新到iOS 17測試版後，屏幕使用情況和應用限制、允許使用的應用以及勿擾模式設置將丟失。（109910575） 設置 已知問題\n在\u0026quot;設置\u0026quot;\u0026gt;\u0026quot;通用\u0026quot;\u0026gt;\u0026quot;關於本機\u0026quot;中，可用存儲可能與\u0026quot;設置\u0026quot;\u0026gt;\u0026quot;通用\u0026quot;\u0026gt;\u0026quot;[iPhone，iPad]存儲\u0026quot;中報告的存儲使用不一致。\u0026quot;設置\u0026quot;\u0026gt;\u0026quot;通用\u0026quot;\u0026gt;\u0026quot;[iPhone，iPad]存儲\u0026quot;中報告的存儲使用是準確的。（109051437） SKAdNetwork 已知問題\n開發者複製的後向傳遞可能無法發送或包含錯誤的轉化值或粗略轉化值。（109471751） Stage Manager 已知問題\n在使用Stage Manager時，打開切換器的手勢無法工作。（109580340） StandBy 已知問題\n如果刪除應用程序且其小部件位於StandBy小部件堆棧中，刪除的應用程序小部件不會被刪除。 解決方法：手動從StandBy小部件堆棧中刪除小部件。 StandBy中的小部件在Downtime模式或受屏幕使用時間限制時顯示內容。（105255640） StandBy模式下亮度滑塊無效。（106203217） 在紅色模式下，太陽時鐘不可讀。（108919386） StandBy小部件庫中的小部件可能顯示裁剪的內容。（108924188） 在編輯StandBy中的小部件時，無法看到來電提醒。 解決方法：退出編輯模式以查看來電。 StoreKit 新功能\n您可以使用新的showManageSubscriptions(in:) API和訂閱組ID一起顯示用戶擁有的訂閱以及該組中提供的其他計劃選項。（87853800） 用戶可以訪問新的Product.SubscriptionInfo.Status.all序列 好的，繼續使用繁體中文。\nStoreKit 已知問題\n在購買項目時，可能會出現內購提示框無法關閉的問題。（108132703） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 購買項目後，恢復購買可能無法正確還原購買。（105255551） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 購買項目後，應用可能無法正確更新用戶的訂閱狀態。（108132761） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 當用戶在購買過程中取消交易時，可能會導致訂閱狀態不正確。（108132769） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 系統 已知問題\n在某些情況下，設備可能會在進行某些特定操作時意外重啓。（107150618） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 在某些設備上，使用Face ID可能會導致設備重啓。（108195348） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 在某些情況下，設備可能會在後台運行應用程序時重新啓動。（108195472） 解決方法：嘗試關閉應用並重新打開，或者重新啓動設備。 這些是我能找到的與iOS 17測試版相關的已知問題。如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技。如果你有任何問題，歡迎直接到毛哥EM資訊密技的Instagram私訊我，我很樂意協助解決你的問題。\n","link":"https://EM-Tec.github.io/post/ios17-problem/","section":"post","tags":["ios"],"title":"所有iOS \u0026 iPadOS 17 Beta問題整理"},{"body":"哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我要讓你5分鐘學會所有常用的HTML語法。\nHTML叫做超文本標記語言(Hyper Text Markup Language)。故名思義就是標記一下文字，要記得HTML主要功能不是為了裝飾，目的是讓瀏覽器知道這個是什麼。比如說Google想知道網站標題會去找裡面的\u0026lt;h1\u0026gt;；而給盲人用的語音閱讀器在看到\u0026lt;strong\u0026gt;會加重語氣。裝飾文字是CSS的工作，下禮拜就來講）\n不過讓我們先來實際寫寫看HTML再來慢慢探討這些大道理。首先請你再瀏覽器輸入pen.new。輸入之後你會看到三個輸入框方別讓你輸入HTML,CSS,和JavaScript，還有底下的預覽區域。這個網站叫做CodePen，是一個可以讓大家互相分享網頁作品的網站。平常做網站時可以來這裡尋找靈感，或是參考別人的作法。\n首先這是一段文字。如果你想要讓它成為粗體的話請你在兩邊加入 \u0026lt;b\u0026gt; 和 \u0026lt;/b\u0026gt;。就像word一樣，B代表了bold。那麼我們把隔壁幾個鄰居也搬過來吧\n\u0026lt;i\u0026gt;是斜體(Italic)、 \u0026lt;u\u0026gt; 是底線(Underline)、而 \u0026lt;s\u0026gt; 是劃掉(Strike)。不過這幾個都只是好看而已，對於瀏覽器來說沒什麼意義，因此我比較建議你使用 \u0026lt;strong\u0026gt; 來增加重要性，而語氣轉折或想區別強調文字時使用 \u0026lt;em\u0026gt; (emphasis)。\n今天假設你建立了一個 \u0026lt;h1\u0026gt; 元素，代表一級標題(header)，但是你還想增加一個屬性告訴瀏覽器說這是一個中文的標題，這時你可以這樣打: \u0026lt;h1 lang=\u0026quot;zh-TW\u0026quot;\u0026gt; 意思是說這是一段繁體中文的標題。前面這一串我們叫做開始標記，後面的 \u0026lt;/h1\u0026gt;叫做結束標記。lang叫做屬性，而zh-TW是屬性質。\nHTML就是這樣建立一個又一個地”元素” (element) 。因為寫HTML時你需要一直重複打大於小於符號很麻煩，你知道工程師都是很懶的，所以Сергей Чикуёнок發明了emmet。假如說你想建立一個\u0026lt;h1\u0026gt;元素你只需要打h1然後按tab就可以了。\n為了方便操作我們把輸入框放到左邊，然後選一個好看的配色，然後讓我們一次認識所有常見HTML吧!順帶一題我也會告訴你這些HTML語法原本的英文單字，可能會讓你比較好理解。\n文字 以下是常的文字元素。\n1\u0026lt;p\u0026gt;段落 2 \u0026lt;b\u0026gt;粗體\u0026lt;/b\u0026gt; 3 \u0026lt;i\u0026gt;斜體\u0026lt;/i\u0026gt; 4 \u0026lt;s\u0026gt;刪除線\u0026lt;/s\u0026gt; 5 \u0026lt;u\u0026gt;底線\u0026lt;/u\u0026gt; 6 H\u0026lt;sup\u0026gt;+\u0026lt;/sup\u0026gt; 7CO\u0026lt;sub\u0026gt;2\u0026lt;/sub\u0026gt; 8\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt;元素代表段落區塊(paragraph)。\u0026lt;b\u0026gt;是粗體(bold)、\u0026lt;i\u0026gt;是斜體(italic)、\u0026lt;s\u0026gt;是劃掉(strike)、\u0026lt;u\u0026gt;是底線(underline)。\u0026lt;sup\u0026gt;是上標(superscript)、\u0026lt;sub\u0026gt;是下標(subscript)。你可以記super在上面，而訂閱按鈕Subscribe在影片下方等你去按。\n粗體斜體刪除線 底線 H+ CO2\n空白 換行 也許你有發現，在HTML中一個以上的tab、空格、換行都視為一個空格，因此你可以自由地排版保持程式的簡潔。但是如果你想要換行的話，你可以使用\u0026lt;br\u0026gt;元素換行，\u0026lt;hr\u0026gt;插入分隔線(Horizontal Rule)。而如果你想要插入一個空白的話，你可以使用\u0026amp;nbsp;。\n1橫線\u0026lt;hr /\u0026gt; 2換行\u0026lt;br /\u0026gt; 這兩個是插入一個元素而不是指定範圍，因此習慣後面會用/\u0026gt;結尾，但如果你要打\n或瀏覽器也看得懂。HTML是一種\u0026quot;好啦我看得懂就好\u0026quot;的語言，因此你就算用大寫，或著是屬性引號不加也沒關係，但是為了你和你的朋友之後維護起來不會那麼累我還是建議你遵守慣例。\n標題 接下來是標題。標題有六種大小，分別是\u0026lt;h1\u0026gt;、\u0026lt;h2\u0026gt;、\u0026lt;h3\u0026gt;、\u0026lt;h4\u0026gt;、\u0026lt;h5\u0026gt;、\u0026lt;h6\u0026gt;。\n1\u0026lt;h1\u0026gt;H1\u0026lt;/h1\u0026gt; 2\u0026lt;h2\u0026gt;H2\u0026lt;/h2\u0026gt; 3\u0026lt;h3\u0026gt;H3\u0026lt;/h3\u0026gt; 4\u0026lt;h4\u0026gt;H4\u0026lt;/h4\u0026gt; 5\u0026lt;h5\u0026gt;H5\u0026lt;/h5\u0026gt; 6\u0026lt;h6\u0026gt;H6\u0026lt;/h6\u0026gt; 建議從\u0026lt;h1\u0026gt;開始依序做使用，保持完整的架構。\n無序清單 無序清單是用\u0026lt;ul\u0026gt;元素建立的，而清單內的每一個項目都是\u0026lt;li\u0026gt;元素。\n1\u0026lt;ul\u0026gt; 2 \u0026lt;li\u0026gt;a\u0026lt;/li\u0026gt; 3 \u0026lt;li\u0026gt;b\u0026lt;/li\u0026gt; 4 \u0026lt;li\u0026gt;c\u0026lt;/li\u0026gt; 5\u0026lt;/ul\u0026gt; a b c 有序清單 有序清單是用\u0026lt;ol\u0026gt;元素建立的，而清單內的每一個項目都是\u0026lt;li\u0026gt;元素。\n1\u0026lt;ol\u0026gt; 2 \u0026lt;li\u0026gt;a\u0026lt;/li\u0026gt; 3 \u0026lt;li\u0026gt;b\u0026lt;/li\u0026gt; 4 \u0026lt;li\u0026gt;c\u0026lt;/li\u0026gt; 5\u0026lt;/ol\u0026gt; a b c 巢狀清單 而清單裡可以有清單，只要把清單放在\u0026lt;li\u0026gt;元素裡就可以了。\n1\u0026lt;ul\u0026gt; 2 \u0026lt;li\u0026gt;玉米濃湯\u0026lt;/li\u0026gt; 3 \u0026lt;li\u0026gt;鮪魚吐司\u0026lt;/li\u0026gt; 4 \u0026lt;li\u0026gt;薯條 5 \u0026lt;ul\u0026gt; 6 \u0026lt;li\u0026gt;鹽味\u0026lt;/li\u0026gt; 7 \u0026lt;li\u0026gt;胡椒鹽\u0026lt;/li\u0026gt; 8 \u0026lt;li\u0026gt;番茄醬\u0026lt;/li\u0026gt; 9 \u0026lt;/ul\u0026gt; 10 \u0026lt;/li\u0026gt; 11 \u0026lt;/ul\u0026gt; 玉米濃湯 鮪魚吐司 薯條 鹽味 胡椒鹽 番茄醬 超連結 假設你想要連結到某個網站，你可以使用\u0026lt;a\u0026gt; (anchor)元素，並在href(hypertext reference)屬性中指定連結的網址，而在\u0026lt;a\u0026gt;元素中間的文字就是連結的文字。\n1\u0026lt;a href=\u0026#34;連結\u0026#34;\u0026gt;顯示文字\u0026lt;/a\u0026gt; 比如說我們要連結到Google首頁，我們可以這樣寫:\n1\u0026lt;a href=\u0026#34;https://www.google.com\u0026#34;\u0026gt;Goolge\u0026lt;/a\u0026gt; Google\n連結也可以連結到同一個網頁的某個位置。我們可以幫元素建立id並只要在href屬性中指定位置的id就可以了，而在\u0026lt;a\u0026gt;元素中間的文字就是連結的文字。\n1\u0026lt;a href=\u0026#34;#image\u0026#34;\u0026gt;顯示文字\u0026lt;/a\u0026gt; 2\u0026lt;h3 id=\u0026#34;image\u0026#34;\u0026gt;圖片\u0026lt;/h3\u0026gt; 圖片 如果你想要插入圖片，你可以使用\u0026lt;img\u0026gt; (image)元素，並在src (source)屬性中指定圖片的來源，alt( alternative text)屬性中填入圖片的敘述。如果圖片無法顯示時就會使用這個替代文字，而Google也會透過這個文字了解圖片內容。\n1\u0026lt;img src=\u0026#34;來源\u0026#34; alt=\u0026#34;文字敘述\u0026#34;\u0026gt; 比如說這個是從Google首頁抓下來的圖片，我們可以這樣寫:\n1\u0026lt;img src=\u0026#34;https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\u0026#34; alt=\u0026#34;Google\u0026#34;\u0026gt; 而連結的文字也可以是圖片，只要把\u0026lt;img\u0026gt;元素放在\u0026lt;a\u0026gt;元素裡就可以了。\n1\u0026lt;a href=\u0026#34;https://www.google.com/\u0026#34;\u0026gt; 2 \u0026lt;img src=\u0026#34;https://www.google.com/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png\u0026#34; alt=\u0026#34;Google\u0026#34;\u0026gt; 3\u0026lt;/a\u0026gt; 表格 表格是用\u0026lt;table\u0026gt;元素建立的，而表格內的每一排都是\u0026lt;tr\u0026gt;(table row)元素，而每一個格子都是\u0026lt;td\u0026gt;(table data)元素，而表格的標題則是\u0026lt;th\u0026gt;(table header)元素。\n1\u0026lt;table\u0026gt; 2 \u0026lt;tr\u0026gt; 3 \u0026lt;th\u0026gt;國家\u0026lt;/th\u0026gt; 4 \u0026lt;th\u0026gt;首都\u0026lt;/th\u0026gt; 5 \u0026lt;th\u0026gt;人口\u0026lt;/th\u0026gt; 6 \u0026lt;th\u0026gt;語言\u0026lt;/th\u0026gt; 7 \u0026lt;/tr\u0026gt; 8 \u0026lt;tr\u0026gt; 9 \u0026lt;td\u0026gt;USA\u0026lt;/td\u0026gt; 10 \u0026lt;td\u0026gt;Washington D.C.\u0026lt;/td\u0026gt; 11 \u0026lt;td\u0026gt;309 million\u0026lt;/td\u0026gt; 12 \u0026lt;td\u0026gt;English\u0026lt;/td\u0026gt; 13 \u0026lt;/tr\u0026gt; 14 \u0026lt;tr\u0026gt; 15 \u0026lt;td\u0026gt;Sweden\u0026lt;/td\u0026gt; 16 \u0026lt;td\u0026gt;Stockholm\u0026lt;/td\u0026gt; 17 \u0026lt;td\u0026gt;9 million\u0026lt;/td\u0026gt; 18 \u0026lt;td\u0026gt;Swedish\u0026lt;/td\u0026gt; 19 \u0026lt;/tr\u0026gt; 20\u0026lt;/table\u0026gt; 國家 首都 人口 語言 USA Washington D.C. 309 million English Sweden Stockholm 9 million Swedish 你可以使用\u0026lt;thead\u0026gt; (table header), \u0026lt;tbody\u0026gt; (table body) 和 \u0026lt;tfoot\u0026gt; (table footer) 元素來區分表格的不同部分，這樣有助於瀏覽器和搜尋引擎了解表格的結構。\n1\u0026lt;table\u0026gt; 2 \u0026lt;thead\u0026gt; 3 \u0026lt;tr\u0026gt; 4 \u0026lt;th\u0026gt;項目\u0026lt;/th\u0026gt; 5 \u0026lt;th\u0026gt;金額\u0026lt;/th\u0026gt; 6 \u0026lt;/tr\u0026gt; 7 \u0026lt;/thead\u0026gt; 8 \u0026lt;tbody\u0026gt; 9 \u0026lt;tr\u0026gt; 10 \u0026lt;td\u0026gt;iPhone 11\u0026lt;/td\u0026gt; 11 \u0026lt;td\u0026gt;$24,900\u0026lt;/td\u0026gt; 12 \u0026lt;/tr\u0026gt; 13 \u0026lt;tr\u0026gt; 14 \u0026lt;td\u0026gt;AirPods\u0026lt;/td\u0026gt; 15 \u0026lt;td\u0026gt;$6,490\u0026lt;/td\u0026gt; 16 \u0026lt;/tr\u0026gt; 17 \u0026lt;tr\u0026gt; 18 \u0026lt;td\u0026gt;iPad Pro\u0026lt;/td\u0026gt; 19 \u0026lt;td\u0026gt;$25,900\u0026lt;/td\u0026gt; 20 \u0026lt;/tr\u0026gt; 21 \u0026lt;/tbody\u0026gt; 22 \u0026lt;tfoot\u0026gt; 23 \u0026lt;tr\u0026gt; 24 \u0026lt;th\u0026gt;總金額\u0026lt;/th\u0026gt; 25 \u0026lt;td\u0026gt;$57,290\u0026lt;/td\u0026gt; 26 \u0026lt;/tr\u0026gt; 27 \u0026lt;/tfoot\u0026gt; 28\u0026lt;/table\u0026gt; 項目 金額 iPhone 11 $24,900 AirPods $6,490 iPad Pro $25,900 總金額 $57,290 表格來自 Fooish 程式技術，因為我懶得打。\n合併儲存格: colspan 和 rowspan 屬性 (attributes) 合併表格可以利用 和 標籤上的 colspan 和 rowspan 屬性，colspan 是用來水平合併多行 (column) 的儲存格，rowspan 則用來垂直合併多列 (row) 的儲存格。\n1 2 3 4 5 6 7 輸入框 接下來是輸入框，輸入框是用\u0026lt;input\u0026gt;元素建立的，而\u0026lt;input\u0026gt;元素有很多種類，我們可以用type屬性來指定，比如說我們要建立一個文字輸入框，我們可以這樣寫:\n1\u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt; 如果給他加入value屬性，就可以預設輸入框的內容了:\n1\u0026lt;input type=\u0026#34;text\u0026#34; value=\u0026#34;Hello World!\u0026#34;\u0026gt; 而如果我們要建立一個密碼輸入框，我們可以這樣寫:\n1\u0026lt;input type=\u0026#34;password\u0026#34;\u0026gt; 輸入的內容會被隱藏，而且會用星號或圓點代替。\n如果我們要建立一個勾選框，我們可以這樣寫:\n1\u0026lt;input type=\u0026#34;checkbox\u0026#34;\u0026gt; 如果我們要建立一個單選框，我們可以這樣寫:\n1\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;color\u0026#34; value=\u0026#34;red\u0026#34;\u0026gt; red\u0026lt;br\u0026gt; 2\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;color\u0026#34; value=\u0026#34;green\u0026#34;\u0026gt; green\u0026lt;br\u0026gt; 3\u0026lt;input type=\u0026#34;radio\u0026#34; name=\u0026#34;color\u0026#34; value=\u0026#34;blue\u0026#34;\u0026gt; blue red\ngreen\nblue\n記住，radio是只能選一個的，就想你的收音機一樣，你一次只能聽一個頻道。我們在HTML裡面會使用name屬性來指定一組單選框，這樣瀏覽器才知道這些單選框是一組的。而value代表了選擇他的值，比如說我們選擇了red，那麼瀏覽器就會把red的值傳給伺服器。\nHTML還有很多種輸入框，比如說日期、時間、檔案、顏色等等，足夠我們花一個影片介紹。你可以參考我之前做的這個筆記來預習。\n互動元素 接下來我們要來介紹幾個有趣的互動元素\n按鈕 按鈕是用\u0026lt;button\u0026gt;元素建立的，我們可以在裡面放入文字或圖片，比如說:\n1\u0026lt;button\u0026gt;Click me!\u0026lt;/button\u0026gt; Click me!\niframe iframe是用來嵌入網頁的，比如說我們要嵌入YouTube影片，你可以到YouTube影片的分享裡面，點選嵌入，然後複製貼上到你的網頁裡面:\n1\u0026lt;iframe width=\u0026#34;560\u0026#34; height=\u0026#34;315\u0026#34; src=\u0026#34;https://www.youtube.com/embed/lOecpIqOjjY\u0026#34; title=\u0026#34;YouTube video player\u0026#34; frameborder=\u0026#34;0\u0026#34; allow=\u0026#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\u0026#34; allowfullscreen\u0026gt;\u0026lt;/iframe\u0026gt; Audio Audio是用來播放音樂的，我們可以用\u0026lt;audio\u0026gt;元素建立，然後用src屬性指定音樂的網址:\n1\u0026lt;audio src=\u0026#34;https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3\u0026#34; controls\u0026gt;\u0026lt;/audio\u0026gt; 如果加入controls屬性，就會顯示播放器，讓使用者可以控制音樂的播放。\nVideo Video是用來播放影片的，我們可以用\u0026lt;video\u0026gt;元素建立，然後用src屬性指定影片的網址:\n1\u0026lt;video src=\u0026#34;https://www.w3schools.com/html/mov_bbb.mp4\u0026#34; controls\u0026gt;\u0026lt;/video\u0026gt; 同樣的如果加入controls屬性就可以讓使用者控制影片的播放。\ndiv 最後我們要來介紹HTML5的版面。我們在建立網站時，通常會把網站分成幾個區塊，比如說標題、導覽列、內容、側邊欄、頁尾等等來方便我們做排版。因此你可以使用\u0026lt;div\u0026gt;元素來建立這些區塊，比如說你想建立一個提示框你可以這樣寫:\n1\u0026lt;div\u0026gt; 2 \u0026lt;h2\u0026gt;注意\u0026lt;/h2\u0026gt; 3 \u0026lt;p\u0026gt;感謝你的注意\u0026lt;/p\u0026gt; 4\u0026lt;/div\u0026gt; 注意 感謝你的注意\nHTML5 版面 但是div元素只是一個區塊，並沒有說明這個區塊是什麼，因此我們可以使用HTML5的版面來建立這些區塊。HTML5的版面是用\u0026lt;header\u0026gt;、\u0026lt;nav\u0026gt;、\u0026lt;main\u0026gt;、\u0026lt;section\u0026gt;、\u0026lt;article\u0026gt;、\u0026lt;aside\u0026gt;、\u0026lt;footer\u0026gt;元素建立的，我們可以用這些元素來建立版面。比如說我們要建立一個網站的版面，我們可以這樣寫:\n1\u0026lt;header\u0026gt; 2 \u0026lt;h1\u0026gt;網站標題\u0026lt;/h1\u0026gt; 3\u0026lt;/header\u0026gt; 4\u0026lt;nav\u0026gt; 5 \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;連結1\u0026lt;/a\u0026gt; 6 \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;連結2\u0026lt;/a\u0026gt; 7 \u0026lt;a href=\u0026#34;#\u0026#34;\u0026gt;連結3\u0026lt;/a\u0026gt; 8\u0026lt;/nav\u0026gt; 9\u0026lt;main\u0026gt; 10 \u0026lt;section\u0026gt; 11 \u0026lt;article\u0026gt; 12 \u0026lt;h2\u0026gt;第一篇文章\u0026lt;/h2\u0026gt; 13 \u0026lt;p\u0026gt;文章內容\u0026lt;/p\u0026gt; 14 \u0026lt;/article\u0026gt; 15 \u0026lt;article\u0026gt; 16 \u0026lt;h2\u0026gt;第二篇文章\u0026lt;/h2\u0026gt; 17 \u0026lt;p\u0026gt;文章內容\u0026lt;/p\u0026gt; 18 \u0026lt;/section\u0026gt; 19 \u0026lt;aside\u0026gt; 20 \u0026lt;h2\u0026gt;側邊欄\u0026lt;/h2\u0026gt; 21 \u0026lt;p\u0026gt;側邊欄內容\u0026lt;/p\u0026gt; 22 \u0026lt;/aside\u0026gt; 23\u0026lt;/main\u0026gt; 24\u0026lt;footer\u0026gt; 25 \u0026lt;p\u0026gt;網站頁尾\u0026lt;/p\u0026gt; 26\u0026lt;/footer\u0026gt; 這些元素本身都和div一樣只是把元素群組起來，不會有任何視覺效果。但是可以幫入瀏覽器和搜尋引擎了解這些區塊的用途，也能讓別人更容易Google到你得內容。\n總結 好啦，今天我們介紹了許多不同的HTML元素。這些已經是最常用的元素了，如果你想知道更多的元素，可以到MDN查詢。下一週我們要來介紹CSS來裝飾我們的網頁。\n每週一早上六點，我們會在YouTube和各大Podcast平台不定時更新。如果你喜歡文字版，也歡迎在Instagram和Google新聞追蹤毛哥EM資訊密技。 我是毛哥EM，讓我們下週再見！\n","link":"https://EM-Tec.github.io/post/webpallet-2/","section":"post","tags":["HTML","CSS","JavaScript"],"title":"EP.2 5分鐘完結HTML"},{"body":"","link":"https://EM-Tec.github.io/tags/javascript/","section":"tags","tags":null,"title":"JavaScript"},{"body":"哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我們要來聊聊什麼是網站\n相信大家看過Word檔對吧，Word檔是要用Microsoft Word打開的文件，副檔名是.docx\n而網頁是一個要透過「瀏覽器」開啟的文件，副檔名通常是.html\n讓我們來做一個實驗。請你建立一個文字檔案並輸入一些內容，接著把這個檔案的附檔名改成html（比如說a.html）。雙擊打開之後你看，一個網頁就做好了。沒錯就是這麼簡單。但是如果只有純文字的話實在是太無聊了，因此一個網頁通常會使用多個檔案及不同的程式語言組成。\n和Word不一樣的地方是word會把所有的圖片、文字格式設定等資料全部包在一個資料夾並且包裝成一個.docx檔，而網站會把這些檔案們分開存放好讓你可以輕鬆編輯每個項目。\n網站架構 一個網頁通常是由HTML、CSS和JavaScript所組成，它們分別有著不同的工作。假設網頁是一個人的話，HTML就是他的骨架，CSS就是他的皮膚和衣服，而JavaScript就是他的大腦。以毛哥EM資訊密技為例，如果把網頁的JavaScript拿掉，就不能使用複製按鈕了，如果把CSS拿掉，整個網頁就會變得很單調且難以閱讀，而如果把HTML拿掉，網頁就會變成一個空白的白紙。而網站中所有的檔案都會放在一個資料夾中，你可以到Github上面查看毛哥EM資訊密技的根目錄，裡面有著許多的檔案，而index.html就是這個網站的首頁。\n然而這個資料夾如果只是在你自己的電腦裡別人是無法取得的，因此你需要一個人一直站在一個地方，當有人來想要拿檔案的時候就遞給他，而這個人就叫做「伺服器」。伺服器通常是一台主機（也就是你的電腦），他的工作就是當使用者提出請求 (Request)的時候給予回應 (Response)。記住在網路上無論如何伺服器都會回應你，除了回應檔案以外也會回應一個代碼。比如說200代表成功 (OK)，常見的404代表找不到 (Not Found)，403代表不允許 (Forbidden)。除此之外還有很多很多代碼，基本上大部分你都不希望會看到。你可以在\u0026lt;http.cat\u0026gt;或\u0026lt;http.dog\u0026gt;看看這些代碼代表的意義。\n網站是如何傳遞資料的？ 接下來我們來看一下網站是如何傳遞資料的。我喜歡把網路比喻成在寄包裹。今天你想把你的請求傳給伺服器之前，你有幾個東西需要做選擇。\n交通工具 首先是你要使用什麼交通工具，不同的交通工具有不同的特性。當我們輸入網址載入網站時使用的交通工具叫做「GET」，我喜歡叫他腳踏車。腳踏車的特點是他很簡單，也可以傳遞資料，但是資料會放在網址中。以Google為例，網址google.com/search?q=毛哥EM就把q=毛哥EM，也就是搜尋毛哥EM的意思傳給Google的伺服器，而Google也把對應的檔案給回傳回來。而且沒錯，回傳的HTML不一定是本來就存在的，也有可能是剛才才建立出來的。網址技術上可以無限量的傳遞資料，就像腳踏車原則上可以無限往上堆東西，但是我們通常在傳一比較大的資料的時候不會這麼做反之我們會選擇使用post這個交通工具，而我喜歡叫他貨車。貨車最棒的地方式是他可以把東西存放在Body，也就是後面的貨櫃。這樣經過的人除非把你的箱子撬開，不然不會知道裡面裝了些什麼。\n交通規則 而接下來我們要來選擇的是我們要走哪一條道路。不同的道路有不同的交通規則，而常見的交通規則有HTTP、HTTPS、SSH。我們目前最常見的是HTTPS，他是加密過的HTTP協定，可以確保傳輸過程中你的貨櫃不會被撬開。\n送到哪裡? IP、網域、與DNS 經過這一番努力我們已經準備好要出發了，但是我們要送到哪裡呢？網路上的地址叫做IP位址。目前有IPV4還有因為地址不夠用了而被發明有英數混合的IPV6。但是這一大串數字實在太難記了，因此你可以購買一個網域。這個網域就像是臺北市信義區西村里8鄰信義路五段7號太難記了，但台北101就好記很多。因此會一個類似電話簿的東西叫做DNS，他會紀錄所有不同網域對應的IP位址。而當我們輸入網址想要去找伺服器之前我們的瀏覽器都會先去DNS找看看這個網站實際的地址。\nDNS是大家都可以建立的。比如說中華電信或是Google都有他們的DNS伺服器可以讓你做使用。\n網址的最後通常會有一個.com或.net等等的後綴，這個後綴絕大部分沒有特別規定，但有一些大家的習慣，比如說.com是商業網站，.net是網路服務網站，.org是非營利組織網站等等。\n伺服器 就像前面說的，當伺服器收到你的請求時，他會根據你的請求去進行處理，並且把處理結果回傳給你，包括狀態碼和各種資料。由此你可以發現要製作一個網頁不只需要有人設計好看的網頁，還需要有人設計伺服器的邏輯，並且把資料存放在伺服器上。前面編寫我們可以直接看到結果的工程師我們叫做前端工程師，而編寫後面我們看不到的伺服器的工程師我們叫做後端工程師。\n我們會先從前端開始學習，因為它比較容易上手，而且可以馬上看到結果。但是你不用擔心，因為現在已經有很多平台幫你架設好後端，你只需要把你的HTML,CSS,JavaScript以及其他檔案上傳到這些平台上，你的網頁就可以部屬了。\n我們下禮拜就會開始實作HTML。每週一早上六點，我會在YouTube和各大Podcast平台同步更新。如果你喜歡文字版歡迎到毛哥EM資訊密技閱讀，也歡迎在Instagram和Google新聞追蹤毛哥EM資訊密技。\n我是毛哥EM，讓我們下週再見！\n","link":"https://EM-Tec.github.io/post/webpallet-1/","section":"post","tags":["HTML","CSS","JavaScript"],"title":"EP.1 什麼是網站?"},{"body":"EP.0 歡迎來到網棧 哈囉大家好，我是毛哥EM，歡迎來到網棧。這是毛哥EM資訊密技的全新系列，我們將討論各種網頁設計的技術與技巧。\n在前面的五集中，我會講解什麼是網頁，並快速帶大家認識HTML、CSS、JavaScript，還有如何架設網站。接下來我深入討論每一個細節，以及如何做出各種效果與功能。\n每週一早上六點，我會在YouTube和各大Podcast平台不定時更新。如果你喜歡文字版歡迎到毛哥EM資訊密技閱讀，也歡迎在Instagram和Google新聞追蹤毛哥EM資訊密技。\n我是毛哥EM，讓我們下週再見！\n","link":"https://EM-Tec.github.io/post/webpallet-0/","section":"post","tags":["自製","HTML","CSS","JavaScript","Github","GAS"],"title":"EP.0 歡迎來到網棧"},{"body":"","link":"https://EM-Tec.github.io/tags/gas/","section":"tags","tags":null,"title":"GAS"},{"body":"","link":"https://EM-Tec.github.io/tags/github/","section":"tags","tags":null,"title":"Github"},{"body":"本文將教授如何使用程式製作一個簡單的點名網頁。透過這個點名系統，你可以方便地管理你的學生出席狀況，並且隨時查詢歷史出席紀錄。我們將使用 Google Apps Script, GitHub 和 Google Sheets 來建立這個點名系統。我敢保證即使你完全不會程式也可以在5分鐘內完成。本文會詳細說明從建立 Google Sheets 到部屬網頁的步驟，並提供完整的程式碼和演示網頁。\n我在兩年前曾經寫過一篇【GAS】自製點名系統，出乎意料地幫助到許多人，所以我決定重新寫一次，比上次更容易製作和操作，也更好看一些(我覺得啦)。\n範例網頁 首先，我們先來看一下最終的成果。這是我們要製作的點名系統的演示網頁。你可以點擊這裡查看完整的演示網頁。他有以下幾個功能\n點名:點擊學生姓名，即可完成點名 新增學生:輸入學生姓名點擊新增按鈕，即可新增學生 查詢歷史出席紀錄:輸入學生姓名點擊查詢按鈕，即可查詢歷史出席紀錄 好了，我們現在就開始製作這個點名系統吧w\n步驟一：建立 Google Sheets 文件 首先，我們需要建立一個 Google Sheets 文件，用於存儲學生的出席情況。在這個文件中，我們可以添加學生名稱、出席時間、剩餘課堂等信息。\n請打開我建立的這個範例文件並建立副本\n這樣Google Sheet就做好了。請複製這個文件的ID，我們稍後會用到。ID就是網址中的一長串字母和數字，比如說這個試算表:\n1https://docs.google.com/spreadsheets/d/1m0F6pOejN-ldKFIrFwssmoEPB3EPDmSQJKEPr9T88-E/edit#gid=0 它的ID就是1m0F6pOejN-ldKFIrFwssmoEPB3EPDmSQJKEPr9T88-E。\n步驟二：建立 Google Apps Script 現在，我們需要建立一個 Google Apps Script，用於向 Google Sheets 文件中添加和讀取數據。請在網址輸入script.new，進入 Google Apps Script 編輯器。接著貼上我的這一串程式。請把第一行的雙引號裡面換成剛才複製的ID。\n1const id = \u0026#34;1m0F6pOejN-ldKFIrFwssmoEPB3EPDmSQJKEPr9T88-E\u0026#34; 2 3function doGet(e){let t=e.parameter,a=SpreadsheetApp.openById(id).getSheets();switch(t.type){case\u0026#34;call\u0026#34;:if(!t.time)return ContentService.createTextOutput(!1);return a[0].appendRow([t.name,t.time,t.remain]),ContentService.createTextOutput(!0);case\u0026#34;list\u0026#34;:var r=a[1].getRange(2,1,a[1].getLastRow()-1,a[1].getLastColumn()).getValues().filter(e=\u0026gt;\u0026#34;\u0026#34;!==e[0]).map(e=\u0026gt;({name:e[0],left:e[2]}));return ContentService.createTextOutput(JSON.stringify(r)).setMimeType(ContentService.MimeType.JSON);case\u0026#34;search\u0026#34;:var[n,...r]=a[0].getDataRange().getValues();let[u,i,p]=n,s=n.indexOf(u),m=n.indexOf(i),c=n.indexOf(p),l=r.filter(e=\u0026gt;e[s]===t.name).map(e=\u0026gt;({time:e[m],left:e[c]}));return ContentService.createTextOutput(JSON.stringify(l)).setMimeType(ContentService.MimeType.JSON);case\u0026#34;new\u0026#34;:let f=a[1].getLastRow()+1;return a[1].appendRow([t.name,`=COUNTIF(\u0026#39;紀錄\u0026#39;!A:A,A${f})`,`=D${f}-B${f}`]),ContentService.createTextOutput(!0);default:return ContentService.createTextOutput(\u0026#34;別亂撞我～\u0026#34;)}} 我們需要把它部屬成網頁，請點擊左上角的部屬，新增部屬作業，選擇部屬為網頁應用程式。執行身分選自己(我)，誰可以存取選所有人。接著點擊部屬，複製網頁應用程式網址。比如說:\n1https://script.google.com/macros/s/AKfycbzxqGIMBbLkCka2aveltdVHYtdG-k_X98qzSd_V9MHDxWaOYXFwZgE3rRHDzCakzTxs/exec 步驟三：建立網頁 請你在任意一個網頁代管服務，比如說Vercel,Github Pages, Gitlab Pages, Netlify等等，建立一個網頁。接著在網頁中貼上以下程式碼。\n如果你沒有使用過這些服務，可以參考以下教學:\n使用 Github Pages部屬網頁 請先註冊帳號，你可以參考以下影片:\n在 Instagram 查看這則貼文 毛哥EM資訊密技（@em.tec.blog）分享的貼文\n部屬網頁有兩個辦法。選一個就可以了\n用戶名.github.io 第一個是影片說明的方法，就是建立一個叫做用戶名.github.io的倉庫，然後建立一個index.html的檔案並貼上以下程式。\n1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;html lang=\u0026#34;zh-TW\u0026#34;\u0026gt; 3 4\u0026lt;head\u0026gt; 5 \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; 6 \u0026lt;meta http-equiv=\u0026#34;X-UA-Compatible\u0026#34; content=\u0026#34;IE=edge\u0026#34;\u0026gt; 7 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1.0\u0026#34;\u0026gt; 8 \u0026lt;title\u0026gt;簡易點名系統\u0026lt;/title\u0026gt; 9 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;3B4252\u0026#34; /\u0026gt; 10 \u0026lt;style\u0026gt; 11 h1 { 12 /* 標題顏色 */ 13 color: var(--nord7) 14 } 15 16 body { 17 /* 背景顏色 */ 18 background-color: var(--nord0) 19 } 20 21 body { 22 /* 可選顏色 */ 23 --nord0: #2E3440; 24 --nord1: #3B4252; 25 --nord2: #434C5E; 26 --nord3: #4C566A; 27 --nord4: #D8DEE9; 28 --nord5: #E5E9F0; 29 --nord6: #ECEFF4; 30 --nord7: #8FBCBB; 31 --nord8: #88C0D0; 32 --nord9: #81A1C1; 33 --nord10: #5E81AC; 34 --nord11: #BF616A; 35 --nord12: #D08770; 36 --nord13: #EBCB8B; 37 --nord14: #A3BE8C; 38 --nord15: #B48EAD; 39 --black: #000; 40 --line: #4C566A 41 } 42 43 main, 44 nav { 45 display: flex 46 } 47 48 .call button, 49 button:hover { 50 background-color: var(--nord2) 51 } 52 53 button, 54 section\u0026gt;div { 55 background-color: var(--nord1); 56 box-shadow: rgba(0, 0, 0, .2) 0 0 .5rem 57 } 58 59 main, 60 section\u0026gt;div { 61 padding: 1rem; 62 width: 100% 63 } 64 65 footer, 66 footer a { 67 color: var(--nord4) 68 } 69 70 .search button, 71 button, 72 input, 73 section\u0026gt;div { 74 box-shadow: rgba(0, 0, 0, .2) 0 0 .5rem 75 } 76 77 body, 78 button, 79 h2, 80 html { 81 text-align: center 82 } 83 84 * { 85 padding: 0; 86 margin: 0; 87 box-sizing: border-box; 88 font-family: Arial, \u0026#34;微軟正黑體\u0026#34;, Helvetica, sans-serif; 89 color: var(--nord6) 90 } 91 92 body, 93 html { 94 min-height: 100% 95 } 96 97 main { 98 flex-direction: column; 99 height: 100vh; 100 height: 100dvh; 101 max-width: 500px; 102 margin: 0 auto 103 } 104 105 nav { 106 justify-content: space-between 107 } 108 109 button { 110 display: block; 111 height: 50px; 112 width: calc(1/3*100% - 1rem); 113 line-height: 50px; 114 border-radius: 1rem; 115 text-decoration: none; 116 border: none; 117 cursor: pointer; 118 transition: background-color .2s ease-in-out 119 } 120 121 #call, 122 .search, 123 footer { 124 display: flex 125 } 126 127 .call button { 128 width: calc(1/4*100% - 1rem); 129 margin: .5rem 130 } 131 132 button:hover { 133 filter: brightness(1.2) 134 } 135 136 button:active { 137 background-color: var(--nord3); 138 filter: brightness(1.5) 139 } 140 141 section { 142 flex-grow: 1; 143 margin: 1rem 0; 144 position: relative 145 } 146 147 footer { 148 justify-content: flex-end; 149 align-items: flex-end 150 } 151 152 section\u0026gt;div { 153 border-radius: 1rem; 154 overflow-x: hidden; 155 overflow-y: auto; 156 position: absolute; 157 height: 100%; 158 transition: opacity .5s ease-in-out 159 } 160 161 #add, 162 #history { 163 opacity: 0 164 } 165 166 #call { 167 z-index: 2; 168 flex-wrap: wrap; 169 justify-content: space-between 170 } 171 172 .search { 173 justify-content: center; 174 align-items: center 175 } 176 177 .search button, 178 input { 179 height: 2rem; 180 width: 50%; 181 border-radius: .5rem; 182 border: transparent; 183 padding: 0 1rem; 184 background-color: var(--nord3); 185 color: var(--nord4) 186 } 187 188 h2, 189 table { 190 width: 100% 191 } 192 193 input:focus { 194 outline: transparent 195 } 196 197 .search button { 198 margin-left: 1rem; 199 width: auto; 200 line-height: 100% 201 } 202 203 table { 204 border-collapse: collapse; 205 margin-top: 1rem 206 } 207 208 tr { 209 border-bottom: 1px solid var(--line) 210 } 211 212 td { 213 padding: .5rem 214 } 215 216 h2 { 217 margin-top: 2rem; 218 font-weight: 600 219 } 220 221 #status { 222 margin: .5rem 0 1rem; 223 color: var(--nord13); 224 font-size: 1.3rem 225 } 226 \u0026lt;/style\u0026gt; 227\u0026lt;/head\u0026gt; 228 229\u0026lt;body\u0026gt; 230 \u0026lt;main\u0026gt; 231 \u0026lt;h1\u0026gt;簡易點名系統\u0026lt;/h1\u0026gt; 232 \u0026lt;h2 id=\u0026#34;status\u0026#34;\u0026gt;歡迎使用\u0026lt;/h2\u0026gt; 233 \u0026lt;nav\u0026gt; 234 \u0026lt;button onclick=\u0026#34;searchA()\u0026#34;\u0026gt;查詢紀錄\u0026lt;/button\u0026gt;\u0026lt;button onclick=\u0026#34;callA()\u0026#34;\u0026gt;點名\u0026lt;/button\u0026gt;\u0026lt;button 235 onclick=\u0026#34;addA()\u0026#34;\u0026gt;新增學生\u0026lt;/button\u0026gt; 236 \u0026lt;/nav\u0026gt; 237 \u0026lt;section\u0026gt; 238 \u0026lt;div id=\u0026#34;history\u0026#34;\u0026gt; 239 \u0026lt;div class=\u0026#34;search\u0026#34;\u0026gt; 240 \u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt;\u0026lt;button\u0026gt;搜尋\u0026lt;/button\u0026gt; 241 \u0026lt;/div\u0026gt; 242 \u0026lt;table\u0026gt; 243 \u0026lt;thead\u0026gt; 244 \u0026lt;tr\u0026gt; 245 \u0026lt;td\u0026gt;時間\u0026lt;/td\u0026gt; 246 \u0026lt;td\u0026gt;剩下課堂\u0026lt;/td\u0026gt; 247 \u0026lt;/tr\u0026gt; 248 \u0026lt;/thead\u0026gt; 249 \u0026lt;tbody\u0026gt; 250 \u0026lt;/tbody\u0026gt; 251 \u0026lt;/table\u0026gt; 252 \u0026lt;/div\u0026gt; 253 \u0026lt;div id=\u0026#34;call\u0026#34;\u0026gt; 254 \u0026lt;h2\u0026gt;載入中\u0026lt;/h2\u0026gt; 255 \u0026lt;/div\u0026gt; 256 \u0026lt;div id=\u0026#34;add\u0026#34;\u0026gt; 257 \u0026lt;div class=\u0026#34;search\u0026#34;\u0026gt;\u0026lt;input type=\u0026#34;text\u0026#34;\u0026gt;\u0026lt;button\u0026gt;新增\u0026lt;/button\u0026gt;\u0026lt;/div\u0026gt; 258 \u0026lt;/div\u0026gt; 259 \u0026lt;/section\u0026gt; 260 \u0026lt;footer\u0026gt;\u0026lt;a href=\u0026#34;edit-mr.github.io/\u0026#34;\u0026gt;毛哥EM\u0026lt;/a\u0026gt;製作 | \u0026lt;a href=\u0026#34;https://em-tec.github.io/post/roll-call\u0026#34;\u0026gt;教學\u0026lt;/a\u0026gt; 261 \u0026lt;/footer\u0026gt; 262 \u0026lt;/main\u0026gt; 263 \u0026lt;script\u0026gt; 264 //部屬連結放這裡 265 var url = \u0026#34;https://script.google.com/macros/s/AKfycbzxqGIMBbLkCka2aveltdVHYtdG-k_X98qzSd_V9MHDxWaOYXFwZgE3rRHDzCakzTxs/exec\u0026#34;; 266 const [history, call, add] = [\u0026#34;history\u0026#34;, \u0026#34;call\u0026#34;, \u0026#34;add\u0026#34;].map(t =\u0026gt; document.getElementById(t)), searchA = () =\u0026gt; { history.style.opacity = 1, history.style.zIndex = 2, call.style.opacity = add.style.opacity = 0, call.style.zIndex = add.style.zIndex = 1 }, callA = () =\u0026gt; { history.style.opacity = add.style.opacity = 0, history.style.zIndex = add.style.zIndex = 1, call.style.opacity = 1, call.style.zIndex = 2 }, addA = () =\u0026gt; { history.style.opacity = call.style.opacity = 0, history.style.zIndex = call.style.zIndex = 1, add.style.opacity = 1, add.style.zIndex = 2 }; fetch(url + \u0026#34;?type=list\u0026#34;).then(t =\u0026gt; t.json()).then(t =\u0026gt; { let e = document.getElementById(\u0026#34;call\u0026#34;); e.innerHTML = \u0026#34;\u0026#34;, t.forEach((t, n) =\u0026gt; { let a = document.createElement(\u0026#34;button\u0026#34;); a.textContent = t.name, a.id = `student-${n + 1}`, a.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { rollCall(t.name, t.left, n + 1) }), e.appendChild(a) }) }).catch(t =\u0026gt; console.error(t)); const status = document.getElementById(\u0026#34;status\u0026#34;); function rollCall(t, e, n) { status.innerHTML = `${t} 點名中...`; var a = new Date, a = a.toLocaleString(\u0026#34;zh-TW\u0026#34;, { year: \u0026#34;numeric\u0026#34;, month: \u0026#34;2-digit\u0026#34;, day: \u0026#34;2-digit\u0026#34;, hour: \u0026#34;numeric\u0026#34;, minute: \u0026#34;numeric\u0026#34;, second: \u0026#34;numeric\u0026#34;, hour12: !0 }).replace(\u0026#34;-\u0026#34;, \u0026#34;/\u0026#34;).replace(\u0026#34; \u0026#34;, \u0026#34; \u0026#34;); fetch(url + `?type=call\u0026amp;name=${t}\u0026amp;time=${a}\u0026amp;remain=${e}`).then(a =\u0026gt; { a.ok ? (status.innerHTML = `${t} 已點名成功！剩餘課堂：${e - 1}`, document.getElementById(\u0026#34;student-\u0026#34; + n).style.backgroundColor = \u0026#34;var(--nord14)\u0026#34;) : (status.innerHTML = `${t} 已點名失敗！剩餘課堂：${e}`, document.getElementById(\u0026#34;student-\u0026#34; + n).style.backgroundColor = \u0026#34;var(--nord11)\u0026#34;) }).catch(t =\u0026gt; { status.innerHTML = `發生錯誤：${t}` }) } const searchBtn = document.querySelector(\u0026#34;#history button\u0026#34;), searchInput = document.querySelector(\u0026#34;#history input\u0026#34;), historyTableBody = document.querySelector(\u0026#34;#history tbody\u0026#34;); searchBtn.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { status.innerHTML = \u0026#34;搜尋中...\u0026#34;; let t = searchInput.value, e = `${e}?type=search\u0026amp;name=${encodeURIComponent(t)}`; fetch(e).then(t =\u0026gt; t.json()).then(t =\u0026gt; { let e = document.querySelector(\u0026#34;#history table tbody\u0026#34;); e.innerHTML = \u0026#34;\u0026#34;, t.forEach(t =\u0026gt; { let n = document.createElement(\u0026#34;tr\u0026#34;), a = document.createElement(\u0026#34;td\u0026#34;), l = document.createElement(\u0026#34;td\u0026#34;); var r = new Date(t.time); a.textContent = r.toLocaleString(\u0026#34;zh-TW\u0026#34;, { year: \u0026#34;numeric\u0026#34;, month: \u0026#34;2-digit\u0026#34;, day: \u0026#34;2-digit\u0026#34;, hour: \u0026#34;numeric\u0026#34;, minute: \u0026#34;numeric\u0026#34;, second: \u0026#34;numeric\u0026#34;, hour12: !0 }).replace(\u0026#34;-\u0026#34;, \u0026#34;/\u0026#34;).replace(\u0026#34; \u0026#34;, \u0026#34; \u0026#34;), l.textContent = t.left, n.appendChild(a), n.appendChild(l), e.appendChild(n), status.innerHTML = \u0026#34;搜尋完成\u0026#34; }) }).catch(t =\u0026gt; status.innerHTML = t) }); const addBtn = document.querySelector(\u0026#34;#add button\u0026#34;), addInput = document.querySelector(\u0026#34;#add input\u0026#34;); addBtn.addEventListener(\u0026#34;click\u0026#34;, () =\u0026gt; { let t = addInput.value; t \u0026amp;\u0026amp; (status.innerHTML = \u0026#34;新增中...\u0026#34;, fetch(`${url}?type=new\u0026amp;name=${encodeURIComponent(t)}`).then(t =\u0026gt; status.innerHTML = \u0026#34;新增成功\u0026#34;).catch(t =\u0026gt; { status.innerHTML = t })) }); 267 \u0026lt;/script\u0026gt; 268 269\u0026lt;/body\u0026gt; 270 271\u0026lt;/html\u0026gt; 請把第265行的雙引號裡面換成剛才複製的網頁應用程式網址，然後按下儲存。這樣你的網頁就完成了！你可以到網址https://你的Github帳號.github.io/來使用你的網頁。\nUse this template 第二個方式也很簡單，請先到這個Github倉庫並點擊右上角的Fork，或是Use this template。倉庫名稱Repository name會成為你的網址(例如：https://你的Github帳號.github.io/倉庫名稱)，然後點擊Create repository from template。\n請點擊檔案index.html並點擊右上角的鉛筆按鈕編輯， 把第265行的雙引號裡面換成剛才複製的網頁應用程式網址，然後按下儲存。\n然後再到你的倉庫裡面，點擊Settings，然後點擊左邊的Pages，把Branch改成main，然後按下Save，就完成了！\n好啦，現在你的網頁就完成了！你可以到網址https://你的Github帳號.github.io/倉庫名稱來使用你的網頁。\n自訂 這樣你的網頁就建立完成且可以使用了。如果你想客製化顏色的話可以修改CSS。比如說如果你想改標題你可以修改第13行\n1color: var(--nord7) 你可以改成任何顏色，例如：color: red，或是color: #ff0000，或是color: rgb(255, 0, 0)。\n你可以Google colorpicker 選取顏色，然後把HEX或是RGB的數字貼上去。\n或是你可以使用預設的Nord顏色組。使用方式就是預設那樣，只要修改數字就好了。對應的顏色如下:\n--nord0: #2E3440;\n--nord1: #3B4252;\n--nord2: #434C5E;\n--nord3: #4C566A;\n--nord4: #D8DEE9;\n--nord5: #E5E9F0;\n--nord6: #ECEFF4;\n--nord7: #8FBCBB;\n--nord8: #88C0D0;\n--nord9: #81A1C1;\n--nord10: #5E81AC;\n--nord11: #BF616A;\n--nord12: #D08770;\n--nord13: #EBCB8B;\n--nord14: #A3BE8C;\n--nord15: #B48EAD;\n希望你喜歡這個網頁！如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技。如果你有任何問題，歡迎直接到毛哥EM資訊密技的Instagram私訊我，我很樂意協助解決你的問題。\n","link":"https://EM-Tec.github.io/post/rol-call/","section":"post","tags":["自製","HTML","CSS","JavaScript","Github","GAS"],"title":"自製免費點名系統 - 複製貼上就能成為工程師"},{"body":"","link":"https://EM-Tec.github.io/categories/%E8%A3%BD%E4%BD%9C%E6%95%99%E5%AD%B8/","section":"categories","tags":null,"title":"製作教學"},{"body":"","link":"https://EM-Tec.github.io/series/%E8%A4%87%E8%A3%BD%E8%B2%BC%E4%B8%8A%E5%B0%B1%E8%83%BD%E6%88%90%E7%82%BA%E5%B7%A5%E7%A8%8B%E5%B8%AB/","section":"series","tags":null,"title":"複製貼上就能成為工程師"},{"body":"平常討論事情有時會需要臨時做筆記或馬上呈現內容給大家，但常又不是使用自己的電腦，且網路及環境很差。因此，我製作了這一個好看輕量的線上markdown編輯器。不只直覺好用，且會額外將成果顯示在獨立視窗，可直接全屏投影到第二螢幕上，呈現更好的效果避免被偷看其他分頁。最方便是開會還有上課要對答案可以快速清楚地打讓出來呈現。\nCrossDown 網站: https://edit-mr.github.io/CrossDown/ Github: https://github.com/Edit-Mr/CrossDown 好不容易忙完午休沒事，就花了下午下課時間搞出來了它。分享給大家，希望大家喜歡。\nCrossDown是一個簡潔而實用的Markdown編輯器，它可以在窗口中快速編輯和預覽Markdown文本。CrossDown的主要優點是它的輕量化和易用性。它具有極簡的設計，能夠在編輯和預覽之間無縫切換，同時提供了一些有用的功能，如Markdown格式化和Ctrl+鍵快捷鍵等。CrossDown使用了一些新技術，例如窗口之間的通訊，以實現其獨特的跨窗口顯示功能。\nCrossDown的介面非常簡單，由一個編輯區域和一個預覽區域組成。您可以在編輯區域中編寫Markdown文本，同時在預覽區域中查看您的編輯結果。它還具有一個可以打開新窗口的按鈕，以便您可以將預覽區域放在一個獨立的窗口中，使您可以在多個屏幕上同時查看您的Markdown文本。如果你沒有打開獨立窗口，編輯時按鈕會抖動提醒你。\nCrossDown的另一個重要功能是它的Markdown格式化和快捷鍵。您可以使用Ctrl+B、Ctrl+I、Ctrl+U和Ctrl+Shift+S等快捷鍵對選定的文本進行格式化，也可以使用Ctrl+K快捷鍵添加超鏈接。這使得編寫Markdown文本更加容易且高效。\n它還支持淺色和暗色主題，可以根據系統首選的顏色方案進行自動切換，或是於右上角手動作切換。\n總體而言，CrossDown是一個簡單而強大的Markdown編輯器，非常適合臨時需要編寫和預覽Markdown文本。它的輕量化和易用性使其成為一個不錯的選擇，尤其是當您需要投影Markdown文本時。\n","link":"https://EM-Tec.github.io/post/crossdown/","section":"post","tags":["自製"],"title":"【自製】CrossDown - 一個輕量化跨窗口顯示的Markdown編輯器"},{"body":"","link":"https://EM-Tec.github.io/categories/%E7%B6%B2%E7%AB%99%E5%88%86%E4%BA%AB/","section":"categories","tags":null,"title":"網站分享"},{"body":"","link":"https://EM-Tec.github.io/tags/youtube/","section":"tags","tags":null,"title":"YouTube"},{"body":"大家都知道，錫蘭的 YouTube 訂閱數因為某些原因顯示不太準確。但現在，我有了一個好消息：我開發了一個程式，可以輕鬆自動修正它！想知道怎麼做嗎？繼續往下看！\n首先，請先安裝油猴（Tampermonkey）這個擴充功能。您可以在 Chrome、Edge 或 Firefox 的擴充功能商店下載它。接著，到 Greasy Fork 網站安裝我開發的程式即可。有時 YouTube 會顯示錯誤，這時您只需要重新整理頁面就好了。\n如果您擔心我會不會盜取您的個人資料，那麼別擔心！在您安裝程式時，您可以查看程式碼，以確保您的資料是安全的。不過程式碼非常簡潔，有些難以閱讀，所以這裡提供比較好閱讀的版本。\n1(function () { 2 function modifySubscriberCount() { 3 var subscriberCountElem = document.getElementById(\u0026#34;subscriber-count\u0026#34;); 4 var channel = document.getElementById(\u0026#34;channel-handle\u0026#34;); 5 var channelName = document.getElementById(\u0026#34;text\u0026#34;); 6 var subCount = document.getElementById(\u0026#34;owner-sub-count\u0026#34;); 7 if (subscriberCountElem \u0026amp;\u0026amp; channel) { 8 observer.disconnect(); 9 if (channel.innerText == \u0026#39;@xilanceylan\u0026#39;) { 10 var subscriberCountText = subscriberCountElem.innerText; 11 if (subscriberCountText.indexOf(\u0026#34;K\u0026#34;) \u0026gt; -1) var replacedText = parseInt(subscriberCountText.replace(\u0026#34;K\u0026#34;, \u0026#34;\u0026#34;)) / 10 + \u0026#34;T\u0026#34;; else 12 var replacedText = subscriberCountText.replace(\u0026#34;萬\u0026#34;, \u0026#34;兆\u0026#34;).replace(\u0026#34;万\u0026#34;, \u0026#34;兆\u0026#34;); 13 subscriberCountElem.innerText = replacedText; 14 15 } 16 } else if (subCount \u0026amp;\u0026amp; channelName) { 17 observer.disconnect(); 18 if (channelName.innerText == \u0026#39;錫蘭Ceylan\u0026#39;) { 19 var subscriberCountText = subCount.innerText; 20 var replacedText = subscriberCountText.replace(\u0026#34;萬\u0026#34;, \u0026#34;兆\u0026#34;).replace(\u0026#34;万\u0026#34;, \u0026#34;兆\u0026#34;); 21 subCount.innerText = replacedText; 22 } 23 } 24 } 25 modifySubscriberCount(); 26 window.addEventListener(\u0026#34;popstate\u0026#34;, modifySubscriberCount); 27 var observer = new MutationObserver(function (mutations) { 28 mutations.forEach(function (mutation) { 29 modifySubscriberCount(); 30 }); 31 }); 32 observer.observe(document.body, { childList: true, subtree: true }); 33})(); 不過你可能會說\u0026quot;喔我沒有讀過大學，我看不懂\u0026quot;，沒關係我也沒有，但你可以請ChatGPT解釋給你聽。\n現在，您可以輕鬆地修正錫蘭 YouTube 的訂閱數，成為網路上的大王。\n","link":"https://EM-Tec.github.io/post/ceylan-sub-fix/","section":"post","tags":["YouTube","自製"],"title":"用擴充功能輕鬆修正錫蘭 YouTube 的訂閱數"},{"body":"","link":"https://EM-Tec.github.io/series/%E5%88%A5%E8%AA%AA%E6%88%91%E6%95%99%E7%9A%84%E7%B3%BB%E5%88%97/","section":"series","tags":null,"title":"別說我教的系列"},{"body":"","link":"https://EM-Tec.github.io/categories/css/","section":"categories","tags":null,"title":"CSS"},{"body":"隨著網頁設計的發展，圖示上色效果已成為許多網站和應用程式中不可或缺的元素之一。然而，手動編輯每個圖示的色彩是一個繁瑣的任務，因此我進行了一些搜尋製作了這個CSS濾鏡生成器。\n前提 這篇文章假設你有基本的CSS能力\nCSS濾鏡生成器 開發者:毛哥EM(我) 程式類型:免費開源網站 網站位置:毛哥EM的基地 這個濾鏡生成器網頁讓你輸入顏色或使用顏色選擇器，然後生成CSS filter原始碼，讓你輕鬆地創造出完美的圖示上色效果。只需將原始碼複製並粘貼到你的CSS樣式表中，就可以在你的網站上應用這些美麗的效果。\n此外，我們的濾鏡生成器網頁還提供了預覽功能，並且隨時進行修改。上半部分顯示的是CSS background-color真實顏色，下半部分則是應用了濾鏡效果的圖示，兩個顏色範圍都很大且互相貼著，如果對結果不滿意，只需點擊一下“生成濾鏡”按鈕，即可獲得新的濾鏡原始碼。\n需要注意的是，使用時圖示必須是黑色。如果不是，你可以在filter屬性中添加brightness(0) saturate(100%)，先將它們塗黑。\n希望這個CSS濾鏡生成器能夠節省你的時間並讓你的網站圖示更加美觀和獨特。如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技\n","link":"https://EM-Tec.github.io/post/css-filter/","section":"post","tags":null,"title":"CSS濾鏡生成器:輕鬆製作網頁圖示上色效果"},{"body":"你是否有群組充滿著垃圾訊息？用Line Bot\u0026amp;Line Notify轉發重要訊息給自己！不用程式經驗，複製貼上就好了！\n在 Instagram 查看這則貼文 毛哥EM資訊密技（@em.tec.blog）分享的貼文\n原理 機器人在群組收到訊息，過濾不要的，再讓Line Notfy轉傳訊息到群組或私訊給你。\nLINE bot 至Line Developers =\u0026gt; 新增或選取Provider =\u0026gt; Create a new channel =\u0026gt; Message API。\n* Messaging API 底下的 Webhook 等一下我們要填入，非常重要。\n生成Line Notify仗權 Line Notify是個比較冷門但是非常好用的工具。我們可以透過他來從第三方(如你的網站、或是ios捷徑)無限量的廣播訊息到指定的群組，或是單獨發給你。\nhttps://notify-bot.line.me/my/ =\u0026gt; 發行權杖 =\u0026gt; 把那一串複製下來，等一下要用。\n要給Line看這一串他才知道要傳送信息到哪裡。使用Line Notify而不是Line機器人的原因是免費版的官方帳號一個月只能傳送500則訊息，但Line Notify則沒有限制。\n* 記得換成電腦板模式 權杖名稱是顯示在 【 】 中的文字，建議越短越好避免洗版\n建立API(Google App Script) Google App Script 開發者:Google 類型:免費網站（可付費升級） 網址:script.google.com\n請建立一個新的專案並貼上以下內容。記得貼上記得貼上Line Notify Token。\n1// 定義一個名為 \u0026#39;doPost\u0026#39; 的函數，該函數帶有一個名為 \u0026#39;e\u0026#39; 的參數。 2function doPost(e) { 3 4 // 從傳入的 POST 請求中解析出文本消息。只要是傳給機器人的訊息都會被解析出來。 5 var message = JSON.parse(e.postData.contents).events[0].message.text; 6 7 // 從傳入的 POST 請求中解析出使用者 ID。 8 var id = JSON.parse(e.postData.contents).events[0].source.userId; 9 10 // 如果沒有 ID，則返回。你可以在這裡加入你的過濾條件。 11 if (!id) return; 12 13 // 設置 Line Notify API 的權杖。 14 var token = \u0026#34;YOUR_LINE_NOTIFY_TOKEN\u0026#34;; 15 16 // 設置 POST 請求的選項。 17 var options = { 18 \u0026#34;method\u0026#34;: \u0026#34;post\u0026#34;, 19 \u0026#34;payload\u0026#34;: { 20 \u0026#34;message\u0026#34;: id + \u0026#34;\\n\u0026#34; + message // 這裡是要傳送的訊息，我們第一行放了發送者的id，第二行放了訊息本身。可以自行修改。 21 }, 22 \u0026#34;headers\u0026#34;: { 23 \u0026#34;Authorization\u0026#34;: \u0026#34;Bearer \u0026#34; + token 24 } 25 }; 26 27 // 發送 POST 請求到 Line Notify API。會傳給剛才設定的權杖指定的群組或私人訊息。 28 UrlFetchApp.fetch(\u0026#34;https://notify-api.line.me/api/notify\u0026#34;, options); 29} 我們在傳送的訊息同時添加了發送者的id。如果你想要塞選訊息的話請修改第四行if裡面的參數\n!id - 全部（預設） id==\u0026quot;某人id\u0026quot; - 不要某人 id!=\u0026quot;某人id\u0026quot; - 只要某人 id!=\u0026quot;某人id\u0026quot; || id!=\u0026quot;某人id\u0026quot; - 只要某一群人 小叮嚀 為避免程式碼站太多空間，可能會部分隱藏。請記得展開或直接複製。 做好了之後點擊執行▶️，你會需要授予你的程式讀取資料的權限。因為你寫的程式沒有被Google驗證過所以會顯示不安全，但我相信你不會把你的帳號搞爆，對吧。執行後會看到錯誤，這是正常的，因為我們直接執行沒有給他訊息。\n接下來我們要部署它，讓它成為一個網站來讓我們抓。這裡選擇網頁應用程式，所有人都以你的身份讀取。按下部署就可以囉~\n這裡我們把部署的網址複製起來。如果要做修改除了按儲存之外要記得重新部署成新版本才會更新喔。\n將這個部屬的網址貼到剛才Webhook的地方就完成了\n","link":"https://EM-Tec.github.io/post/line2notify/","section":"post","tags":["自製","JavaScript","GAS"],"title":"【GAS】用Line Bot\u0026Line Notify轉發群組訊息給自己"},{"body":"Vim 是一款非常流行的文本編輯器，在 Unix 系統中非常受歡迎。如果您正在尋求一款快速、高效和功能強大的文本編輯器，那麼 Vim 可能是您的最佳選擇。\n在本文中，我們將提供一些快速上手 Vim 的技巧，以幫助您快速熟悉這款編輯器。\n安裝 下面是各平台安裝 Vim 的步驟：\nWindows 前往 Vim 官方網站下載最新版本的 Windows 安裝包並執行安裝程式，並按照提示進行安裝。當然你也可以使用choco等套件管理器安裝\n1choco install vim 在命令提示字元中運行 vim 以啟動 Vim\nAndroid Termux 1pkg install vim MacOS 1brew install vim Linux 1sudo apt-get install vim 基本操作 如果您想打開 Vim，只需在終端機中輸入以下命令：\n1$ vim [filename] 如果您想創建一個新文件，可以將文件名放入命令中。如果您想編輯現有文件，可以將文件名作為參數傳遞給命令。\n一旦您進入 Vim，您將看到一個空白文件。如果您想進行編輯，需要進入“編輯模式”。要進入編輯模式，只需按下i鍵。此時，您將可以在文件中輸入文本。\n要退出編輯模式，只需按下“Esc”鍵。此時，您將回到“命令模式”。在命令模式中，您可以使用各種命令，例如保存文件、退出 Vim 等。\n保存和退出 如果您想保存更改並退出 Vim，只需在命令模式中輸入以下命令：:wq\n如果您不想保存更改，可以使用以下命令：:q!\n其他常用指令 以下是一些常用的 Vim 指令：\n:w - 保存文件 :q - 退出 Vim :w [filename] - 將文件另存為 [filename] :x - 保存文件並退出 Vim dd - 刪除光標所在的行 u - 撤消上一個操作 ctrl + r - 還原上一個撤銷的操作 yy - 複製光標所在的行 p - 在光標下面粘貼複製的文本 : [行數] - 跳到文件中的第 [行數] 行 / [內容] - 在文件中搜索 [內容] Vim 的命令很多，但只需要熟悉一些常用指令即可快速操作。希望這篇文章能對您快速上手 Vim 有所幫助。如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技\n","link":"https://EM-Tec.github.io/post/vim/","section":"post","tags":["終端機"],"title":"【終端機】快速上手 Vim"},{"body":"","link":"https://EM-Tec.github.io/tags/android/","section":"tags","tags":null,"title":"Android"},{"body":"赤鬼牛排店之前是使用服務鈴，現在是使用 Samsung Galaxy 的平板進行點餐。想必會有可愛的小朋友拿它來看影片或玩遊戲，而赤鬼基於安全考量後來加了應用程式鎖，而這篇文章就要教你如何破解它開啟你想開的軟體\n警告 此篇文章僅供學術研究用途，任何後果請自負。\n首先假設我們按正方形按鈕想開啟之前開過的APP，會跳到一個叫你輸入密碼的畫面。仔細觀察會發現每次出現輸入密碼都是先開啟你的要開的頁面再跳轉到輸入密碼畫面，且上面還有著廣告，因此我們可以看出它是裝了一個第三方軟體。所以我們只要關閉這個軟體就結束了。\n教學 如果你是安卓使用者應該會知道在應用程式資訊這裡可以強制停止某個軟體，所以只要有辦法按到這個按鈕並點擊確定就可以強制停止這個應用程式了\n進入搜尋 從畫面最上面往下滑兩次開啟通知，並顯示所有按鈕，接著點選搜尋。這時請長按App Lock軟體並點選應用程式資訊（如果沒有出現請先搜尋App Lock）\n這時我們會跳到設定APP，當然，又會出現輸入密碼的畫面。我們就要用這個跳轉的空檔按到強制停止鍵\n雙擊正方形按鈕即會跳到上一個使用的App（也就是設定），接著馬上點選強制停止和確定。你可能會需要多試幾次才能按到，一次按一下就好不要急。\n強制停止之後你的世界就會變得清淨許多，你可以開啟App了。回主畫面會自動開啟點餐畫面，因此如果要選APP可以使用搜尋功能。\n希望這篇文章對你有所幫助，也希望可以讓赤鬼的客量上升（真的很好吃）。如果你覺得這篇文章有幫助到你歡迎在Instagram或Google新聞追蹤毛哥EM資訊密技\n","link":"https://EM-Tec.github.io/post/akaonisteak/","section":"post","tags":["Android"],"title":"破解赤鬼牛排店的平板限制"},{"body":"","link":"https://EM-Tec.github.io/tags/%E7%B5%82%E7%AB%AF%E6%A9%9F/","section":"tags","tags":null,"title":"終端機"},{"body":"Office雖然目前有提供免費線上版，且學校都有提供Office365，但是都一定要使用線上版。除了十分不方便以外許多操作也都受到限制。因此這一篇文章我要來和大家分享一個可以安全啟動Office的工具，同時也可以啟用Windows。適用於所有版本，包括最新的Office 2022及Office 365。\n首先請先下載並安裝Office（聽起來很廢話但你很難找到下載鏈接，這裡提供官方載點。）\n下載之後直接點擊setup.exe安裝。\n安裝完之後會提示你可以免費試用或提供金鑰。當然如果你有的話就不會讀這篇文章了，因此我們先關閉軟體，並以使用者管理員身分打開PowerShell。\n接著輸入這一串指令並按enter來打開這個軟體:\n1irm https://massgrave.dev/get | iex 這樣就進到軟體介面了。我們要啟用office所以請按鍵盤上的3\n接著按下數字等幾秒就啟動完成了。可以點擊0回到主選單並離開軟體（當然也可以按x）\n再次打開 Office 軟體你就會發現驗證畫面不見了！到關於介面會看到已經成功啟動了。\n如果授權到期了只需要再次執行指令就可以囉。\n","link":"https://EM-Tec.github.io/post/massgrave/","section":"post","tags":["windows","Github"],"title":"【開源】快速免費啟用Office及Windows"},{"body":"","link":"https://EM-Tec.github.io/tags/windows/","section":"tags","tags":null,"title":"windows"},{"body":"iOS、iPadOS、還有所有Apple的系統在正式發布之前都會向部分的使用者提供搶先版(Beta Version)讓使用者體驗，來蒐集回饋包括問題回報或是功能建議。這篇文章會教你如何加入Apple的Beta計畫，以及如果不適應要如何離開。\n請注意Beta版可能還會有一些問題（閃退、耗電等），但也可以反過來說原本有的Bug在Beta會先修復。（我有裝置有問題升到Beta就好了過）\n首先請到Apple官網登入Apple ID來加入Beta計畫。如果沒有加入過beta請點選Sign Up，反之Sign In\n並下載對應裝置的描述檔。下載時記得按同意下載描述檔\n接著請到設定，在最上面就可以看到「已下載描述檔」。點擊安裝還有同意後後可能會須要重新啟動，這樣就成功加入Beta計畫啦。\n到設定的一般-軟體更新就可以看到可以更新的最新版本囉（通常是beta結尾）\n如果想要退出Beta的話只要把描述檔刪除就好囉！\n","link":"https://EM-Tec.github.io/post/apple-beta/","section":"post","tags":["iOS"],"title":"【iOS】進入/退出Apple Beta的世界 搶先體驗新功能"},{"body":"在Windows11無須依靠第三方軟體，只需要一行指令即可輕鬆取得電池的使用記錄和資訊。\n取得報告方法 首先請進到命令題字元。可按Windows按鍵輸入cmd搜尋。\n接著輸入這行指令\n1powercfg /batteryreport /output \u0026#34;battery.html\u0026#34; \u0026amp;\u0026amp; battery.html 呃對，就這樣，我簡化的很簡單吧\n在「已安裝電池」(Installed Battery)下會給出筆記型電腦所配的鋰電池的設計容量(Design Capacity)和當前實際容量(Full Charge Capacity)，最下方還有循環充電次數(Cycle Count)。\n如果你感興趣的話，還可以通過「電池容量」歷史查看電池實際容量的變化情況，改變充放電習慣。 此外還有最近三天的電池電量使用記錄、電池壽命預估等。\n","link":"https://EM-Tec.github.io/post/win-battery-life/","section":"post","tags":["windows"],"title":"【Win11】取得電池報告！查看健康度、充電次數、歷史！"},{"body":"你知道學生在在學期間於全世界皆可使用免費Wifi Eduroam還有Office365嗎?這裡提供完整的操作說明! 這是一個知道的人不會願意告訴你的祕密...\n註冊教育雲 要使用這些服務要先到教育體系單一簽入服務註冊帳號，必須填真實資料。電子郵件名稱可以自己設定，最後都是自訂英文@mail.edu.tw。如果發現已經註冊過可能是國中時就有使用了，忘記密碼就重新設定。\n教育體系單一簽入服務 開發者:教育部 程式類型:官方網站 網址:https://www.sso.edu.tw/register 啟用Eduroam 註冊登入成功看到個人資料底下有一個啟用Eduroam。點擊即可在全台學校免費使用Wi-Fi。帳號就是mail，密碼就是剛才設的。\n微軟 Office 365 教育版 到微軟 Office 365 教育版雲端服務啟用網站啟用Office365。登入即可使用。Office的網站是https://www.office.com/\n記得Office的帳號是自訂英文@ms.edu.tw而不是自訂英文@mail.edu.tw喔!\n建立檔案即可線上編輯共用。共用鍵在右上角藍色按鈕。可輸入共用者Email或直接複製連結 在自己電腦上登入(Windows) 因為學校的帳號其中的用處是讓學校可以集中管理限制某些功能，而學校當然管不到你自己的電腦，所以你可能沒辦法正常登入。\n請到內建軟體Office登入學校帳號。\n連接Wi-Fi 我們學校有一些地方連得到有些地方連不到，圖一圖二我是確定可以的。要教室的無線基地台是方形的才能連eduroam喔\nEduroam 開發者:泛歐洲科研與教育網路協會 服務地區:全球 程式類型:官方網站 官網:https://eduroam.org/(不用到這裡) iPhone \u0026amp; iPad / Windows 10 \u0026amp; 11 「設定」→「Wi-Fi」，找到「eduroam」訊號 如果帳密正確，ios加入後可能會出現憑證的畫面，按「信任」就OK了 Android 「設定」→「Wi-Fi」，找到「eduroam」訊號 「安全性」應該已自動選取「802.1X EAP」 「EAP方法」請選擇「PEAP」 「階段2驗證」選「MSCHAPV2」(目前選「無」也可以過) 「CA憑證」選「不進行驗證」(手機可能會說阿很危險bluhbluh不用理他) 「身分」請填 「自訂英文@mail.edu.tw」 「匿名身分」空白即可 Windows7 有億點點複雜，真的有需要再問我或老師\n","link":"https://EM-Tec.github.io/post/edu-office-and-wifi/","section":"post","tags":null,"title":"【學生】免費全球學校Wifi \u0026 Office365教育版"},{"body":"","link":"https://EM-Tec.github.io/categories/%E7%B7%9A%E4%B8%8A%E6%95%99%E5%AD%B8/","section":"categories","tags":null,"title":"線上教學"},{"body":"ios的控制中心相較於安卓的開/關複雜許多，這篇文章我將快速介紹這些符號的功能以及如何正確開啟個人熱點別人才收得到。\n如果看到控制中心選項只有四個要長按才會叫出六個完整選項。\n首先最重要的！如下開啟個人熱點別人才收得到？ 個人熱點綠色搭配\n用wifi連：wifi符號一定要是白色！！ 用藍芽（速度很慢）：藍牙開啟 USB：電腦要裝iCloud，個人熱點綠色即可 開啟後不要急著離開，多放個三秒確認有開啟，不然按一下就走有時候不會看成功\n接下來解釋各個顏色的意義\n無色/劃掉代表關閉 相信大家都能理解。如果要關閉WiFi、藍牙要去設定關閉、打開飛航模式、或者是請siri幫忙。對你沒聽錯（要也是看錯），在控制中心關不掉\n藍色/彩色代表開啟 不解釋，開著\n從藍色按一下變白色 這會暫時終斷WiFi及藍牙連線，不過WiFi藍牙依舊開著，不能配對就是了。\n比如說台灣社交距離APP就是透過藍牙技術實現，但實際上兩台裝置並沒有連上，所以讓藍牙呈現白色就好了\n不過在這個模式下手機可能過一下子發現到新Wi-Fi就又連了\n[用專注模式關閉Wi-Fi/藍牙的方法](## 用專注模式關閉Wi-Fi/藍牙)在最下面\n灰色/按不了 手機當機/剛開有時會這樣，等一下就好了。如果是個人熱點無法開啟請確認是不是沒有開行動數據。\nWi-Fi 橋樑 在安卓上可以共用你現在的Wi-Fi給其他設備。也就是說資料會先下載到你的手機再到連接到你的裝置，適用於離太遠或想給朋友朋友的朋友的Wi-Fi時。開啟方式有的是直接開個人熱點，有的是在連線選單單獨一個開關，而在ios...沒這個功能（那還講那麼多）\n以上就是各種顏色的意義。乍看之下好像ios把它搞得很複雜，但用久了發現其實是多了更多選項。習慣就好了\n用專注模式關閉Wi-Fi/藍牙 首先請先在設定建立一個專注模式。內容/通知設定不是重點因為我們只是把它當成一個按鈕而已\n接著到捷徑建立一個自動化操作。條件就是當專注模式被開啟，動作就是關閉藍牙/Wi-Fi。執行前不用詢問，要不要通知就看個人了\n當然你不想用專注模式想放一個按鈕在主畫面也可以\n","link":"https://EM-Tec.github.io/post/ios-controls/","section":"post","tags":["ios","捷徑"],"title":"【ios】如何開熱點？你藍牙可能沒關過？帶你看懂比女生還難懂的控制中心！用專注模式關閉Wi-Fi/藍牙！"},{"body":"","link":"https://EM-Tec.github.io/tags/%E6%8D%B7%E5%BE%91/","section":"tags","tags":null,"title":"捷徑"},{"body":"","link":"https://EM-Tec.github.io/categories/%E7%AD%86%E8%A8%98/","section":"categories","tags":null,"title":"筆記"},{"body":"markdown是我很喜歡的一個寫作格式。不只是寫部落格文章，我自己平常做的筆記很多都是用markdown寫的，大大的提升我的效率和寫作體驗。不過既然都做了不如分享給大家，因此我建立了一個Github倉庫專門存放我的筆記。不過內容就不會像毛哥EM資訊密技那麼完整，且不一定和科技相關，更可能包含專業內容（雖然我不怎麼專業），有一些因為是比賽內容甚至需要知道連結才能開啟。因此大多僅供參考。\nEM\u0026#39;s Notes 開發者:毛哥EM(我) 類型:網站 連結:毛哥EM的基地 希望有幫助到你們wwww\n","link":"https://EM-Tec.github.io/post/ems-notes/","section":"post","tags":["自製"],"title":"【新網站】EM's Notes"},{"body":"班上因為又有人確診又有人隔離又開始使用視訊會議，常常被反應黑板看不清楚。明明鏡頭很好、網路不錯、且畫質設定已經調到最高還是一樣。因此我做了一個簡單網站來顯示鏡頭畫面，用螢幕分享畫面的方式讓畫質明顯提升！且黑白不會左右顛倒，不用再去裝擴充外掛！\nEM-SFW (Site for Webcam) 開發者:毛哥EM(我) 程式類型:免費開源網站 網站位置:毛哥EM的基地 縮短網址：is.gd/EMSFW 使用教學 進入https://Edit-Mr.github.io/code/EMSFW(不分大小寫，或輸入縮短網址is.gd/EMSFW也可以）並同意讀取鏡頭。如果忘記網址可以搜尋「EM-SFW」或「毛哥EM」找到網站\n你會看到一個簡單的設定畫面。你可以點擊z來開啟/關閉這個畫面。\n接著到視訊會議軟體分享螢幕畫面。選擇分享分頁且不用分享音訊（因為也沒有）即可。\n超出畫面隱藏 理論上不會超出螢幕畫面，如果真的超出了且切到畫面可以將此功能關閉。滑動滾軸到適當位置。\n圖片模式（預設關閉） 顯示的是即時擷取的影像，因此可以右鍵儲存截圖。不過因此不會顯示運行時間且不能使用字母畫面功能（沒有很重要）\n視訊畫面會被擠壓成視窗大小，適用於鏡頭畫面變形或老師太胖時...\n子母畫面 可以讓你的鏡頭畫面顯示在你的螢幕頂層，讓你可以知道你在鏡頭中長什麼樣。確保大家不會看到NSFW的畫面（所以叫EM-SFW）\n在圖片模式關閉時可以使用子母畫面功能。將鼠標移到畫面上並按下字母畫面按鈕（有時需要先按三個點）\n儲存圖片 在影像模式中可以點擊右鍵並點選儲存圖片來下載當前影像，如老師想儲存他辛辛苦苦寫的黑板。不過儲存的是原始的影像，不會進行翻轉（但比例依舊會被拉長）\n提示 如果你覺得這個免費的網站有幫助到你請分享讓更多人可以有更好的線上上課體驗，讓沒有理由不認真上課\n","link":"https://EM-Tec.github.io/post/em-sfw/","section":"post","tags":["自製","視訊會議"],"title":"【視訊會議】EM-SFW - 鏡頭畫質的天花板！黑板不再顛倒/模糊/切割！"},{"body":"","link":"https://EM-Tec.github.io/tags/%E8%A6%96%E8%A8%8A%E6%9C%83%E8%AD%B0/","section":"tags","tags":null,"title":"視訊會議"},{"body":"","link":"https://EM-Tec.github.io/series/%E7%B7%9A%E4%B8%8A%E6%95%99%E5%AD%B8/","section":"series","tags":null,"title":"線上教學"},{"body":"最後更新：10/6 我整理出C++題目常見的題目並寫出我認為的最佳解(取自西苑高一電腦課)。也有提供一些減少程式碼的常用技巧。如果解不出來到想砸電腦或想只到更簡單的方法可以來看看\n警告 網站終於搶救成功啦!這兩天來更新!這裡的程式僅供參考，請不要偷懶直接複製貼上，小考你不會過的。\n關於有人問我是誰，選單有各種連結。\n目前更新到503 上課只會上到425\n小提示 當然如果你只是想看解答然後像月同學一樣手機開超大聲打音遊可以點我跳到解答\nC語言 如果你忘記C語言的語法想看看可以閱讀這篇文章，不過相信你學過C++就不會想要碰它了。\n減少程式碼的常用技巧 這裡講的是真的少打一點，不是全部縮成一排。減少程式碼可以方便閱讀且在bebug(找錯誤)比較方便\n定義時賦予值 1int a b; 2a=87; 可以簡化成int a=87, b;一行\n在輸出行內進行運算 1a=x+y; 2cout\u0026lt;\u0026lt;a 可以簡化成cout\u0026lt;\u0026lt;x+y;一行\nif else省去大括號 if else裡面如果只有一行指令可以省去大括號{}\n1if(a\u0026gt;b){ 2 cout\u0026lt;\u0026lt;a; 3}else{ 4 cout\u0026lt;\u0026lt;b 5} 可以簡化成if(a\u0026gt;b) cout\u0026lt;\u0026lt;a; else cout\u0026lt;\u0026lt;b;一行\n數學含式庫\u0026lt;math.h\u0026gt; 列出來怕你忘記\nM_E 回傳自然常數 e M_PI 回傳圓周率 π M_SQRT2 回傳根號2 sin(x) cos(x) tan(x) asin(x) acos(x) atan(x) 不解釋bj4 exp(x) 回傳自然常數 e 的 x 次方 pow(x, y) 回傳 x 的 y 次方 pow(x) 回傳10的 x 次方 sqrt(x) 回傳 x 的根號 log(x) 回傳以 e 為底的對數 log10(x) 回傳以10為底的對數 abs(x) 回傳整數 x 的絕對值 fabs(x) 回傳實數 x 的絕對值 題目解答 就..雖然我很貼心還給你了複製鍵...但有問題要問...\n裡面的換行空格是大家的習慣寫法，可以參考。且你會發現雖然空格多一點程式還是比標準答案少\n提醒 裡面有一些東西還沒有教過，有興趣可以問我或是Google。\n目前只更新到308\nCh.1 101.Hello C++ 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;Hello C++\u0026#34;; 6 return 0; 7} 102.BMI 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 float weight, height, BMI; 6 cin \u0026gt;\u0026gt; weight \u0026gt;\u0026gt; height; 7 BMI = weight / ((height / 100) * (height / 100)); 8 cout \u0026lt;\u0026lt; \u0026#34;BMI為\u0026#34; \u0026lt;\u0026lt; BMI; 9 return 0; 10} Ch.2 201.運算子 提示筆記 先乘除後加減(依照優先順序)\n有括弧的先計算 多個括弧皆使用小括弧。EX:((8+9)-7) 整數跟整數相除的結果為整數 運算子 定義 優先順序 結合律 ++/-- 後置遞增/遞減 2 左 ++/-- 前置遞增/遞減 3 右 +/- 正負號 3 右 * 乘法 5 左 / 除法 5 左 % 餘數(mod) 5 左 +/- 加法/減法 6 左 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int x, y; 6 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 7 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 加 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的和是 \u0026#34; \u0026lt;\u0026lt; x + y \u0026lt;\u0026lt; endl; 8 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 減 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的差是 \u0026#34; \u0026lt;\u0026lt; x - y \u0026lt;\u0026lt; endl; 9 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 乘 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的積是 \u0026#34; \u0026lt;\u0026lt; x * y \u0026lt;\u0026lt; endl; 10 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 除 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的結果是 \u0026#34; \u0026lt;\u0026lt; 1.0 * x / y \u0026lt;\u0026lt; endl; 11 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 除 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的商是 \u0026#34; \u0026lt;\u0026lt; x / y \u0026lt;\u0026lt; endl; 12 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; 除 \u0026#34; \u0026lt;\u0026lt; y \u0026lt;\u0026lt; \u0026#34; 的餘數是 \u0026#34; \u0026lt;\u0026lt; x % y \u0026lt;\u0026lt; endl; 13 return 0; 14} 202.成績計算 請製作一個程式，輸入五個成績，計算總和與平均並輸出\n提示筆記 C++換行可以用\u0026lt;\u0026lt;endl，但C語言的\\n明顯短了三倍\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 float sum, a, b; 6 for (int i = 1; i \u0026lt; 6; ++i) { 7 cin \u0026gt;\u0026gt; b; 8 a += b; 9 } 10 cout \u0026lt;\u0026lt; \u0026#34;總和:\u0026#34; \u0026lt;\u0026lt; a; 11 cout \u0026lt;\u0026lt; \u0026#34;\\n平均:\u0026#34; \u0026lt;\u0026lt; a / 5; 12 return 0; 13} 203.矩形周長面積 請製作一個程式，輸入長方形的長 寬，並計算周長與面積\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int x, y; 6 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 7 cout \u0026lt;\u0026lt; \u0026#34;周長=\u0026#34; \u0026lt;\u0026lt; 2 * (x + y); 8 cout \u0026lt;\u0026lt; \u0026#34;\\n面積=\u0026#34; \u0026lt;\u0026lt; x * y; 9 return 0; 10} 204.畢氏定理 請製作一個程式，輸入直角三角形兩邊長，利用畢氏定理求斜邊長\n提示筆記 sqrt(x) 回傳 x 的平方根(Square Root)\n1#include\u0026lt;iostream\u0026gt; 2#include\u0026lt;cmath\u0026gt; 3 4using namespace std; 5int main() { 6 float x, y; 7 cin \u0026gt;\u0026gt; x \u0026gt;\u0026gt; y; 8 cout \u0026lt;\u0026lt; \u0026#34;斜邊長=\u0026#34; \u0026lt;\u0026lt; sqrt(x * x + y * y); 9 return 0; 10} 205.兩點距離 請製作一個程式，輸入二維中兩點座標，計算出兩點距離\n提示筆記 pow(x, y) 回傳 x 的 y 次方\n1#include\u0026lt;iostream\u0026gt; 2 3#include\u0026lt;cmath\u0026gt; 4 5using namespace std; 6int main() { 7 float x1, x2, y1, y2; 8 cin \u0026gt;\u0026gt; x1 \u0026gt;\u0026gt; y1 \u0026gt;\u0026gt; x2 \u0026gt;\u0026gt; y2; 9 cout \u0026lt;\u0026lt; \u0026#34;兩點距離=\u0026#34; \u0026lt;\u0026lt; sqrt(pow(x1 - x2, 2) + pow(y1 - y2, 2)); 10 return 0; 11} 206.兩點求一線 請製作一個程式，輸入二維中兩點座標，計算出通過兩點的直線方程式\n1#include\u0026lt;iostream\u0026gt; 2#include\u0026lt;cmath\u0026gt; 3 4using namespace std; 5int main(){ 6\tfloat x1,x2,y1,y2,m; 7\tcin\u0026gt;\u0026gt;x1\u0026gt;\u0026gt;y1\u0026gt;\u0026gt;x2\u0026gt;\u0026gt;y2; 8\tcout\u0026lt;\u0026lt;\u0026#34;方程式:y=\u0026#34;\u0026lt;\u0026lt;(y1-y2)/(x1-x2)\u0026lt;\u0026lt;\u0026#34;x+\u0026#34;\u0026lt;\u0026lt;(y1*x2-y2*x1)/(x2-x1); 9} 原本想法 斜率m為y變化量除以x變化量。將一數代數y=mx+b即可求出b並寫出方程式。b只會用一次算出來直接輸出，不用多設一個變數。\n不過浮點數是使用科學記號儲存，有一定的誤差 當斜率本身已經有誤差時，再用來算出截距，誤差將擴大。因此最後一個測資會有誤差。\n1#include\u0026lt;iostream\u0026gt; 2#include\u0026lt;cmath\u0026gt; 3using namespace std; 4int main(){ 5\tfloat x1,x2,y1,y2,m; 6\tcin\u0026gt;\u0026gt;x1\u0026gt;\u0026gt;y1\u0026gt;\u0026gt;x2\u0026gt;\u0026gt;y2; 7\tm=(y1-y2)/(x1-x2); 8\tcout \u0026lt;\u0026lt; \u0026#34;方程式:y=\u0026#34; \u0026lt;\u0026lt; m \u0026lt;\u0026lt; \u0026#34;x+\u0026#34; \u0026lt;\u0026lt; y2-x2*m; 9} Ch.3 301.奇偶同籠? 請製作一個程式，可以讓使用者輸入一個整數，判斷是奇數還是偶數\n提示筆記 如果否則的語法是\n1if (條件式){ 2\t程式區塊; 3} else { 4 程式區塊; 5} 如果大括號裡面只有一行程式可以省略\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a; 6 cin \u0026gt;\u0026gt; a; 7 if (a % 2 == 0) cout \u0026lt;\u0026lt; \u0026#34;偶數\u0026#34;; 8 else cout \u0026lt;\u0026lt; \u0026#34;奇數\u0026#34;; 9 return 0; 10} 302.及格? 請製作一個程式，讓使用者輸入一個成績，顯示「成績及格」或「成績不及格」\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a; 6 cin \u0026gt;\u0026gt; a; 7 if (a \u0026gt;= 60) cout \u0026lt;\u0026lt; \u0026#34;成績及格\u0026#34;; 8 else cout \u0026lt;\u0026lt; \u0026#34;成績不及格\u0026#34;; 9 return 0; 10} 303.幾科不及格 請製作一個程式：\n可以輸入五個成績 計算有幾科不及格 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a[5], b = 0; 6 cin \u0026gt;\u0026gt; a[0] \u0026gt;\u0026gt; a[1] \u0026gt;\u0026gt; a[2] \u0026gt;\u0026gt; a[3] \u0026gt;\u0026gt; a[4]; 7 for (int y: a) 8 if (y \u0026lt; 60) b++; 9 cout \u0026lt;\u0026lt; \u0026#34;共\u0026#34; \u0026lt;\u0026lt; b \u0026lt;\u0026lt; \u0026#34;科不及格\u0026#34;; 10 return 0; 11} 304.明年當學弟/妹? 請製作一個程式：\n可以輸入五個成績 判斷明年是否當學弟妹(不及格科數達一半) 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a[5], b = 0; 6 cin \u0026gt;\u0026gt; a[0] \u0026gt;\u0026gt; a[1] \u0026gt;\u0026gt; a[2] \u0026gt;\u0026gt; a[3] \u0026gt;\u0026gt; a[4]; 7 for (int y: a) 8 if (y \u0026lt; 60) b++; 9 if (b \u0026gt; 2) cout \u0026lt;\u0026lt; \u0026#34;明年當學弟妹\u0026#34;; 10 else cout \u0026lt;\u0026lt; \u0026#34;明年當學長姊\u0026#34;; 11 return 0; 12} 305.比大小 請製作一個程式，輸入兩個正整數，輸出較大者\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b; 6 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 7 if (a \u0026gt; b) cout \u0026lt;\u0026lt; a; 8 else cout \u0026lt;\u0026lt; b; 9 return 0; 10} 306.本丸好呷 某數字商店飯糰第二件59折，以低價者計。請製作一個程式，輸入兩個正整數，代表兩顆飯糰的定價，請計算優惠後的總價。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b, c; 6 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 7 if (a \u0026gt; b) c = 0.59 * b + a; 8 else c = 0.59 * a + b; 9 cout \u0026lt;\u0026lt; \u0026#34;優惠價=\u0026#34; \u0026lt;\u0026lt; c; 10 return 0; 11} 307.比仨大 請製作一個程式，輸入三個正整數，輸出最大者\n更新:最大值b如果一開始沒有給定值會被設為0。故先將b設為第一個數再進行比較。\n1#include\u0026lt;iostream\u0026gt; 2using namespace std; 3int main(){ 4 int a[3]; 5 cin\u0026gt;\u0026gt;a[0]\u0026gt;\u0026gt;a[1]\u0026gt;\u0026gt;a[2]; 6 int b = a[0]; 7 for( int y : a ) if(y\u0026gt;b) b=y; 8 cout\u0026lt;\u0026lt;\u0026#34;最大值=\u0026#34;\u0026lt;\u0026lt;b; 9 return 0; 10} 308.比不完 請製作一個程式，輸入五個正整數，輸出最大者\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a[5], b; 6 cin \u0026gt;\u0026gt; a[0] \u0026gt;\u0026gt; a[1] \u0026gt;\u0026gt; a[2] \u0026gt;\u0026gt; a[3] \u0026gt;\u0026gt; a[4]; 7 for (int y: a) 8 if (y \u0026gt; b) b = y; 9 cout \u0026lt;\u0026lt; \u0026#34;最大值=\u0026#34; \u0026lt;\u0026lt; b; 10 return 0; 11} 309.正負? 請製作一個程式，判斷輸入的數字是正數、負數還是0\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a; 6 cin \u0026gt;\u0026gt; a; 7 if (a \u0026gt; 0) cout \u0026lt;\u0026lt; \u0026#34;正數\u0026#34;; 8 else if (a == 0) cout \u0026lt;\u0026lt; \u0026#34;零\u0026#34;; 9 else cout \u0026lt;\u0026lt; \u0026#34;負數\u0026#34;; 10 return 0; 11} 310.分級 請製作一個程式，讓使用者輸入成績，並判斷等級：\n90~100分：A 80~89分：B 70~79分：C 60~69分：D 0~59分：F 1#include\u0026lt;iostream\u0026gt; 2using namespace std; 3int main() { 4 int a; 5 cin \u0026gt;\u0026gt; a; 6 switch (a / 10) { 7 case 10: 8 case 9: 9 cout \u0026lt;\u0026lt; \u0026#34;A\u0026#34;; 10 break; 11 case 8: 12 cout \u0026lt;\u0026lt; \u0026#34;B\u0026#34;; 13 break; 14 case 7: 15 cout \u0026lt;\u0026lt; \u0026#34;C\u0026#34;; 16 break; 17 case 6: 18 cout \u0026lt;\u0026lt; \u0026#34;D\u0026#34;; 19 break; 20 default: 21 cout \u0026lt;\u0026lt; \u0026#34;F\u0026#34;; 22 } 23 return 0; 24} 311.電腦教室不能帶飲料進來 某項數字商店飲料定價87元，第二件8折，第三件77折 請製作一個程式可以輸入件數計算價錢\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a,c; 6 float b[4]={0,1,1.8,2.57}; 7 cin \u0026gt;\u0026gt; a; 8 c=a/3*223.59+b[a%3]*87; 9 cout \u0026lt;\u0026lt; \u0026#34;總價=\u0026#34; \u0026lt;\u0026lt; c; 10 return 0; 11} 312.一塊錢玩兩次 ax2 + bx + c = 0，請製作一個程式，輸入a、b、c，解一元二次方程式。 若a = 0則輸出ERROR\n令d = b2 - 4ac：\n若d = 0，則輸出方程式唯一解x=-b/2a\n若d \u0026gt; 0，則輸出方程式兩解x=(-b±√d)/2a\n若d \u0026lt; 0，則輸出無實數解\n1#include\u0026lt;iostream\u0026gt; 2 3#include\u0026lt;cmath\u0026gt; 4 5using namespace std; 6int main() { 7 float a, b, c; 8 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 9 if (a == 0) cout \u0026lt;\u0026lt; \u0026#34;ERROR\u0026#34;; 10 else { 11 float d = b * b - 4 * a * c; 12 if (d \u0026lt; 0) cout \u0026lt;\u0026lt; \u0026#34;無實數解\u0026#34;; 13 else { 14 if (d == 0) cout \u0026lt;\u0026lt; \u0026#34;唯一解x=\u0026#34; \u0026lt;\u0026lt; 0 - b / (a * 2); 15 else cout \u0026lt;\u0026lt; \u0026#34;兩解:\\nx1=\u0026#34; \u0026lt;\u0026lt; (0 - b + sqrt(d)) / 2 * a \u0026lt;\u0026lt; \u0026#34;\\nx2=\u0026#34; \u0026lt;\u0026lt; (0 - b - sqrt(d)) / 2 * a; 16 } 17 } 18 return 0; 19} 313.三角形 請製作一個程式，輸入三角形三邊長a、b、c，先判斷能否構成三角形，若無法構成三角形則輸出ERROR，然後評定三角形種類，最後計算三角形面積。\n假如𝑎2+𝑏2\u0026gt;𝑐2，為銳角三角形 假如𝑎2+𝑏2=𝑐2，為直角三角形 假如𝑎2+𝑏2\u0026lt;𝑐2，為鈍角三角形 令d=(a+b+c)/2，三角形面積=√(d(d−a)(d−b)(d−c)) 1#include\u0026lt;iostream\u0026gt; 2 3#include\u0026lt;cmath\u0026gt; 4 5using namespace std; 6int main() { 7 float a, b, c, d; 8 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b \u0026gt;\u0026gt; c; 9 if (a \u0026gt; b) { 10 d = a; 11 a = b; 12 b = d; 13 } 14 if (b \u0026gt; c) { 15 d = b; 16 b = c; 17 c = d; 18 } 19 if (c \u0026gt;= a + b) { 20 cout \u0026lt;\u0026lt; \u0026#34;ERROR\u0026#34;; 21 } else { 22 23 int e = b * b + a * a; 24 int f = c * c; 25 if (e \u0026gt; f) cout \u0026lt;\u0026lt; \u0026#34;銳\u0026#34;; 26 else 27 if (e == f) cout \u0026lt;\u0026lt; \u0026#34;直\u0026#34;; 28 else cout \u0026lt;\u0026lt; \u0026#34;鈍\u0026#34;; 29 float D = (a + b + c) / 2; 30 cout \u0026lt;\u0026lt; \u0026#34;角三角形\\n面積=\u0026#34; \u0026lt;\u0026lt; sqrt(D * (D - a) * (D - b) * (D - c)); 31 } 32 return 0; 33} Ch.4 這一段有點尷尬，沒有人叫你用for迴圈你幹嘛寫那麼多行跑那麼久?測資要什麼複製貼上就好了。\n如果你想用正規的辦法for的原型在這裡相信你會的uwu\n1for(變數設為;如果...; 變數要...){ 2 指令區塊; 3 [break;] //跳出迴圈 4 [continue;] //跳下一次迴圈 5} 比如說這兩個程式都會輸出uwu uwu uwu\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i; 6 for (i = 0; i \u0026lt; a; i++) { 7 cout \u0026lt;\u0026lt; \u0026#34;uwu \u0026#34;; 8 } 9 return 0; 10} 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 for (int i = 0; i \u0026lt; a; i++) 6 cout \u0026lt;\u0026lt; \u0026#34;uwu \u0026#34;; 7 return 0; 8} 401 請列印出1 2 3 4 5 6 7 8 ......19\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\u0026#34;; 6 return 0; 7} 402 請列印出1 3 5 7 9 11 13 15 17 19\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;1 3 5 7 9 11 13 15 17 19 \u0026#34;; 6 return 0; 7} 403 請列印出7 6 5 4 3 2 1 0 -1 -2 -3\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;7 6 5 4 3 2 1 0 -1 -2 -3 \u0026#34;; 6 return 0; 7} 405 請列印出7 5 3 1 -1 -3 -5 -7 -9 -11\n不要問我404去哪。404找不到此頁面\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;7 5 3 1 -1 -3 -5 -7 -9 -11 \u0026#34;; 6 return 0; 7} 406 請製作一個程式計算1~100之和\n國小數學會吧...梯形公式。當然你要直接輸出5050也可以\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 cout \u0026lt;\u0026lt; \u0026#34;5050\u0026#34;; 6 return 0; 7} 407 輸入兩個整數a,b，計算a到b的合(包含a、b)\n例如輸入1跟100，計算1~100之合為5050\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b; 6 cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b; 7 cout \u0026lt;\u0026lt; (a + b) * (abs(a - b) + 1) / 2; 8 return 0; 9 10} 408 請製作一個程式，輸入的第一個正整數為班級人數n，代表接下來會有n個正整數，為班上每個人的成績。請計算班級總分。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b, c = 0, i; 6 cin \u0026gt;\u0026gt; a; 7 for (i = 0; i \u0026lt; a; i++) { 8 cin \u0026gt;\u0026gt; b; 9 c = c + b; 10 } 11 cout \u0026lt;\u0026lt; c; 12 return 0; 13} 409 請製作一個程式，輸入的第一個正整數為班級人數n，代表接下來會有n個正整數，為班上每個人的成績。請計算班級平均。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b, c = 0, i; 6 cin \u0026gt;\u0026gt; a; 7 for (i = 0; i \u0026lt; a; i++) { 8 cin \u0026gt;\u0026gt; b; 9 c = c + b; 10 } 11 cout \u0026lt;\u0026lt; 1.0 * c / a; 12 return 0; 13} 410 請製作一個程式，輸入的第一個正整數為班級人數n，代表接下來會有n個正整數，為班上每個人的成績。請計算班級中不及格的人數。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int n,a,b=0,i; 6 cin \u0026gt;\u0026gt; n; 7 for (i = 0; i \u0026lt; n; i++) { 8 cin \u0026gt;\u0026gt; a; 9 if(a\u0026lt;60) b++; 10 } 11 cout \u0026lt;\u0026lt; b; 12 return 0; 13} 411 請製作一個程式，將1~548701487的整數中篩選出94或87的倍數，\n計算有多少個 計算這些數的總和 1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i, a = 0, b = 0; 6 for (i = 1; i \u0026lt;= 548701487; i++) { 7 if (i % 87 == 0 || i % 94 == 0) { 8 a++; 9 b += i; 10 } 11 } 12 cout \u0026lt;\u0026lt; a \u0026lt;\u0026lt; endl \u0026lt;\u0026lt; b; 13 return 0; 14} 412 請製作一個程式，輸入一個整數n，計算1~n的整數中(n\u0026lt;10000)，出現過多少次5\n例如2345含有一次5，5555含有四次5\n1#include\u0026lt;iostream\u0026gt; 2 3#include\u0026lt;math.h\u0026gt; 4 5using namespace std; 6int main() { 7 int i, o, a, b = 0, c; 8 cin \u0026gt;\u0026gt; a; 9 for (i = 1; i \u0026lt;= a; i++) { 10 for (o = 0; o \u0026lt;= 5; o++) { 11 c = i / pow(10, o); 12 if (c % 10 == 5) b++; 13 } 14 } 15 cout \u0026lt;\u0026lt; b; 16 return 0; 17} 413 請製作一個程式，輸入一個整數x，再輸入一個整數y，檢查y是否為x的因數，輸出1或0\n1#include\u0026lt;iostream\u0026gt; 2using namespace std; 3int main() { 4 int a,b; 5 cin\u0026gt;\u0026gt;a\u0026gt;\u0026gt;b; 6 if(a%b==0) cout\u0026lt;\u0026lt;1; else cout\u0026lt;\u0026lt;0; 7 return 0; 8} 414 請製作一個程式，輸入一個整數n，求其所有因數\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i,a; 6 cin\u0026gt;\u0026gt;a; 7 for (i = 1; i \u0026lt;= a; i++) { 8 if(a%i==0) cout \u0026lt;\u0026lt; i\u0026lt;\u0026lt;\u0026#34; \u0026#34;; 9 10 } 11 return 0; 12} 415 請製作一個程式，輸入一個整數，求因數數量\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i,a,b=0; 6 cin\u0026gt;\u0026gt;a; 7 for (i = 1; i \u0026lt;= a; i++) 8 if(a%i==0) b++; 9 cout\u0026lt;\u0026lt;b; 10 return 0; 11} 416 請製作一個程式，輸入一個整數，判斷其是質數還是合數\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i,a,b=0; 6 cin\u0026gt;\u0026gt;a; 7 for (i = 1; i \u0026lt;= a; i++) 8 if(a%i==0) b++; 9if(b==2) cout\u0026lt;\u0026lt;\u0026#34;質數\u0026#34;; else 10 cout\u0026lt;\u0026lt;\u0026#34;合數\u0026#34;; 11 return 0; 12} 417 請製作一個程式，輸入一個整數n，列出費式數列n項\n1 1 2 3 5 8 13 21……\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, b = 0, x = 0, y = 1, z, o; 6 cin \u0026gt;\u0026gt; a; 7 for (o = 0; o \u0026lt; a; o++) { 8 z = x; 9 x = x + y; 10 y = z; 11 cout \u0026lt;\u0026lt; x \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 12 } 13 14 return 0; 15} 418 請製作一個程式，使用者輸入兩個數字，使用輾轉相除法，求兩數最大公因數\n1#include\u0026lt;iostream\u0026gt; 2using namespace std; 3 4int main() 5{ 6 int a, b, t; 7 8 while( cin \u0026gt;\u0026gt; a \u0026gt;\u0026gt; b ) 9 { 10 while( b!=0 ) 11 { 12 t = b; 13 b = a%b; 14 a = t; 15 } 16 cout \u0026lt;\u0026lt; a \u0026lt;\u0026lt; endl; 17 } 18 19 return 0; 20} 419 請製作一個程式，使用者輸入一個整數n，求質因數分解\n1#include\u0026lt;iostream\u0026gt; 2using namespace std; 3 4int main() 5{ 6 int n,i; 7 cin \u0026gt;\u0026gt; n; 8 i = 2; 9 while( n \u0026gt; 1 ){ 10 while( n%i == 0 ){ 11 cout \u0026lt;\u0026lt; i; 12 n = n/i; 13 if(n!=1) cout\u0026lt;\u0026lt;\u0026#34;*\u0026#34;; 14 } 15 i = i+1; 16 } 17 cout \u0026lt;\u0026lt; endl; 18 19 return 0; 20} 420 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的星星直角三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 for (int i = 0; i \u0026lt;= n; i++) { 9 for (int o = 0; o \u0026lt; i; o++) cout \u0026lt;\u0026lt; \u0026#34;*\u0026#34;; 10 cout \u0026lt;\u0026lt; endl; 11 } 12 13 return 0; 14} 421 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的反星星直角三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 9 for (int i = 0; i \u0026lt;= n; i++) { 10 for (int a = 0; a \u0026lt; i; a++) cout \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 11 for (int o = 0; o \u0026lt; n - i; o++) cout \u0026lt;\u0026lt; \u0026#34;*\u0026#34;; 12 cout \u0026lt;\u0026lt; endl; 13 } 14 15 return 0; 16} 422 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的數字三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 for (int i = 0; i \u0026lt;= n; i++) { 9 for (int o = 1; o \u0026lt;= i; o++) cout \u0026lt;\u0026lt; o; 10 cout \u0026lt;\u0026lt; endl; 11 } 12 13 return 0; 14} 423 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的數字三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 for (int i = 0; i \u0026lt;= n; i++) { 9 for (int o = n; o \u0026gt; 0; o--) 10 if (o \u0026gt; i) cout \u0026lt;\u0026lt; o; 11 cout \u0026lt;\u0026lt; endl; 12 } 13 14 return 0; 15} 424 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的數字三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 for (int i = 0; i \u0026lt;= n; i++) { 9 for (int o = 1; o \u0026lt;= n; o++) 10 if (o \u0026gt; n - i) cout \u0026lt;\u0026lt; o; 11 cout \u0026lt;\u0026lt; endl; 12 } 13 14 return 0; 15} 425 請製作一個程式，輸入一個正整數n，列印出底為n、高為n的數字三角形\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4 5int main() { 6 int n; 7 cin \u0026gt;\u0026gt; n; 8 for (int i = 0; i \u0026lt;= n; i++) { 9 for (int o = 1; o \u0026lt;= n; o++) 10 if (o \u0026gt; n - i) cout \u0026lt;\u0026lt; o; 11 cout \u0026lt;\u0026lt; endl; 12 } 13 14 return 0; 15} 426 請製作一個程式，輸入一個整數n，列印出2~n之間的所有質數(包含2、n)\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i, a, b = 0; 6 cin \u0026gt;\u0026gt; a; 7 for (int o = 2; o \u0026lt;= a; o++) { 8 b = 0; 9 for (i = 2; i \u0026lt; o; i++) 10 if (o % i == 0) b = 1; 11 if (b == 0) cout \u0026lt;\u0026lt; o \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 12 } 13 return 0; 14} 這些應該夠你們用幾週了，剩下的有空再繼續更新。\n501 請製作一個程式，輸入一個正整數n，代表接下來共有n個整數，計算其總合\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i, a, b, c = 0; 6 cin \u0026gt;\u0026gt; a; 7 for (i = 0; i \u0026lt; a; i++) { 8 cin \u0026gt;\u0026gt; b; 9 c += b; 10 } 11 cout \u0026lt;\u0026lt; c; 12 return 0; 13} 502 請製作一個程式，輸入一個正整數n，代表接下來共有n個整數，請輸出最大值\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i, a, b, c = -100; 6 cin \u0026gt;\u0026gt; a; 7 for (i = 0; i \u0026lt; a; i++) { 8 cin \u0026gt;\u0026gt; b; 9 if (b \u0026gt; c) c = b; 10 } 11 cout \u0026lt;\u0026lt; c; 12 return 0; 13} 503 請製作一個程式，輸入一個正整數n，代表接下來共有n個整數，請輸出最大值的編號\n(如果數字相同以序號小的)\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int i, a, b, c = -99999, d = 0; 6 cin \u0026gt;\u0026gt; a; 7 for (i = 0; i \u0026lt; a; i++) { 8 cin \u0026gt;\u0026gt; b; 9 if (b \u0026gt; c) { 10 c = b; 11 d = i; 12 } 13 } 14 cout \u0026lt;\u0026lt; d; 15 return 0; 16} 504 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，利用泡沫排序法零式，將最大值移至最後方。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, i, j, b; 6 cin \u0026gt;\u0026gt; a; 7 int A[a]; 8 for (i = 0; i \u0026lt; a; i++) { 9 cin \u0026gt;\u0026gt; j; 10 A[i] = j; 11 } 12 for (i = 0; i \u0026lt; a; i++) { 13 if (A[i] \u0026gt; A[i + 1]) { 14 b = A[i]; 15 A[i] = A[i + 1]; 16 A[i + 1] = b; 17 } 18 cout \u0026lt;\u0026lt; A[i] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 19 } 20 21 return 0; 22} 505 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，利用泡沫排序法由小到大排序。\n1#include\u0026lt;iostream\u0026gt; 2 3using namespace std; 4int main() { 5 int a, i, j, b; 6 cin \u0026gt;\u0026gt; a; 7 int A[a]; 8 for (i = 0; i \u0026lt; a; i++) { 9 cin \u0026gt;\u0026gt; j; 10 A[i] = j; 11 } 12 for (j = 0; j \u0026lt; a - 1; j++) { 13 for (i = 0; i \u0026lt; a; i++) { 14 if (A[i] \u0026gt; A[i + 1]) { 15 b = A[i]; 16 A[i] = A[i + 1]; 17 A[i + 1] = b; 18 } 19 } 20 21 } 22 for (j = 0; j \u0026lt; a; j++) cout \u0026lt;\u0026lt; A[j] \u0026lt;\u0026lt; \u0026#34; \u0026#34;; 23 return 0; 24} 506 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，利用選擇排序法零式，將最小值移至最前方。\n507 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，利用選擇排序法由小到大排序。\n508 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，找出中位數。\n509 請製作一個程式，使用者輸入一個正整數n，代表接下來共有n個整數，找出眾數。\n510 請製作一個程式，輸入一個正整數n，代表接下來共有n個整數，請檢查該數列是否等差、等比或都不是\n","link":"https://EM-Tec.github.io/post/sysh_cpp/","section":"post","tags":["C++"],"title":"【C++】常見題目解答"},{"body":"","link":"https://EM-Tec.github.io/tags/c++/","section":"tags","tags":null,"title":"C++"},{"body":"","link":"https://EM-Tec.github.io/categories/development/","section":"categories","tags":null,"title":"Development"},{"body":"用PDF Toolkit (pdftk)一行指令完成各種PDF處裡！\n因為這是一個終端機用指令執行的套件，所以請開啟你的終端機(Terminal/Termux/Command)並用任意一個套件軟體安裝它。\nMac 安裝 比如說mac可以用brew\n1brew install pdftk PDF Toolkit (pdftk) 開發者:pdflabs 軟體類型:終端機套件 網址:www.pdflabs.com 安卓安裝 這裡提供安卓系統的安裝方法。請先到F-Droid下載Termux來模擬終端機。你可以直接下載apk或先下載F-Droid再下載。記得不要去Google Play下載，會有問題。\nTermux 開發者:Termux 軟體類型:安卓應用程式 官網:termux.com 安裝網址:F-Droid 進去後貼上這一串。問你什麼就好好好或 enter就好了。看我多用心給你複製鍵就算了還全部合成一行指令。\n1pkg update \u0026amp;\u0026amp; pkg upgrade \u0026amp;\u0026amp; pkg install pdftk \u0026amp;\u0026amp; termux-setup-storage Windows 安裝 windows使用者可以先安裝Chocolatey。方法是用管理員身分開啟PowerShell，接著輸入這兩串指令。\n1Set-ExecutionPolicy AllSigned 輸入完按enter\n1Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString(\u0026#39;https://community.chocolatey.org/install.ps1\u0026#39;)) 輸入完按enter，如果問你要不要繼續就按A然後enter。安裝pdftl請輸入\n1choco install pdftk 輸入完按enter，如果問你要不要繼續就按A然後enter即可。\n使用教學 請先移動到存放檔案的資料夾。比如說你是使用Termux想到你的下載資料夾\n1cd storage/downloads 你就可以開始使用啦！下面列出幾個常用的功能。\n合併多個 PDF 文件 pdftk 可以將多個 PDF 檔案合併成一個檔案。比如下面的例子：\n1pdftk 1.pdf 2.pdf 3.pdf cat output 123.pdf 或者使用檔案控制代碼這樣就能控制順序：\n1pdftk A=1.pdf B=2.pdf cat A B output 12.pdf 下面的例子使用了檔案萬用字元了。*代表所有的意思，比如說*.pdf就是所有.pdf結尾的檔案。\n1pdftk *.pdf cat output combined.pdf 下面的例子將多個檔案的多頁提取出來生成一個新的 PDF 檔案：\n1pdftk A=one.pdf B=two.pdf cat A1-7 B1-5 A8 output combined.pdf 小提醒 注:檔名一定要正確,有時看著一樣確還差個/，最好使用Tab鍵來自動補全。\n將 PDF 檔案中的一部分取出生成一個新檔案 pdftk 可以隨意刪除或旋轉頁面。下面是一個把指定頁碼的頁面移出pdf文件的範例。\n1pdftk new.pdf cat 1-96 98-end output new1.pdf 新生成的 new1.pdf 文件不包含頁碼為 97 的頁面。cat 選項後跟的引數用以指定頁碼範圍和頁面方向的限定條件。1-96 表示從 1 到 96 頁，98-end 表示從 98 頁至文件末尾。所以輸出的新 pdf 文件不包含頁碼為 97 的頁面。\n除了示例中的具體數值，還可使用一些限定字元。odd 和 even 表示奇偶頁碼。N、S、E、W、L、R、D 表示文件版面的旋轉角度（N: 0，E: 90，S: 180，W: 270，L: -90，R: +90，D: +180）。比如說\n1-6odd 表示 1，3，5 1-6even 表示 2，4，6 1-endE 表示整篇文件所有頁面都旋轉 90 度 90 度旋轉 PDF 檔案的第一頁 選轉方向可以選 \u0026quot;north\u0026quot; \u0026quot;south\u0026quot; \u0026quot;east\u0026quot; \u0026quot;west\u0026quot; \u0026quot;left\u0026quot; \u0026quot;right\u0026quot; 或 \u0026quot;down\u0026quot;\n記得要寫旋轉的頁面在關鍵字前\n1pdftk in.pdf cat 1right 2-end output out.pdf 旋轉整個文件 180 度 1pdftk in.pdf cat 1-endS out.pdf 折分文件，將 PDF 檔案的每一頁輸出成一個 PDF 檔案，輸出檔案預設命名為 pg/_0001.pdf pg/_0002.pdf 等等 1pdftk in.pdf burst 也可以指定輸出檔名，比如下面的例子：\n1pdftk in.pdf burst output page_%1d.pdf PDF 檔案加密和解密 pdftk 可以對現有 PDF 檔案進行基於密碼的加解密，也就是說對現有的加密的 PDF 檔案解密需要提供解密密碼，pdftk 不是強力破解工具。\npdftk 可以設定兩種不同的密碼，稱為：owner password 和 user password。owner password 限制了使用者是否可以對 PDF 檔案列印、修改、拷貝等。而如果設定了 user password，使用者就必須提供密碼才能察看 PDF 檔案。\nPDF 檔案可以採用 40 位加密或 128 位加密，通過使用命令選項 encrypt/_40bit 或 encrypt/_128bit 可以指定加密演算法的位數。如果不指定預設採用 128 位加密。\n權限 使用者的許可權可以使用 allow 命令選項設定，可以設定的許可權如下：\nPrinting：允許高質量列印 DegradedPrinting：允許高質量列印 ModifyContents：允許修改檔案內容 CopyContents：允許複製 ModifyAnnotations：允許添加註釋 FillIn：允許填入資料 AllFeatures：允許所有特性 加解密 與加解密相關的命令語法總結如下：\n1pdftk \u0026lt;檔案\u0026gt; 2 3 [請輸入密碼] 4 5 cat 6 7 [output 檔案名] 8 9 [encrypt_40bit | encrypt_128bit] 10 11 [allow 權限] 12 13 [owner_pw 擁有者密碼] 14 15 [user_pw 使用者密碼] 下面是幾個例子：\n1pdftk a.pdf output b.pdf owner_pw foopass 2 3pdftk a.pdf output b.pdf owner_pw foo user_pw baz 4 5pdftk a.pdf output b.pdf owner_pw foo user_pw baz allow printing 6 7pdftk secured.pdf input_pw foopass output unsecured.pdf 合併兩個 PDF 文件，其中有一個是加密的 在合併時要使用控制代碼選項來指定密碼。下面是一個示例，shortsec.pdf 是一個加密過的 PDF 文件，在合併時如果沒有指定密碼，則會出錯：\n1pdftk A=a.pdf B=b.pdf cat output combined.pdf 2 3Error: Failed to open PDF file: 4 5 a.pdf 6 7 OWNER PASSWORD REQUIRED, but not given (or incorrect) 8 9Errors encountered. No output created. 10 11Done. Input errors, so no output created. 下面通過控制代碼選項指定密碼則可以正常合併:\n1pdftk A=a.pdf B=b.pdf input_pw A=foopass cat output combined.pdf 新增 PDF 背景水印或前景圖章 將一個 PDF 檔案的水印新增到另一個 PDF 檔案中。\n1pdftk in.pdf background back.pdf output out.pdf pdftk 只提取有水印的 PDF 檔案的第一頁作為水印。\nstamp 命令選項與 background 類似，只是疊加在輸出檔案的上面（background 是疊加在輸出檔案的下面的）。\n1pdftk in.pdf stamp back.pdf output out.pdf 新增/提取 PDF 檔案附件 可以將任意檔案新增到 PDF 檔案中，比如下面的例子：\n1pdftk in.pdf attach_files 1.html 2.html to_page 6 output out.pdf 下面的例子將附件解壓縮到當前資料夾：\n1pdftk report.pdf unpack_files output . 修復損壞了的 PDF 檔案 下面的例子試圖修復一個損壞了的檔案：\n1pdftk broken.pdf output fixed.pdf 這篇資訊量有點大，建議可以加入書籤需要的時候再來看一下\n參考資料\n","link":"https://EM-Tec.github.io/post/pdftk/","section":"post","tags":["Terminal","Windows","Android"],"title":"【pdftk】萬能PDF工具！一行指令合併 旋轉 提取 "},{"body":"","link":"https://EM-Tec.github.io/tags/terminal/","section":"tags","tags":null,"title":"Terminal"},{"body":"非常歡迎您光臨毛哥EM資訊密技（以下簡稱本網站），為了讓您能夠安心的使用本網站的各項服務與資訊，特此向您說明本網站的隱私權保護政策，以保障您的權益，請您詳閱下列內容：\n一、隱私權保護政策的適用範圍 隱私權保護政策內容，包括本網站如何處理在您使用網站服務時收集到的個人識別資料。隱私權保護政策不適用於本網站以外的相關連結網站，也不適用於非本網站所委託或參與管理的人員。\n二、個人資料的蒐集、處理及利用方式 當您造訪本網站或使用本網站所提供之功能服務時，我們將視該服務功能性質，請您提供必要的個人資料，並在該特定目的範圍內處理及利用您的個人資料；非經您書面同意，本網站不會將個人資料用於其他用途。 本站使用Google Analytics來蒐集網站的使用者資訊來提供您更優質的內容及服務。 本網站在您使用服務信箱、問卷調查等互動性功能時，會保留您所提供的姓名、電子郵件地址、聯絡方式及使用時間等。 於一般瀏覽時，伺服器會自行記錄相關行徑，包括您使用連線設備的IP位址、使用時間、使用的瀏覽器、瀏覽及點選資料記錄等，做為我們增進網站服務的參考依據，此記錄為內部應用，決不對外公佈。 為提供精確的服務，我們會將收集的問卷調查內容進行統計與分析，分析結果之統計數據或說明文字呈現，除供內部研究外，我們會視需要公佈統計數據及說明文字，但不涉及特定個人之資料。 三、資料之保護 本網站架設於Github，設有防火牆、防毒系統等相關的各項資訊安全設備及必要的安全防護措施，加以保護網站及您的個人資料採用嚴格的保護措施，只由經過授權的人員才能接觸您的個人資料，相關處理人員皆簽有保密合約，如有違反保密義務者，將會受到相關的法律處分。 如因業務需要有必要委託其他單位提供服務時，本網站亦會嚴格要求其遵守保密義務，並且採取必要檢查程序以確定其將確實遵守。 四、網站對外的相關連結 本網站的網頁提供其他網站的網路連結，您也可經由本網站所提供的連結，點選進入其他網站。但該連結網站不適用本網站的隱私權保護政策，您必須參考該連結網站中的隱私權保護政策。\n五、與第三人共用個人資料之政策 本網站絕不會提供、交換、出租或出售任何您的個人資料給其他個人、團體、私人企業或公務機關，但有法律依據或合約義務者，不在此限。\n前項但書之情形包括不限於：\n經由您書面同意。 法律明文規定。 為免除您生命、身體、自由或財產上之危險。 與公務機關或學術研究機構合作，基於公共利益為統計或學術研究而有必要，且資料經過提供者處理或蒐集著依其揭露方式無從識別特定之當事人。 當您在網站的行為，違反服務條款或可能損害或妨礙網站與其他使用者權益或導致任何人遭受損害時，經網站管理單位研析揭露您的個人資料是為了辨識、聯絡或採取法律行動所必要者。 有利於您的權益。 本網站委託廠商協助蒐集、處理或利用您的個人資料時，將對委外廠商或個人善盡監督管理之責。 六、Cookie之使用 為了提供您最佳的服務，本網站會在您的電腦中放置並取用我們的 Cookie，若您不願接受 Cookie 的寫入，您可在您使用的瀏覽器功能項中設定隱私權等級為高，即可拒絕 Cookie 的寫入，但可能會導致網站某些功能無法正常執行。\n七、隱私權保護政策之修正 本網站隱私權保護政策將因應需求隨時進行修正，修正後的條款將刊登於網站上。\n如果有任何問題歡迎透過instagram聯絡：@em.tec.blog\n","link":"https://EM-Tec.github.io/policy/","section":"","tags":null,"title":"隱私權政策"},{"body":"這一篇文章我會用簡單好理解的方式讓你學會基本的使用Github和Git。且複製貼上就能成為工程師系列所搭建的網站都可以免費架設在Github\n這篇文章拖很久，8月就在寫了一直沒空更新\nGithub是什麼 Github可以說是程式的雲端硬碟或IG。註冊帳號就可以上傳檔案，可以自己決定要不要讓別人看到。當然也可以留言、按讚（星星）、或轉發改編。 上傳檔案除了可以像社群一樣用網頁版直接傳之外，因為通常一個專案裡面會有很多資料夾和檔案，所以通常會用一個叫做git的技術來實現同步檔案。\nGithub的單位是使用者/倉庫/檔案。我們會在電腦裡放一個資料夾裝一個專案，並透過git來同步 如果你還是有點不懂，實際操作一次就知道了。\nGit是什麼 你也可以想像Github是物流中心，而git就是物流。我們透過物流來傳資料到Github的倉庫合獲取檔案。git厲害的地方是每次上傳或下載時它會比較差異，只傳送不同的檔案。除了節省時間流量之外，因為記錄了每一次的更動，所以可以進行版本控制。包括釋出不同版本，和復原到指定版本。\n註冊Github並建立倉庫 進入github.com點擊Sign Up註冊跟著步驟填入資訊就好了。記得用戶名會變成你的免費網域（用戶名.github.io）所以記得好好取 ಡ ͜ ʖ ಡ\n成功註冊驗證完你可以編輯一下你的個人資訊（自我介紹，頭像之類的）。好了之後點擊New Repo，並命名為用戶名.github.io讓裡面的檔案自動變成網站。一定要一字不漏一樣喔，但如果只是要存檔案而已取什麼名字都可以。 底下有幾個選項\nDescription (optional)：*這個專案是什麼？在你的repo裡顯示，在列表中回顯示為副標題。*有沒有都可以 Add a README file：*添加一個README.md，在你的repo裡顯示，通常會寫一些介紹或使用說明。要寫多長都可以。*有沒有都可以 Add .gitignore：*在下載/上傳的時候忽略特定的檔案。比如說你用一個檔案存放你的私人密碼，你不希望這個上傳到網路上讓每個人都能看到對吧。*選擇None即可 Choose a license：*告訴別人他可以對你的程式做什麼。我是使用Apache License 2.0。你可以閱讀這些條款看哪個符合你的想法，很多人會用MIT的條款。*有沒有都可以 成功建立之後你可以看見有一個剛才系統建立的README.md。這個是別人進入這個專案網頁會看到的這個說明文件，可以先不用管它。每次我們上傳完檔案後它都會需要部署一下。大概等個三十秒就可以進去你的網站了。網站就是使用者.github.io。\n接下來我們來讓這個專案同步到你的裝置裡的某個資料夾吧。\n在開始之前我們來講一下Git的邏輯原理\nGit邏輯 如果要從網上下載下來檔案我們要clone（複製）下來 如果clone之後有更新的版本想下載直接pull就會把新增的東西下載下來。 而要上傳檔案就像剛才說寄包裹一樣。（比較好理解的方式，不寫那些專業術語）\n我們要先填寫寄信人（我們）的資訊，還有收件人的地址（網址）。這個只需要寫一次就可以了 接下來我們要add（選擇）要傳送的資料。通常會選擇傳送所有你編輯過的地方。 選好之後我們到把包裹commit（打包起來），並留下一串訊息（必填，簡單講你做了什麼編輯，之後比較好看） 最後把它push（寄）出去就好囉 底下我們來實際嘗試下載和上傳檔案\n基本設定及clone 使用Github Destop（限電腦，以PC做示範） Gitub Destop 開發者:Github (Microsoft) 軟體類型:免費軟體 網址:Github Github Destop可以讓你有按鈕可以按，不用打指令也可以使用git。多少可以節省一點時間，但看起來就沒有那麼酷（ 下載Github Destop並安裝，原則上就是你也懂的一直下一步。安裝成功後他會叫你輸入剛才講的個人資訊，並且請你登入你的Github帳號。\n登入完後他會請你選擇一個專案來clone。沒錯就是剛才講的複製下載檔案。預設位置會放到你的文件資料夾/Github/專案名裡面。按下Ctrl+Shift+E即可直接打開資料夾。\n使用Git（所有裝置適用） 如果電腦裡沒有git可以上網搜尋git來下載。\n下載完請打開任意終端機（如cmd）並輸入這兩個指令。就是剛才寄包裹所說的寄信人：\n1git config --global user.name \u0026#34;\u0026lt;使用者名字\u0026gt;\u0026#34; 2git config --global user.email \u0026#34;\u0026lt;電子信箱\u0026gt;\u0026#34; 這個指令只需要打一次就可以了。如果需要更改就再輸入一次指令即可。\n使用git來下載檔案非常簡單。只需要輸入git clone \u0026lt;url\u0026gt;就完成了。 比如說我想下載Wiwi官大為做的NICE BASEBALL來用鋼琴玩打棒球：\n1git clone 假設你想要確定是否和Github的內容是一樣的，點擊fetch(git fetch)它就會幫你自動比較。點擊後上面寫的數字就是不同檔案的數量。再次點擊pull(git pull)就會將這兩個版本合併了。\n上傳檔案 接著我們來嘗試建立一個檔案。請在專案資料夾裡面點擊右鍵，建立一個文字檔案，並命名為index.html。當你在網址中沒有指定要讀取那個檔案名時會自動導到那個資料夾的index.html\n如果你看到是一個Chrome或Edge的符號，請點擊右鍵，開啟，並選擇你的文字編輯器如Sublime Text。如果沒有可以直接選擇記事本來打開。你可以在這裡嘗試打點東西或者貼上以上程式碼。\n1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;title\u0026gt;歡迎來到我的網站\u0026lt;/title\u0026gt; 5\u0026lt;/head\u0026gt; 6\u0026lt;body\u0026gt; 7 \u0026lt;h1\u0026gt;歡迎來到我的網站\u0026lt;/h1\u0026gt; 8 \u0026lt;h2\u0026gt;我很開心\u0026lt;/h2\u0026gt; 9 \u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://em-tec.github.io/\u0026#34;\u0026gt;毛哥EM資訊密技\u0026lt;/a\u0026gt;的範例程式\u0026lt;/p\u0026gt; 10\u0026lt;/body\u0026gt; 相信你一定把最後一行文字刪了。你可以用瀏覽器打開看看這個網站（HTML檔），你會發現HTML只不過是一個要用瀏覽器打開的word檔而已！\n上傳到Github 現在我們來將它上傳到Github吧。回到Github Destop或你的終端機（確認是在你的專案），Github Destop上你會發現它知道你新增了一個檔案。而git需要先輸入git add .才會比較你有沒有更動檔案。那個.代表所有的檔案。而如果你只要打包某些檔案可以直接輸入檔名如git add index.html或指定副檔名如git add .html。\n我們在左下角那個小的輸入框打入這次你做的事（使用git請打指令git commit -m '\u0026lt;訊息\u0026gt;），或是你可以發現它預設給你打了一個訊息，懶得打直接按Commit也可以。\n打包完之後我們可以上傳囉。點擊push就好了（指令為git push），是不是超級簡單w。如果使用終端機且沒有設定SSH會叫你輸入Github的帳號密碼。且如果你輸入你真的密碼可能會有兩步驟驗證的問題，所以在這裡我們有兩個辦法解決。\nGit - 辦一個密碼 到Github的設定生成一個看起來像亂碼的密碼。大概長這樣\n1ghp_5xcCouSaccQcDw87FRFL6B0IaX0nzJ4MdWaK 在每次需要輸入密碼時請貼上這串密碼\n密碼好麻煩 用SSH SSH像是一個信物。我們生成一個SSH，並告訴Github說只要有拿這個東西就有權限做哪些事。如果你是使用Github Destop的話上傳時不用輸入密碼。因為Github自動幫你生成了SSH並存在你的帳號。\n如何設定可以先參考這篇文章或是官方文件\n衝突！？ 假如你編輯了檔案，但是在你還沒上傳時別人已經改了內容（新增/編輯/刪除檔案）這個時候你就沒辦法上傳（push）了。我們會看到這串訊息\n1! [rejected] main -\u0026gt; main (fetch first) 2error: failed to push some refs to \u0026#39;github.com:EM-Tec/EM-Tec.github.io.git\u0026#39; 3hint: Updates were rejected because the remote contains work that you do 4hint: not have locally. This is usually caused by another repository pushing 5hint: to the same ref. You may want to first integrate the remote changes 6hint: (e.g., \u0026#39;git pull ...\u0026#39;) before pushing again. 7hint: See the \u0026#39;Note about fast-forwards\u0026#39; in \u0026#39;git push --help\u0026#39; for details. 我們必須要先pull最新的版本下來。不過在我們使用git pull指令前我們需要告訴git要怎麼處理檔案\n合併：git config pull.rebase false 不管那個版本：git config pull.rebase true 放棄剛才編輯的：git config pull.ff only 我們可以用git config --global而不是git config來告訴git不管哪個專案都要這樣處理。\n","link":"https://EM-Tec.github.io/post/github-and-git/","section":"post","tags":["終端機","Git","Github"],"title":"【Github Git】超白話簡單入門"},{"body":"","link":"https://EM-Tec.github.io/tags/git/","section":"tags","tags":null,"title":"Git"},{"body":"SSH是一種簡單的登入方式。以我來說在使用git來上傳檔案到Github時，因為我在手機生成並設定好了ssh，不用每次上傳都需要輸入帳號和全是亂碼的驗證密碼。 不過也可以設定在使用SSH登入的時候需要輸入一組passpharase，來保障你的安全。不過如果你想要更改或取消密碼怎麼辦呢\ncd到ssh資料夾 這裡以Android的Termux為例。ssh資料夾在~/.ssh（其他作業系統也大同小異）\n1cd .ssh 更改密碼 如果你在建立的時候沒有自訂名稱（直接按enter，預設為id_rsa），可直接打下面這串指令\n1change-ssh-passpharase 如果你要指定ssh的話後面要加一小串\n1ssh-keygen -p -f \u0026lt;檔名\u0026gt; 如果你之前設定過密碼會看到Enter old passphrase:，需要先輸入一次之前的密碼。不然直接輸入新密碼兩次就好了。如果不想要設定就直接按enter就好了。\n如果看到以下這一串\n1Failed to load key id_rsa: incorrect passphrase supplied to decrypt private key 代表你剛才輸錯密碼，請重新輸入一次。\n","link":"https://EM-Tec.github.io/post/change-ssh-passphrase/","section":"post","tags":["終端機","Termux"],"title":"【終端機】輕鬆更改SSH的驗證碼passpharase"},{"body":"","link":"https://EM-Tec.github.io/tags/termux/","section":"tags","tags":null,"title":"Termux"},{"body":"使用多個螢幕可以使工作效率大幅提升。不過如果使用Win+D來隱藏視窗、會一次隱藏所有螢幕的所有的視窗。 不過透過ShowDesktopPerMonitor可以模擬Win+D的隱藏視窗。除了可以分開螢幕控制以外，它的隱藏視窗是連工作列都看不到...（要怎麼使用就看你了！）\n安裝 這個專案是開源在Github上的，基本上可以安心使用。雖然已經很久沒有更新了，但目前沒有任何問題。\nShowDesktopPerMonitor 開發者:CryptKat 類型:免費開源軟體 網址:Github 下載連結 設定 請先到上面下載連結下載ShowDesktopPerMonitor_1.0.zip並解壓縮。解壓縮後雙擊直接打開就可以了。\n如果你是使用Windows 10可以將“Xbox Game Monitoring”關閉（原Win+G）,，預防你的G會沒辦法按。 請到註冊表的HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\xbgm\\Start並將數值改成4\n多個桌面 如果你會使用多個桌面（Ctrl+Win+D)的話你會發現當你按下Win+D要顯示的時候，不只這個桌面，所有這個螢幕的桌面視窗都會跳出來。\n可以說這是一個Bug，也可以說是一個特別的功能\n關閉軟體 如果要讓它停止運行，請點擊螢幕右下角往上的箭頭，對ShowDesktopPerMonitor圖示點擊右鍵，並結束它\n","link":"https://EM-Tec.github.io/post/showdesktoppermonitor/","section":"post","tags":["Windows"],"title":"【ShowDesktopPerMonitor】進化Win+D！多螢幕不互相干擾/所有桌面視窗一鍵顯示"},{"body":"每次寫完文章還要打指令生成網站，麻煩死了！讓Github Action幫你自動部署，寫完文章直角上傳就好了！\n在開始之前 請先建立好部落格，並且將整個檔案的資料夾上傳到Github的用戶名/用戶名.github.iorepository 記住不是裡面的public子資料夾，是整個資料夾喔\n要解決的問題 平常我們寫完一篇文章，要先打指令生成靜態網站（生成在public資料夾裡面），再把它上傳到Github上面。 除了過程十分的麻煩以外，因為網站資料是儲存在你自己的電腦裡面，所以假設你更變工作環境（比如說在手機上）你就沒辦法進行編輯。\n既然每次生成網站的指令都是一樣的，不如我們來建立一個Github Action來讓它自動部署吧\n設定 Github 設定 Access Token 首先我們要先建立一個Repository 的 Access Token。這是一把鑰匙，我們要把鑰匙給Github Action的程式它才可以部署我們的網站\n請先到Settings/Developer Settings下的Personal access tokens生成一組Access Token。建議scope直接選repo的所有權限。\n添加 Secrets 因為我們的Github Action程式碼是公開的，但是我們不想要讓其他人看到剛才的那組Access Token，所以我們要建立一組Secret。當我們在程式說要「那個東西」的時候，他就會知道要來這裡找這組密碼。\n請到Settings/Secrets新增一組 Secrets，我這邊叫做 ACCESS_TOKEN，之後在腳本上會用到。\n新增Workflow 依序點擊Action，New，set up a workflow yourself，並貼上以下程式。名稱可以自己取，貼上完之後點擊Start Commit。\n程式意思是當main分支有push操作時（就是你上傳或更變檔案），會生成靜態網頁。剛才不是說會生成在public這個資料夾，我們把它推送到 gh-pages 這個分支（當然你也可以自己取名）\n1name: create 2 3on: 4 push: 5 branches: 6 - main # 當main分支有push操作時 7 8jobs: 9 deploy: 10 runs-on: ubuntu-latest 11 steps: 12 - uses: actions/checkout@v2 13 with: 14 submodules: true # 找尋Hugo主題(true OR recursive) 15 fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod 16 17 - name: Setup Hugo 18 uses: peaceiris/actions-hugo@v2 19 with: 20 hugo-version: \u0026#39;0.89.4\u0026#39; # hugo 版本 21 extended: true 22 23 - name: Build 24 run: hugo --minify 25 26 - name: Deploy 27 uses: peaceiris/actions-gh-pages@v3 28 with: 29 github_token: ${{ secrets.HUGO_DEPLOY_TOKEN }} 30 PUBLISH_BRANCH: gh-pages # 推送到 gh-pages 分支 31 PUBLISH_DIR: ./public # hugo 生成的目錄 32 commit_message: ${{github.event.head_commit.message }} 新增完成後它會自己跑一次。不過我們還需要做一個設定。生成的網站是放在gh-pages這個分支，我們要輸入網址時，去讀取這個分支而不是main。所以請到Settings/Pages/Branch更改\n這樣就大公告成囉！記得每次更新完部落格Github Action都需要大約30秒的執行時間才會完成部署。如果你想要查看它的進度狀態可以點擊最新紀錄的橘點看目前的即時狀態。如果變成綠色就是部署成功，如果是鴻森代表有問題（通常是文章中的語法有語法錯誤）。\n","link":"https://EM-Tec.github.io/post/hugo-githubaction/","section":"post","tags":["Github","Hugo"],"title":"【Github Action】自動部署你的Hugo網站"},{"body":"","link":"https://EM-Tec.github.io/tags/hugo/","section":"tags","tags":null,"title":"Hugo"},{"body":"直接把整個試算表連結發給別人除了要載入很久且會出現一堆不需要的按鍵，整個畫面很醜很沒有質感。而且如果你把其他隱私的資料也放在裡面，都會被一次看光光。那我們就來幫試算表包個糖衣吧\n當你要分享表格給其他人看時，使用Google試算表把連結貼給別人是一個簡單快速的方法。除了可以套各種公式，修改資料會馬上同步，也可以開設權限讓其他人一起編輯。\n罷特如果只是要給別人看資料比如說客戶名單、訂單資訊、直接把整個試算表連結發給別人除了要載入很久且會出現一堆不需要的按鍵，整個畫面很醜很沒有質感。而且如果你把其他隱私的資料也放在裡面，都會被一次看光光。 怎麼辦？幫它抹上一層糖衣！ 我們來做一個超簡單的小網頁讓它自己去表格抓你要的資料來顯示。我們會寫一些程式(HTML,CSS,Js）不過如果你不會也沒關系w只要跟著步驟複製貼上就可以了。今天我要來幫我的畫家朋友薩波來做一個網站讓他的委託人可以查看他畫圖的進度，還要讓電腦排序讓已經完成的委託排在下面。\n薩波委託進度 開發者:毛哥EM(我) 類型:網站 網址:毛哥EM的基地\n架一個網站！ 你可以使用任何一個可以給你存放網站代碼的地方，比如說Github。\n我從Codepen上找到了一個很好看的表格模板來做修改。它在螢幕尺寸太窄的時候會用不同的版面來顯示，保持使用者體驗。你也可以找其他的模板或者是自己建立一個。\nSee the Pen Responsive Tables using LI by Faiz Ahmed (@faaezahmd) on CodePen. 我在網站上增加了一點文字、顏色(CSS)、超連結(\u0026lt;a\u0026gt;)、還有圖片、縮圖。以及簡單的出場動畫(animate.css)來炫技。\n1\u0026lt;!DOCTYPE html\u0026gt; 2 \u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;!--下面這行是標題--\u0026gt; 5 \u0026lt;title\u0026gt;薩波進度查詢表\u0026lt;/title\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 7 \u0026lt;!--下面這行是縮圖，可以換網址--\u0026gt; 8 \u0026lt;link href=\u0026#34;https://Edit-Mr.github.io/code/sabooo/thumbnail.png\u0026#34; rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/x-icon\u0026#34;\u0026gt; 9 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://Edit-Mr.github.io/css/Animate.css\u0026#34; media=\u0026#34;screen\u0026#34;\u0026gt; 10 \u0026lt;!--下面這行是主題顏色，可以自由更換（支援HEX）--\u0026gt; 11 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;orange\u0026#34; /\u0026gt; 12 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 13 \u0026lt;!--下面這些是樣式，可以自由更換顏色之類的--\u0026gt; 14 \u0026lt;style\u0026gt; 15 @import url(https://fonts.googleapis.com/earlyaccess/cwtexyen.css); 16 17 body { 18 font-family: \u0026#34;Arial\u0026#34;,\u0026#34;cwTeXYen\u0026#34;,\u0026#34;微軟正黑體\u0026#34;; 19 background-color: #fee5bd; 20 } 21 22 .container { 23 max-width: 1000px; 24 margin-left: auto; 25 margin-right: auto; 26 padding-left: 10px; 27 padding-right: 10px; 28 font-size: 25px; 29 } 30 31 h2 { 32 font-size: 23px; 33 margin: 0; 34 text-align: center; 35 font-weight: 150; 36 color: #e69137; 37 animation: fadeIn; 38 animation-duration: 1.5s; 39 animate-delay: 0.9s; 40 } 41 42 h1 { 43 font-size: 35px; 44 margin: 20px 0 0 0; 45 text-align: center; 46 size: 30px; 47 color: #351c75; 48 animation: zoomIn; 49 animation-duration: 1s; 50 } 51 52 li { 53 border-radius: 3px; 54 padding: 25px 30px; 55 display: flex; 56 justify-content: space-between; 57 margin-bottom: 25px; 58 } 59 60 .responsive-table .table-header, 61 .table-note { 62 background-color: #f9a756; 63 font-size: 30px; 64 margin-top: 0px; 65 padding: 25px 30px 25px 30px; 66 animation: slideInUp; 67 animation-duration: 1.5s; 68 } 69 70 .table-note { 71 font-size: 20px; 72 display: none; 73 } 74 75 .responsive-table { 76 margin: 0; 77 padding: 0; 78 } 79 80 .responsive-table .table-row { 81 background-color: #fff; 82 box-shadow: 0px 0px 9px 0px rgba(0, 0, 0, 0.1); 83 animation: backInLeft; 84 animation-duration: 1.5s; 85 } 86 .table-row{} 87 .responsive-table .col-1 { 88 flex-basis: 25%; 89 } 90 91 .responsive-table .col-2 { 92 flex-basis: 30%; 93 } 94 95 .responsive-table .col-3 { 96 flex-basis: 30%; 97 } 98 99 .responsive-table .col-4 { 100 flex-basis: 15%; 101 } 102 103 @media all and (max-width: 767px) { 104 .responsive-table .table-header { 105 display: none; 106 } 107 108 .table-note { 109 display: block; 110 } 111 112 .responsive-table li { 113 display: block; 114 } 115 116 .responsive-table .col { 117 flex-basis: 100%; 118 } 119 120 .responsive-table .col { 121 display: flex; 122 padding: 10px 0; 123 } 124 125 .responsive-table .col:before { 126 color: #6c7a89; 127 padding-right: 10px; 128 content: attr(data-label); 129 flex-basis: 50%; 130 text-align: right; 131 } 132 } 133 134 .header { 135 width: 150px; 136 display: block; 137 margin: auto; 138 animation: slideInUp; 139 animation-duration: 1.5s; 140 } 141 142 .finished { 143 color: green; 144 } 145 146 p, 147 a { 148 text-align: center; 149 font-size: 15px; 150 color: #6c7a89; 151 text-decoration: none; 152 animation: fadeIn; 153 animation-duration: 1.5s; 154 } 155 \u0026lt;/style\u0026gt; 156 \u0026lt;/head\u0026gt; 157 158 \u0026lt;body\u0026gt; 159 \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; 160 \u0026lt;h1\u0026gt;薩波2022委託與贈圖表\u0026lt;/h1\u0026gt; 161 \u0026lt;h2\u0026gt;這些不代表畫的順序 會跳著畫\u0026lt;/h2\u0026gt; 162 \u0026lt;img src=\u0026#34;header.png\u0026#34; class=\u0026#34;header\u0026#34; /\u0026gt; 163 \u0026lt;li class=\u0026#34;table-note\u0026#34;\u0026gt; 164 如果要一次看完整表格請切換到電腦版網頁喔 165 \u0026lt;/li\u0026gt; 166 \u0026lt;ul class=\u0026#34;responsive-table\u0026#34;\u0026gt; 167 \u0026lt;li class=\u0026#34;table-header\u0026#34;\u0026gt; 168 \u0026lt;div class=\u0026#34;col col-1\u0026#34;\u0026gt;委託人姓名\u0026lt;/div\u0026gt; 169 \u0026lt;div class=\u0026#34;col col-2\u0026#34;\u0026gt;委託項目\u0026lt;/div\u0026gt; 170 \u0026lt;div class=\u0026#34;col col-3\u0026#34;\u0026gt;付款狀態\u0026lt;/div\u0026gt; 171 \u0026lt;div class=\u0026#34;col col-4\u0026#34;\u0026gt;進度狀態\u0026lt;/div\u0026gt; 172 \u0026lt;/li\u0026gt; 173 資料載入中 174 \u0026lt;/ul\u0026gt; 175 \u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;\u0026#34;\u0026gt;\u0026lt;/a\u0026gt; · Facebook\u0026lt;a href=\u0026#34;https://instagram.com/\u0026#34;\u0026gt;Instagram\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;Made by \u0026lt;a href=\u0026#34;https://github.com/Edit-Mr\u0026#34;\u0026gt;Edit Mr.\u0026lt;/a\u0026gt; with❤\u0026lt;/p\u0026gt; 176 \u0026lt;/div\u0026gt; 177 \u0026lt;/body\u0026gt; 後端 GAS! GAS! 好了前端做好了接下來我們來建另一個網站讓剛才那個網站來這裡讀取資料。為了方便起見我們在給資料的時候直接給一個做好的表格讓網站貼上。\n我們先看一下試算表。在這裡我們可以看到每一行資料有5項，其中我希望第5項的資料可以放在付款狀態後面。現在請你先請你複製這個試算表的ID，也就是網址https://docs.google.com/spreadsheets/d/和/之間那一串(如1fjX-prGu0hfb65LCQkrktWa-JavvjSz7tWMmYWAb7RA)。等一下會用到。\n我們會使用GAS(Google App Script)來建立網頁應用程式來讀取表格資料。\nGoogle App Script 開發者:Google 類型:免費網站（可付費升級） 網址:script.google.com\n請建立一個新的專案並貼上以下內容。記得貼上Google Sheet那段ID，並修改自己要的範圍，程式碼裡有詳細的註解。原理是讀取一行行的資料並轉成HTML表格，其中如果狀態是完成的加上一個class讓顏色變綠色。在排序方面我是把完成的和未完成的分成兩個陣列（清單）儲存，在把完成的接在未完成的後面合併。\n小叮嚀 為避免程式碼站太多空間，可能會部分隱藏。請記得展開或直接複製。 1function doGet(){ 2 var spreadsheet = SpreadsheetApp.openById(\u0026#39;1U-Q2XXXXXXXRsrh-QYCXXXXXXXXXQmGQ\u0026#39;); // Sheet id 3 var sheet = spreadsheet.getSheets()[0]; 4 var rowLength = sheet.getLastRow(); 5 var columnLength = sheet.getLastColumn(); 6 var data = sheet.getRange(3,1,rowLength,columnLength).getValues(); 7 var dataExport = [\u0026#39;\u0026lt;li class=\u0026#34;table-header\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34;\u0026gt;委託人姓名\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34;++\u0026gt;委託項目\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34;\u0026gt;付款狀態\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4\u0026#34;\u0026gt;進度狀態\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;]; 8 var stat, ed=[]; 9 // 一個個加入json 10 for(i in data){ 11 if(data[i][0] != \u0026#34;\u0026#34;){ 12 if (data[i][3]==\u0026#34;完成\u0026#34;){ 13 ed.push(\u0026#39;\u0026lt;li class=\u0026#34;table-row\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34; data-label=\u0026#34;委託人姓名\u0026#34;\u0026gt;\u0026#39;+data[i][0] 14+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34; data-label=\u0026#34;委託項目\u0026#34;\u0026gt;\u0026#39;+data[i][1] 15+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34; data-label=\u0026#34;付款狀態\u0026#34;\u0026gt;\u0026#39;+data[i][2]+\u0026#34; \u0026#34;+data[i][4] 16+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4 finished\u0026#34; data-label=\u0026#34;進度狀態\u0026#34;\u0026gt;\u0026#39;+data[i][3]+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;) 17 }else{ 18 dataExport.push(\u0026#39;\u0026lt;li class=\u0026#34;table-row\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34; data-label=\u0026#34;委託人姓名\u0026#34;\u0026gt;\u0026#39;+data[i][0] 19+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34; data-label=\u0026#34;委託項目\u0026#34;\u0026gt;\u0026#39;+data[i][1] 20+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34; data-label=\u0026#34;付款狀態\u0026#34;\u0026gt;\u0026#39;+data[i][2]+\u0026#34; \u0026#34;+data[i][4] 21+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4\u0026#34; data-label=\u0026#34;進度狀態\u0026#34;\u0026gt;\u0026#39;+data[i][3]+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;) 22 } 23 24 }; 25 }; 26 dataExport=dataExport.concat(ed); 27 // 回傳JSON 28 console.log(dataExport.join(\u0026#34;\u0026#34;)); 29 return ContentService.createTextOutput(dataExport.join(\u0026#34;\u0026#34;)); 30 } 為什麼要分兩個陣列？不要讓未完成的直接插入到最前面？ 我們可以用push()將資料插入到最後面，也可以用unshift()插入到最前面。但是如果用這個方式未完成的清單順序會整個便相反 如順序1234567排序後不會變124589367，而是985421367。\n你可以根據自己的需求決定排法\n做好了之後點擊執行▶️，你會需要授予你的程式讀取資料的權限。因為你寫的程式沒有被Google驗證過所以會顯示不安全，但我相信你不會把你的帳號搞爆，對吧\n接下來我們要部署它，讓它成為一個網站來讓我們抓。這裡選擇網頁應用程式，所有人都以你的身份讀取。按下部署就可以囉\n這裡我們把部署的網址複製起來。如果要做修改除了按儲存之外要記得重新部署成新版本才會更新喔\n接下來我們回到Github的網頁讓他來讀這個表格\n等等，不是做好表格網頁了，直接讓它顯示就好了啊幹嘛那麼麻煩？ 可以當然是可以，姑且不論網址有多長多醜，如果使用Google App Script建設的網站會出現橫幅很醜的一個警告，而且他超長讓你的版面整個跑掉。為了更好的使用者體驗既然都做了就做到底吧！\n前端 讀取資料 最後一步了！我們回到程式碼的head裡面，加入jQuery這個套件讓我們可以少寫幾行\n然後我們修改一下body。程式讀到表格之後會用表格取代class裡面的所有內容。我已在這裡可以寫一些表格讀取到之前會顯示的訊息比如說「資料讀取中...」之類的。\n最後在我們在\u0026lt;/body\u0026gt;前面貼上以下的JavaScript來讀取並顯示表格。記得把網址換成剛剛表格資料的網址喔~\n1\u0026lt;script\u0026gt; 2 //請把下面按這串改成剛才的網址 3 let requestURL = \u0026#34;https://script.google.com/macros/s/AKfycbxq942U9fZK5tR6Vi1OZkr5Hq0Bv_qPSm1rOOYFFZUS_vyrTu60QuW7xmU-d09UpI1XLQ/exec\u0026#34;; 4 let request = new XMLHttpRequest(); 5 request.open(\u0026#34;GET\u0026#34;, requestURL); 6 request.responseType = \u0026#34;text\u0026#34;; 7 request.send(); 8 request.onload = function () { 9 console.log(\u0026#34;載入成功\u0026#34;); 10 $(\u0026#34;p\u0026#34;).addClass(\u0026#39;animate_animated\u0026#39;,\u0026#39;animate_fadeOut\u0026#39;) //動畫 11 $(\u0026#34;.responsive-table\u0026#34;).html(request.response); //用表格取代.responsive-table 12 }; 13 \u0026lt;/script\u0026gt; 最終程式碼 最終的程式碼如下，有沒有超有成就感？\n顯示網站 1\u0026lt;!DOCTYPE html\u0026gt; 2 \u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;!--下面這行是標題--\u0026gt; 5 \u0026lt;title\u0026gt;薩波進度查詢表\u0026lt;/title\u0026gt; 6 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 7 \u0026lt;!--下面這行是縮圖，可以換網址--\u0026gt; 8 \u0026lt;link href=\u0026#34;https://Edit-Mr.github.io/code/sabooo/thumbnail.png\u0026#34; rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/x-icon\u0026#34;\u0026gt; 9 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;https://Edit-Mr.github.io/css/Animate.css\u0026#34; media=\u0026#34;screen\u0026#34;\u0026gt; 10 \u0026lt;!--下面這行是主題顏色，可以自由更換（支援HEX）--\u0026gt; 11 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;orange\u0026#34; /\u0026gt; 12 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 13 \u0026lt;!--下面這些是樣式，可以自由更換顏色之類的--\u0026gt; 14 \u0026lt;style\u0026gt; 15 @import url(https://fonts.googleapis.com/earlyaccess/cwtexyen.css); 16 17 body { 18 font-family: \u0026#34;Arial\u0026#34;,\u0026#34;cwTeXYen\u0026#34;,\u0026#34;微軟正黑體\u0026#34;; 19 background-color: #fee5bd; 20 } 21 22 .container { 23 max-width: 1000px; 24 margin-left: auto; 25 margin-right: auto; 26 padding-left: 10px; 27 padding-right: 10px; 28 font-size: 25px; 29 } 30 31 h2 { 32 font-size: 23px; 33 margin: 0; 34 text-align: center; 35 font-weight: 150; 36 color: #e69137; 37 animation: fadeIn; 38 animation-duration: 1.5s; 39 animate-delay: 0.9s; 40 } 41 42 h1 { 43 font-size: 35px; 44 margin: 20px 0 0 0; 45 text-align: center; 46 size: 30px; 47 color: #351c75; 48 animation: zoomIn; 49 animation-duration: 1s; 50 } 51 52 li { 53 border-radius: 3px; 54 padding: 25px 30px; 55 display: flex; 56 justify-content: space-between; 57 margin-bottom: 25px; 58 } 59 60 .responsive-table .table-header, 61 .table-note { 62 background-color: #f9a756; 63 font-size: 30px; 64 margin-top: 0px; 65 padding: 25px 30px 25px 30px; 66 animation: slideInUp; 67 animation-duration: 1.5s; 68 } 69 70 .table-note { 71 font-size: 20px; 72 display: none; 73 } 74 75 .responsive-table { 76 margin: 0; 77 padding: 0; 78 } 79 80 .responsive-table .table-row { 81 background-color: #fff; 82 box-shadow: 0px 0px 9px 0px rgba(0, 0, 0, 0.1); 83 animation: backInLeft; 84 animation-duration: 1.5s; 85 } 86 .table-row{} 87 .responsive-table .col-1 { 88 flex-basis: 25%; 89 } 90 91 .responsive-table .col-2 { 92 flex-basis: 30%; 93 } 94 95 .responsive-table .col-3 { 96 flex-basis: 30%; 97 } 98 99 .responsive-table .col-4 { 100 flex-basis: 15%; 101 } 102 103 @media all and (max-width: 767px) { 104 .responsive-table .table-header { 105 display: none; 106 } 107 108 .table-note { 109 display: block; 110 } 111 112 .responsive-table li { 113 display: block; 114 } 115 116 .responsive-table .col { 117 flex-basis: 100%; 118 } 119 120 .responsive-table .col { 121 display: flex; 122 padding: 10px 0; 123 } 124 125 .responsive-table .col:before { 126 color: #6c7a89; 127 padding-right: 10px; 128 content: attr(data-label); 129 flex-basis: 50%; 130 text-align: right; 131 } 132 } 133 134 .header { 135 width: 150px; 136 display: block; 137 margin: auto; 138 animation: slideInUp; 139 animation-duration: 1.5s; 140 } 141 142 .finished { 143 color: green; 144 } 145 146 p, 147 a { 148 text-align: center; 149 font-size: 15px; 150 color: #6c7a89; 151 text-decoration: none; 152 animation: fadeIn; 153 animation-duration: 1.5s; 154 } 155 \u0026lt;/style\u0026gt; 156 \u0026lt;/head\u0026gt; 157 158 \u0026lt;body\u0026gt; 159 \u0026lt;div class=\u0026#34;container\u0026#34;\u0026gt; 160 \u0026lt;h1\u0026gt;薩波2022委託與贈圖表\u0026lt;/h1\u0026gt; 161 \u0026lt;h2\u0026gt;這些不代表畫的順序 會跳著畫\u0026lt;/h2\u0026gt; 162 \u0026lt;img src=\u0026#34;header.png\u0026#34; class=\u0026#34;header\u0026#34; /\u0026gt; 163 \u0026lt;li class=\u0026#34;table-note\u0026#34;\u0026gt; 164 如果要一次看完整表格請切換到電腦版網頁喔 165 \u0026lt;/li\u0026gt; 166 \u0026lt;ul class=\u0026#34;responsive-table\u0026#34;\u0026gt; 167 \u0026lt;li class=\u0026#34;table-header\u0026#34;\u0026gt; 168 \u0026lt;div class=\u0026#34;col col-1\u0026#34;\u0026gt;委託人姓名\u0026lt;/div\u0026gt; 169 \u0026lt;div class=\u0026#34;col col-2\u0026#34;\u0026gt;委託項目\u0026lt;/div\u0026gt; 170 \u0026lt;div class=\u0026#34;col col-3\u0026#34;\u0026gt;付款狀態\u0026lt;/div\u0026gt; 171 \u0026lt;div class=\u0026#34;col col-4\u0026#34;\u0026gt;進度狀態\u0026lt;/div\u0026gt; 172 \u0026lt;/li\u0026gt; 173 資料載入中 174 \u0026lt;/ul\u0026gt; 175 \u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://www.facebook.com/Sabo9335\u0026#34;\u0026gt;薩波FB\u0026lt;/a\u0026gt; · \u0026lt;a 176 href=\u0026#34;https://instagram.com/sabooo_9335?igshid=YmMyMTA2M2Y=\u0026#34;\u0026gt;薩波IG\u0026lt;/a\u0026gt; · \u0026lt;a 177 href=\u0026#34;https://discord.gg/ve9ERWVEPR\u0026#34;\u0026gt;橘子牌太空船\u0026lt;/a\u0026gt;\u0026lt;br /\u0026gt;Made by \u0026lt;a href=\u0026#34;https://github.com/Edit-Mr\u0026#34;\u0026gt;EDM\u0026lt;/a\u0026gt; with❤\u0026lt;/p\u0026gt; 178 \u0026lt;/div\u0026gt; 179 \u0026lt;script\u0026gt; 180 //請把下面按這串改成剛才的網址 181 let requestURL = \u0026#34;https://script.google.com/macros/s/xxxxxxxx/exec\u0026#34;; 182 let request = new XMLHttpRequest(); 183 request.open(\u0026#34;GET\u0026#34;, requestURL); 184 request.responseType = \u0026#34;text\u0026#34;; 185 request.send(); 186 request.onload = function () { 187 console.log(\u0026#34;載入成功\u0026#34;); 188 $(\u0026#34;p\u0026#34;).addClass(\u0026#39;animate_animated\u0026#39;,\u0026#39;animate_fadeOut\u0026#39;) //動畫 189 $(\u0026#34;.responsive-table\u0026#34;).html(request.response); //用表格取代.responsive-table 190 }; 191 \u0026lt;/script\u0026gt; 192 \u0026lt;/body\u0026gt; 表格資料網站 1function doGet(){ 2 var spreadsheet = SpreadsheetApp.openById(\u0026#39;1U-Q2t9RI6Uce787RASQIRsrh-QYCvhCgn_UyOnrQmGQ\u0026#39;); // Sheet id 3 var sheet = spreadsheet.getSheets()[0]; 4 var rowLength = sheet.getLastRow(); 5 var columnLength = sheet.getLastColumn(); 6 var data = sheet.getRange(3,1,rowLength,columnLength).getValues(); 7 var dataExport = [\u0026#39;\u0026lt;li class=\u0026#34;table-header\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34;\u0026gt;委託人姓名\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34;++\u0026gt;委託項目\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34;\u0026gt;付款狀態\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4\u0026#34;\u0026gt;進度狀態\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;]; 8 var stat, ed=[]; 9 // 一個個加入json 10 for(i in data){ 11 if(data[i][0] != \u0026#34;\u0026#34;){ 12 if (data[i][3]==\u0026#34;完成\u0026#34;){ 13 ed.push(\u0026#39;\u0026lt;li class=\u0026#34;table-row\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34; data-label=\u0026#34;委託人姓名\u0026#34;\u0026gt;\u0026#39;+data[i][0] 14+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34; data-label=\u0026#34;委託項目\u0026#34;\u0026gt;\u0026#39;+data[i][1] 15+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34; data-label=\u0026#34;付款狀態\u0026#34;\u0026gt;\u0026#39;+data[i][2]+\u0026#34; \u0026#34;+data[i][4] 16+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4 finished\u0026#34; data-label=\u0026#34;進度狀態\u0026#34;\u0026gt;\u0026#39;+data[i][3]+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;) 17 }else{ 18 dataExport.push(\u0026#39;\u0026lt;li class=\u0026#34;table-row\u0026#34;\u0026gt;\u0026lt;div class=\u0026#34;col col-1\u0026#34; data-label=\u0026#34;委託人姓名\u0026#34;\u0026gt;\u0026#39;+data[i][0] 19+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-2\u0026#34; data-label=\u0026#34;委託項目\u0026#34;\u0026gt;\u0026#39;+data[i][1] 20+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-3\u0026#34; data-label=\u0026#34;付款狀態\u0026#34;\u0026gt;\u0026#39;+data[i][2]+\u0026#34; \u0026#34;+data[i][4] 21+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;div class=\u0026#34;col col-4\u0026#34; data-label=\u0026#34;進度狀態\u0026#34;\u0026gt;\u0026#39;+data[i][3]+\u0026#39;\u0026lt;/div\u0026gt;\u0026lt;/li\u0026gt;\u0026#39;) 22 } 23 24 }; 25 }; 26 dataExport=dataExport.concat(ed); 27 // 回傳JSON 28 console.log(dataExport.join(\u0026#34;\u0026#34;)); 29 return ContentService.createTextOutput(dataExport.join(\u0026#34;\u0026#34;)); 30 } ","link":"https://EM-Tec.github.io/post/create-site-for-sheet/","section":"post","tags":["自製","HTML","CSS","JavaScript","Github","GAS"],"title":"【GAS】複製貼上讓試算表變身成網頁表格 秀爆你的客戶朋友！"},{"body":"這是我自己學習的筆記，紀錄一些準備考試的重點，不適合新手閱讀\n好久不見! 因為要準備會考已經非常久沒有發文了，不過這一篇是我自己寫的一些重點整理筆記，且會持續更新。程式語言教學只會寫C與其他語言不同的語法，適合已經對程式有概念的人閱讀。如果你對C語言有興趣可以參考這個系列文章，我覺得寫得不錯w\nC規則 只寫和javascript不同的地方，或我自己覺得重要或會忘記的部分\n函式Cool 通常會加入stdio.h和stdlib.h\nstdio.h puts(char) - 將字串顯示到視窗上，自動換行 gets(char) - 透過鍵盤輸入字串 stdlib.h abs(int x) - 回傳整數 x 的絕對值 atoi(char) - 回傳字串轉整數的結果 strtof(char) - 回傳字串轉 float 的結果 math.h string.h strlen(s) - 回傳一個整數，是字串 s 的長度，長度的計算不包含字串結尾的 '\\0' 輸出 1printf(\u0026#34;字串\u0026#34;); 2printf(\u0026#34;字串或格式代碼\u0026#34;,var1,var2,var3); 3puts(\u0026#34;ABC\u0026#34;);//自動換行，但沒有格式化字串的功能。只能顯示字串 \\n:換行 \\t:自動對齊 \\a: 鈴聲 \\b: 游標(下個文字開始顯示的位置)倒退一格 \\r: 游標倒退到這行的開頭 預留位置(Format placehold) 整數用 %d，浮點數用 %f，字元用 %c，字串用 %s\n%hd, %d, %lld 都是將資料轉換成整數\n能處理的位數 %hd \u0026lt; %d \u0026lt; %lld\n格式化字串 最小長度 在 % 的後面加上數字，可以設定變數顯示的最小長度，如果長度不足會自動補空格，以達到對其的目的如printf(\u0026quot;%4d\\n\u0026quot;, a)；在最小位數的前面加上0，會變成用0補齊長度如printf(\u0026quot;%07d\\n\u0026quot;, b);\n變數 型態 加上 unsigned，會變成只能表示正數和0，但範圍 大小 不變。如unsigned char的範圍是0~2^8\n型態 說明 範圍 long int 長整數 ±21億 int 整數 ±21億 short int 短整數 ±32768 char 字元 0~255 float 浮點數 1.2~3.4e±38 double 倍精度浮點數 1.2~1.8e±308 你有沒有發現可悲的C語言中，並沒有 String 這個型別。需要使用字元的陣列 (character Array) 作為字串，而空字元('\\0')代表字串結束 所以 \u0026quot;123\u0026quot;，其實是一個長度為四的一維字元陣列，它的元依序是 '1', '2', '3', '\\0'\n宣告 以下4種方式都可以\n1int x 2int x=1 3//一次多個 4int x=1, y=10, z=100; 5int x=y=z=100; 雖然沒有硬性規定，但C語言中可以用 f, F 標示數值是浮點數，整數時可以用 . 標示\n指派/指定 運算子(Assignment Operator) 前面用過的 = 就是其中一種，執行時會先將等號右邊的值算出來，再指派給左邊的變數 a=a+1等效a+=1等效a++ a=a-1等效a-=1等效a-- a=a*2等效a*=2 a=a/2等效a/=2 a=a%2等效a%=2\n輸入 1//輸入整數、字元、浮點到變數x、y、z 2scanf(\u0026#34;%d%c%d\u0026#34;, \u0026amp;x, \u0026amp;y, \u0026amp;z); 邏輯判斷 if、switch、while、for 和js大同小異\n1//if 2if(ture){ 3\tprintf(\u0026#34;yes\u0026#34;); 4} 5else{ 6\tprintf(\u0026#34;no\u0026#34;); 7} 8//大括號內只有一行可省略大括號 9if(x\u0026gt;100) 10\tprintf(\u0026#34;x is greater than 100.\u0026#34;); 11 12//switch 13switch(x){ 14\tcase 0: case 7: 15\tprintf(\u0026#34;A\\n\u0026#34;); 16\t//x=0或是7都會印出A 17\tbreak; 18\tcase 2: case 5: 19\tprintf(\u0026#34;B\\n\u0026#34;); 20\tbreak; 21\tcase 4: case 3: 22\tprintf(\u0026#34;C\\n\u0026#34;); 23\tbreak; 24\tcase 6: case 1: 25\tprintf(\u0026#34;D\\n\u0026#34;); 26\tbreak; 27} 28 29//while 30while(ture){ 31\tprintf(\u0026#34;forever printing\u0026#34;); 32} 33 34//for 大括號內只有一行一樣可省略大括號 35int i; 36for(i=0; i!=5; i++) 37\tprintf(\u0026#34;%d\u0026#34;, i);//輸出12345 38\t程式碼縮排 和js一樣沒有規定，不縮也可以\n通常以一個 Tab 鍵(在鍵盤左邊) 為單位，每多一個大括號，就多空一個單位。如果大括號被省略還是要縮排\nbreak \u0026amp; continue break: 強制結束迴圈 continue: 跳過這次的區塊，但迴圈不會結束 陣列 以下是一些合法使用的例子\n1int arrA[5]; 2int arr[]={12,22,3}; 3arr[2]=4; 4arr[x]=y; 5printf(\u0026#34;%d\\n\u0026#34;, arr[0]); 字元陣列 (character Array) AKA字串。可悲C\n字元常數是用單引號括起來的一個字元，如'a'、'b'、'='、'+'、'?' 字串常數是由一對雙引號括起的字元序列，如\u0026quot;EM\u0026quot; ， “Oh yeah!” ， \u0026quot;$12.5\u0026quot; 字元常數'a'和字串常數\u0026quot;a\u0026quot;雖然都只有一個字元，但在記憶體中的情況是不同的。\n輸入 記憶體 'a' a \u0026quot;a\u0026quot; a \\0 宣告 1//可以用和陣列一樣的方法初始化字串的內容 2char s[100]={\u0026#39;H\u0026#39;, \u0026#39;e\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;l\u0026#39;, \u0026#39;o\u0026#39;, \u0026#39;!\u0026#39;, \u0026#39;\\0\u0026#39;}; 3//或是用雙引號代表字串，但一樣只能在宣告時用這個方法指派 4char s[100]=\u0026#34;Hello!\u0026#34;; 5//可把字串作為printf()的引數來印出字串 6char s[100]=\u0026#34;Hello!\u0026#34;; 7printf(s); 輸出 1char s[100]=\u0026#34;PJ\u0026#34;; 2printf(\u0026#34;My name is %s.\u0026#34;, s); 3return 0; 輸入 1char name[100]; 2scanf(\u0026#34;%s\u0026#34;, name); 3printf(\u0026#34;My name is %s.\\n\u0026#34;, name); 如果輸入的字串包含空格必須用 %[^\\n]\n1char name[100]; 2scanf(\u0026#34;%[^\\n]\u0026#34;, name); 3printf(\u0026#34;My name is %s.\\n\u0026#34;, name); ####　常見字串處理\n字串長度 可用loop\n1#include\u0026lt;stdio.h\u0026gt; 2 3int main(){ 4\tchar s[100]=\u0026#34;Hello!\u0026#34;; 5\tint len=0; 6\tfor(int i=0; s[i]!=\u0026#39;\\0\u0026#39;; i++) 7\tlen++; 8\tprintf(\u0026#34;%d\\n\u0026#34;, len); 9\treturn 0; 10} 或透過函式庫string.h\n定義 語法是:#define \u0026lt;目標文字\u0026gt; \u0026lt;替換文字\u0026gt;\n用 #define 定義的函式，執行速度會比自訂函式還快，但函式功能複雜時不好編寫，且容易造成執行結果錯誤\n1#include\u0026lt;stdio.h\u0026gt; 2#define plus + //定義函式 3#define x 1 //定義變數 4#define y 2 //定義變數 5#define say printf 6 7int main(){ 8\tsay(\u0026#34;%d\\n\u0026#34;, x plus y); 9\treturn 0; 10} 函式 1#include\u0026lt;stdio.h\u0026gt; 2#include\u0026lt;stdlib.h\u0026gt; 3 4int pi(){ 5 char say[3]=\u0026#34;hi\u0026#34;; 6 showMessage(say); 7 return 666; 8} 9void showMessage(a){ 10 printf(a); 11} 12int main(){ 13 printf(\u0026#34;\\n%d\u0026#34;, pi());//輸出12345 14 return 0; 15} 建構式 struct 1#include\u0026lt;stdio.h\u0026gt; 2#include\u0026lt;stdlib.h\u0026gt; 3 4struct STUDENT{ 5 int number; 6 int age; 7}; 8 9int main(){ 10\tstruct STUDENT student_1={87, 19}; 11\tprintf(\u0026#34;I am %d,I\u0026#39;m %d years old\u0026#34;,student_1.number,student_1.age); 12 //I am 87,I\u0026#39;m 19 years old 13} union 太廢了我也不知道拿來幹嘛\n和 struct 一樣可以由多個不同型別的成員組成，但 同一時間只能儲存一個資料，或者可以說雖然可以用不同的成員名稱取得其中的資料，但實際上不管用哪個名稱都會得到同一個數值\n1#include\u0026lt;stdio.h\u0026gt; 2#include\u0026lt;stdlib.h\u0026gt; 3 4union Data{ 5\tint n; 6\tfloat f; 7}; 8 9int main(){ 10\tunion Data data={5}; 11\tprintf(\u0026#34;%d %f\\n\u0026#34;, data.n, data.f); 12 //5 0.000000 13} enum 1#include\u0026lt;stdio.h\u0026gt; 2#include\u0026lt;stdlib.h\u0026gt; 3 4enum week{A=1, B, C, D=1, E, F}; 5 6int main(){ 7\tprintf(\u0026#34;%d %d %d %d %d %d\u0026#34;, A, B, C, D, E, F); 8 //1 2 3 1 2 3 9\treturn 0; 10} 關鍵字 以下這些字不能作為變數名稱\nauto, do, goto, signed, break, double, if, sizeof, case, else, int, static, char, enum, long, struct, const, extern, register, switch, continue, float, return, typedef, default, for, short, union\n科學記號 123=1.23E+2 0.00041=4.1e-4 數學\u0026lt;math.h\u0026gt; M_E 回傳自然常數 e M_PI 回傳圓周率 π M_SQRT2 回傳根號2 sin(x) cos(x) tan(x) asin(x) acos(x) atan(x) BJ4 exp(x) 回傳自然常數 e 的 x 次方 pow(x, y) 回傳 x 的 y 次方 pow(x) 回傳10的 x 次方 sqrt(x) 回傳 x 的根號 log(x) 回傳以 e 為底的對數 log10(x) 回傳以10為底的對數 abs(x) 回傳整數 x 的絕對值 fabs(x) 回傳實數 x 的絕對值 ","link":"https://EM-Tec.github.io/post/apcs_note/","section":"post","tags":null,"title":"【重點整理】C語言"},{"body":"","link":"https://EM-Tec.github.io/categories/syntax/","section":"categories","tags":null,"title":"syntax"},{"body":"","link":"https://EM-Tec.github.io/series/themes-guide/","section":"series","tags":null,"title":"Themes Guide"},{"body":"Page bundles are an optional way to organize page resources within Hugo.\nYou can opt-in to using page bundles in Hugo Clarity with usePageBundles in your site configuration or in a page's front matter. Read more about usePageBundles.\nWith page bundles, resources for a page or section, like images or attached files, live in the same directory as the content itself rather than in your static directory.\nHugo Clarity supports the use of leaf bundles, which are any directories within the content directory that contain an index.md file. Hugo's documentation gives this example:\n1content 2├── about 3│ ├── index.md 4├── posts 5│ ├── my-post 6│ │ ├── content1.md 7│ │ ├── content2.md 8│ │ ├── image1.jpg 9│ │ ├── image2.png 10│ │ └── index.md 11│ └── my-other-post 12│ └── index.md 13│ 14└── another-section 15 ├── .. 16 └── not-a-leaf-bundle 17 ├── .. 18 └── another-leaf-bundle 19 └── index.md In the above example `content` directory, there are four leaf bundles: about: This leaf bundle is at the root level (directly under content directory) and has only the index.md.\nmy-post: This leaf bundle has the index.md, two other content Markdown files and two image files. image1 is a page resource of my-post and only available in my-post/index.md resources. image2 is a page resource of my-post and only available in my-post/index.md resources.\nmy-other-post: This leaf bundle has only the index.md.\nanother-leaf-bundle: This leaf bundle is nested under couple of directories. This bundle also has only the index.md.\nThe hierarchy depth at which a leaf bundle is created does not matter, as long as it is not inside another leaf bundle.\nAdvantages to using page bundles The image below is part of the bundle of this page, and is located at content/post/bundle/building.png. Because it's within this page's bundle, the markup for the image only has to specify the image's filename, building.png.\nIf you ever change the name of the directory in which this Markdown file and the image reside, the reference to the image would not need to be updated.\nIn addition to more cleanly organizing your content and related assets, when using page bundles, Hugo Clarity will automatically generate markup for modern image formats, which are smaller in file size.\nFor instance, when you reference an image like building.png, Hugo Clarity will check to see if the same image (based on filename) exists in WebP, AVIF or JXL formats. If you inspect the image above, you'll see a \u0026lt;source\u0026gt; element for building.webp, because that file is also present. Hugo Clarity will only include the markup if these images exist.\nBrowsers that support these formats and the \u0026lt;picture\u0026gt; element will load them, while browsers that do not will fall-back to the default image. Read more about this process.\nFinally, note that page assets can be further managed and refined within the page's front matter if you wish, and are not limited to images alone.\nDisadvantages to using page bundles Page resources in a bundle are only available to the page with which they are bundled — that means you can't include an image with one page and then reference it from another.\nImages that are being used in multiple places are more appropriate for your Hugo assets directory. Unlike files in the Hugo static directory, files in the assets directory can be run through Hugo Pipes, which includes image processing.\n","link":"https://EM-Tec.github.io/post/bundle/","section":"post","tags":["Hugo"],"title":"Using Hugo page bundles"},{"body":"在這篇文章我要介紹Remove.bg這個超讚的去被網站，並講解如何使用它提供的Api來製作捷徑，使你能夠一鍵去被\n去背對於影音創作者來說是十分重要的技能。除了可以凸顯主題之外，也可以對背景空間進行利用，不過如果要對沒有使用綠幕的圖片進行去背通常是一件十分痛苦的一件事。好在有一個線上的網站可以透過AI來去背，且效果十分不錯。 Remove.bg 開發者:Kaleido 類型:網站/網路應用程式 連結:Remove.bg 進入到網站後可以直接上傳照片。上傳完成後可以直接下載，也可以做一些編輯如手動去背（如果AI沒去好）、添加濾鏡、背景顏色等。\nios捷徑（API） 每次去背都要打卡網頁操作，如果量多的話十分不方便。好在他們有提供API，可以讓我們用捷徑腳本來簡化步驟。\nAPI是什麼 API(Application Programming Interface)，中文叫做應用程式介面。你可以想像有一台飲料機，上面的按鈕就是 API ，當你投入錢並按下按鈕時飲料機就收到了你的需求，並將飲料從取物口送出，而投入的方式可以是硬幣、鈔票、或刷卡。\n以下是一個簡單的捷徑示範，你可以直接下載來使用。後面會提供簡單的製作教學。有多簡單呢，只有兩個方塊！ Remove.bg一鍵去背 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置:iCloud 使用方法 要使用Remove.bg的API你需要一個用來辨識你是誰的API Key（仗權）。請先到這裡註冊一個帳號，你可以直接使用Google登入，並複製你的API Key。\nRemove.bg提供每個帳號每個月50次的免費使用。對一般人來說已經很足夠了，但如果還需要更多的話可以升級方案或再註冊一個帳號\n加入捷徑後請輸入剛才得到的API Key。\n要使用時只需要分享圖片，並點選捷徑即可。是不是超方便的！\n製作教學 從官方文件可以看出我們呼叫API至少需要提供API Key、大小、圖片，並以Post的方式傳遞到https://api.remove.bg/v1.0/removebg。所以捷徑只需要照著填入並儲存把回傳的圖片即可。實際設定如下\n","link":"https://EM-Tec.github.io/post/remove-bg/","section":"post","tags":["ios捷徑"],"title":"【Remove.bg】讓AI幫你一鍵去背"},{"body":"","link":"https://EM-Tec.github.io/categories/api%E5%88%86%E4%BA%AB/","section":"categories","tags":null,"title":"API分享"},{"body":"","link":"https://EM-Tec.github.io/tags/ios%E6%8D%B7%E5%BE%91/","section":"tags","tags":null,"title":"ios捷徑"},{"body":"","link":"https://EM-Tec.github.io/categories/%E6%8D%B7%E5%BE%91%E5%88%86%E4%BA%AB/","section":"categories","tags":null,"title":"捷徑分享"},{"body":"QR Code是分享網站連結常用的方法。適合在印刷上面方便用讀者進入網頁，不用一個一個字照著打。 而製作一個好看的QR Code不但可以讓畫面更好看，還可以增進使用者掃描的意願。而其中我覺得最好看的QR Code生成器就是LINK to QR。\nlink-to-qr 開發者:posterilove 類型:免費網站工具 連結:link-to-qr.com https://www.google.com.tw\nhttps://m.youtube.com\nhttps://cn.pornhub.com\n進入網站後可以先在文字框裡輸入網址。我以我製作的旌旗青年週報下載器做為示範\n這裡建議可以先使用is.gd縮短網址(推薦設為小寫，可閱讀的-Lower case pronounceable)，而網址前面不用加https://這樣可以讓QR Code更簡略。不只好看也可以更方便掃描。\n而你也可以設定QR Code的邊框、文字、顏色、還有是否要去背等等。\n而我自己習慣設成白色/黑色QR Code、加邊框、不加文字、並且去背，方便應用於各種版面。以下為最終效果\n","link":"https://EM-Tec.github.io/post/link-to-qr/","section":"post","tags":[],"title":"【link-to-qr】超好看QRCode生成器"},{"body":"當時在製作的時候正是疫情爆發的時間，教會聚會全面改成線上，且只有提供週報的圖片檔，因此製作了一個可以下載週報的網站。即使現在疫情已經過去，我還是習慣使用這它\n好久沒有寫部落格文章了～最近都在忙著 認真讀書 、更新毛哥EM的基地及製作Line機器人。最近編程編到有點頭痛，想說把欠了很久的文章寫完，休息一下\n旌旗教會週報下載器 開發者:毛哥EM(我) 類型:網站 連結:iCloud 當週週報連結 如果你平常只需要獲取當周週報，可直接到以下網址，永久有效。歡迎設為書籤。\n周間時當週週報教會可能還未釋出，若無法下載（出現404）請過一陣子再試。\nhttps://edit-mr.github.io/code/weekly/redirect/\nios捷徑（稍後更新連結） 若你使用的是ios裝置，你可以使用我製作的捷徑腳本來快速獲取當天、上一次、或指定日期的週報。 小提醒 如果手機說無法加入不受信任的捷徑，請參考這篇文章提供的方法。 此網站及捷徑皆為開源項目，歡迎到GitHub查看。 你也可以用Siri執行這個捷徑。 ","link":"https://EM-Tec.github.io/post/banner_weekly_downloader/","section":"post","tags":["自製","Github","JSON","ios捷徑"],"title":"【網頁\u0026捷徑】旌旗教會週報下載器"},{"body":"","link":"https://EM-Tec.github.io/tags/json/","section":"tags","tags":null,"title":"JSON"},{"body":"大眼蛙教練的課程是以堂數做計算，也就是來一次算一次，而不是一段時間。因此每次學生上課都需要簽到，最後還需要人工來統計。因此我做了一個簡單的點名系統，讓電腦來做統計和計算的工作。\n大眼蛙教練點名系統 這篇文章出乎意料地幫助到許多人，因此我在2023年重新寫了一次，比上次更容易製作和操作，也更好看一些(我覺得啦)。\n建議閱讀這篇文章: https://em-tec.github.io/post/rol-call/\n大眼蛙教練點名系統 開發者:毛哥EM(我) 類型:網站 網址:EM's Base 功能 新增學生 輸入名稱並按新增即可。\n電腦會自動在Google Sheet建立好欄位。教練只需要到試算表設定學生的課程數就好了。如果沒有課了會用紅色表示，而未設定會被判斷為沒有課程。 超重要提醒 學生姓名不可以有空格，如果有空格會自動刪除 要刪除學生請刪除整列，不可留一整列空白 點名 網站會從表單取得學生名單並顯示。只需要點擊名稱即可完成報到。\n完成報到後會使用Line Notify通知完成報到的學生和報到時間到指定的群組。\n提醒 為了配合不同螢幕大小，沒有限制每行出現的學生數。盡可能多顯示一些，比較容易找到。 為避免重複點名，報到後學生會隱藏。重新整理頁面即可顯現 下方方框會顯示自開啟網頁後已完成報到的學生。 在試算表的「紀錄」可以看到之前學生的報到紀錄。當天的會以綠色做標記。 超重要提醒 如果要刪除記錄（如誤按到）請務必要「刪除整列」。不可留空 查詢記錄 如果要查詢之前報到的紀錄，請到查詢頁面並輸入姓名。\n教學 我們分成三個步驟:\n建立試算表(Google Sheet) 生成Line Notify仗權(若不需要Line通知可省略) 創建API(Google App Script)來處理資料、發送訊息、以及更新試算表 建立一個漂亮的網站方便操作 建立試算表(Google Sheet) 我分成兩個表格，分別叫做紀錄和統計。為了方便辨識第一排插入標題\n紀錄 編號 姓名 時間 剩餘課堂數 統計 學生 上課次數 剩餘課堂數 總課堂數 接著請你複製這個試算表的ID，也就是網址https://docs.google.com/spreadsheets/d/和/之間那一串(如1fjX-prGu0hfb65LCQkrktWa-JavvjSz7tWMmYWAb7RA)。等一下會用到。\n生成Line Notify仗權 Line Notify是個比較冷門但是非常好用的工具。我們可以透過他來從第三方(如你的網站、或是ios捷徑)無限量的廣播訊息到指定的群組，或是單獨發給你。我們會在報到成功後請Line用Line Notify來在群組裡廣播提醒。\n請依照圖片步驟建立一個仗權，要給Line看這一串他才知道要傳送信息到哪裡。使用Line Lontify而不是Line機器人的原因是免費版的官方帳號一個月只能傳送500則訊息，但老師的學生數量大，可能會吃不消；且Line Notify設定較簡單。\n建立API(Google App Script) 想要讓網站編輯試算表需要透過Google App Script(GAS)來完成。我們要建立四個API，分別用來:\n紀錄出缺席 獲取學生列表(以進行報到) 查詢紀錄 新增學生 到時候我們建立的網站會向這四個API發送請求來更新試算表或獲取資料\n提示 google 官方文件 spreadsheet method，裡面有非常詳盡的介紹，包括可以讀取欄位、讀取資料、排序資料、插入資料等等的功能，其實某方面來說算是功能齊全的類資料庫了。有興趣可以點開來看裡面文件。\n文件裡面 method 一大堆，還是直接實作比較快。\n出缺席紀錄 請建立一個新的專案並貼上以下內容。記得貼上excel那段ID 小叮嚀 為避免程式碼站太多空間，可能會部分隱藏。請記得展開或直接複製。\n1function doGet(e) { 2 var params = e.parameter; 3 // 可以針對你帶入的資料變化 params.xxxxxx xxxxx = 你帶進來的key值 4 var name = params.name; 5 var time = params.time; 6 var remain = params.remain; 7 //將Sheet指定為\u0026#34;資料庫\u0026#34;試算表 SpreadSheet = 試算表 ，貼上excel那段參數 8 var SpreadSheet = SpreadsheetApp.openById(\u0026#34;XXXXXXXXXXXXXXXXXXX\u0026#34;); 9 //取得頁籤:\u0026#34;工作表1\u0026#34; Sheet = 頁籤 10 var Sheet = SpreadSheet.getSheets()[0]; 11 //取得有資料的最後一行的\u0026#34;行數\u0026#34;(目的要在最後一行插入新資料) 12 var LastRow = Sheet.getLastRow(); 13 // 編號為行數(如要輸入編號2時裡面已經有2行了) 14 var orderNum = LastRow; 15 16 //開始寫入資料 擋住沒填時間 不給寫入資料，防止被亂撞api 17 if(time !== undefined){ 18 //在最後一行的下一行寫入資料 19 Sheet.getRange(LastRow+1, 1).setValue(orderNum); 20 Sheet.getRange(LastRow+1, 2).setValue(name); 21 Sheet.getRange(LastRow+1, 3).setValue(time); 22 Sheet.getRange(LastRow+1, 4).setValue(remain); 23 return ContentService.createTextOutput(true); 24 } 25 // 被亂撞 會回吐這段文字給前端 26 return ContentService.createTextOutput(\u0026#39;別亂撞我～ :)\u0026#39;); 27} 在這個程式當中，我們說當我們拿著資料到這個應用程式時，將我們給的姓名、時間、剩餘課堂數、以及編號寫入到試算表第一頁最後一行的下一行。但是這樣還沒結束，會後我們還要請Line Notify幫我們廣播。請在return ContentService.createTextOutput(true);之前插入以下程式碼。記得填入剛才生成的仗權。\n編輯完成後請按執行。第一次執行時系統會要求你登入Google，請登入現在使用的帳號並提供編輯試算表的權限。Google會告訴你不安全因為這是是你自己製作的應用程式，沒有經過Google審查。直接點選進階，並繼續前往即可。成功部署後請保存應用程式的網址，之後網站就會傳送資料到這個網站來寫入和讀取資料。\n完成後可能會看到紅色警告說無法執行，因為我們直接執行了程式，沒有給資料（學生名稱）。因此請建立一個程式碼檔案叫做debug，並貼上以下內容：\n1//呼叫 2function debug() { 3 var Result = doGet({ 4 parameter: { 5 name: \u0026#39;測試先生\u0026#39;, 6 time: \u0026#39;2021/10/10 22:46:00\u0026#39;, 7 remain: 10 8 } 9 }); 10 Logger.log(\u0026#39;Result: %s\u0026#39;, Result); 11} 執行後你應該會看到底下顯示執行完畢，且表單多出了一列如下\n編號 姓名 時間 剩餘課堂數 1 測試先生 2021/10/10 22:46:00 10 做好了之後點擊執行▶️，你會需要授予你的程式讀取資料的權限。因為你寫的程式沒有被Google驗證過所以會顯示不安全，但我相信你不會把你的帳號搞爆，對吧\n接下來我們要部署它，讓它成為一個網站來讓我們抓。這裡選擇網頁應用程式，所有人都以你的身份讀取。按下部署就可以囉\n這裡我們把部署的網址複製起來。如果要做修改除了按儲存之外要記得重新部署成新版本才會更新喔 小叮嚀 若發布後還有做修改，既得要再次發布且要發布為新版本。\n學生列表 學生列表不需要輸入，直接讀取內容就好了。這裡使用的輸出格式是JSON。JSON就是ios捷徑APP裡的辭典，簡單來說就是一個對照表。比如說你想要紀錄一個人的基本資料如下\n1{ 2 \u0026#34;姓\u0026#34;: \u0026#34;毛\u0026#34;, 3 \u0026#34;名\u0026#34;: \u0026#34;宥鈞\u0026#34;, 4 \u0026#34;性別\u0026#34;: \u0026#34;男\u0026#34;, 5 \u0026#34;年齡\u0026#34;: 15, 6 \u0026#34;住址\u0026#34;: 7 { 8 \u0026#34;路名\u0026#34;: \u0026#34;大馬路\u0026#34;, 9 \u0026#34;city\u0026#34;: \u0026#34;台中市\u0026#34;, 10 \u0026#34;國家\u0026#34;: \u0026#34;台灣\u0026#34;, 11 \u0026#34;郵遞區號\u0026#34;: \u0026#34;40763\u0026#34; 12 } 13} 我們可以輕鬆的讓JavaScript讀懂它。請以相同方式建立以下API\n1function doGet(e){ 2 var id = \u0026#39;XXXXXXXXXXXXXXXXXXX\u0026#39;; //抓取表單 3 var spreadsheet = SpreadsheetApp.openById(id); // Sheet id 4 var sheet = spreadsheet.getSheets()[1]; // 要第幾個sheet？ 1 就是第2個 5 var rowLength = sheet.getLastRow()-1; //取行長度 6 var columnLength = sheet.getLastColumn(); //取列長度 7 var data = sheet.getRange(2,1,rowLength,columnLength).getValues(); // 取得的資料 8 var dataExport = {}; 9 // 一個個加入json 10 for(i in data){ 11 if(data[i][0] != \u0026#34;\u0026#34;){ 12 dataExport[i] = { 13 name: data[i][0], 14 left: data[i][2], 15 }; 16 }; 17 }; 18 // 回傳JSON 19 var dataExportFormat = JSON.stringify(dataExport); 20 return ContentService.createTextOutput(dataExportFormat).setMimeType(ContentService.MimeType.JSON); 21 } 在這段程式當中，我們一列一列的把試算表的資料塞進JSON裡，最後再回傳給我們。\n查詢紀錄 這裡使用Post來傳送而不是Get。其實都可以，只是想說換一個方式。差別在於使用Get時資料是存在網址當中，而Post像是還有一個附件。因為資料量很小，所以都可以使用。\n1function doPost(e) { 2 var params = e.parameter; 3 // 可以針對你帶入的資料變化 params.xxxxxx xxxxx = 你帶進來的key值 4 var name = params.name; 5 var SpreadSheet = SpreadsheetApp.openById(\u0026#39;XXXXXXXXXXXXXXXXXXX\u0026#39;); //抓取表單 6 var Sheet = SpreadSheet.getSheets()[0]; 7 var LastRow = Sheet.getLastRow(); 8 var data = []; 9 var listAll = Sheet.getSheetValues(1, 2, LastRow, 4); 10 // 把符合的抓出來 11 for (var i = 0; i \u0026lt; listAll.length; i++) { 12 if (listAll[i].indexOf(name) === 0) { 13 data.push({ data: listAll[i], index: i + 1 }); 14 } 15 } 16 // 回傳JSON 17 return ContentService.createTextOutput(JSON.stringify(data)).setMimeType( 18 ContentService.MimeType.JSON 19 ); 20} 在這段程式當中雖然一樣是回傳資料，但是在塞進JSON前先判斷一下姓名是否符合。直得注意的是我們是從第2欄開始抓，因為使用者不需要知道這是所有資料當中的第幾筆資料。\n新增學生 1function doGet(e) { 2 var params = e.parameter; 3 // 可以針對你帶入的資料變化 params.xxxxxx xxxxx = 你帶進來的key值 4 var name = params.name; 5 //將Sheet指定為\u0026#34;資料庫\u0026#34;試算表 SpreadSheet = 試算表 ，貼上excel那段參數 6 var SpreadSheet = SpreadsheetApp.openById(\u0026#34;XXXXXXXXXXXXXXXXXXX\u0026#34;); 7 //取得頁籤:\u0026#34;工作表1\u0026#34; Sheet = 頁籤 8 var Sheet = SpreadSheet.getSheets()[1]; 9 //取得有資料的最後一行的\u0026#34;行數\u0026#34;(目的要在最後一行插入新資料) 10 var LastRow = Sheet.getLastRow(); 11 var now = LastRow+1; 12 //格字內加入函式統計課程數 13 var his=\u0026#34;=COUNTIF(\u0026#39;紀錄\u0026#39;!B:B,A\u0026#34;+now+\u0026#34;)\u0026#34;; 14 //格字內加入函式計算剩餘課程數 15 var less=\u0026#39;=D\u0026#39;+now+\u0026#39;-B\u0026#39;+now; 16 if(name !== undefined){ 17 //在最後一行的下一行寫入資料 18 Sheet.getRange(LastRow+1, 1).setValue(name); 19 Sheet.getRange(LastRow+1, 2).setValue(his); 20 Sheet.getRange(LastRow+1, 3).setValue(less); 21 return ContentService.createTextOutput(true); 22 } 23 // 被亂撞 會回吐這段文字給前端 24 return ContentService.createTextOutput(\u0026#39;別亂撞我～ :)\u0026#39;); 25} 我們在其中一個儲存格中插入了一個叫做COUNTIF的函式。他會統計在紀錄當中有幾筆資料的姓名和他左邊的姓名一樣。而剩餘課堂數就是全部課堂數減統計出來已經上的課堂數。\n建立網站 最後，讓我們來做一個的簡單漂亮的網站吧。 請選一個地方建立以下幾個純文字檔案\ncheck-in.html search.html sign-up.html index.html style.css HTML是網頁的檔案，有點像Word檔，而CSS是用來裝飾HTML的。你可以用它來決定字要多大、什麼顏色、間距要多少等。\n而我們在HTML檔中還插入了一些JavaScript來傳送和讀取資料和顯示資料。我使用了一個叫做jQuery的JavaScript函式庫，它可以讓程式變得更簡略。記得把傳送到的網址改成你剛才建的Google App Script的網址，其他你可以直接複製貼上。\nindex.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;title\u0026gt;點名系統\u0026lt;/title\u0026gt; 5 \u0026lt;!-- 網站資訊 --\u0026gt; 6 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;使用Google sheet的api紀錄出缺席\u0026#34; /\u0026gt; 7 \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;毛哥EM\u0026#34; /\u0026gt; 8 \u0026lt;!-- 讓網址正常顯示以及裝飾 --\u0026gt; 9 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 10 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;00BFFF\u0026#34; /\u0026gt; 11 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34; media=\u0026#34;screen\u0026#34; /\u0026gt; 12\u0026lt;/head\u0026gt; 13\u0026lt;body\u0026gt; 14 \u0026lt;main\u0026gt; 15 \u0026lt;h1\u0026gt;點名系統\u0026lt;/h1\u0026gt; 16 \u0026lt;p\u0026gt;主選單\u0026lt;/p\u0026gt; 17 \u0026lt;button onclick=\u0026#34;window.location=\u0026#39;check-in.html\u0026#39;;\u0026#34;\u0026gt;報到\u0026lt;/button\u0026gt; 18 \u0026lt;button onclick=\u0026#34;window.location=\u0026#39;search.html\u0026#39;;\u0026#34;\u0026gt;查詢紀錄\u0026lt;/button\u0026gt; 19 \u0026lt;button onclick=\u0026#34;window.location=\u0026#39;sign-up.html\u0026#39;;\u0026#34;\u0026gt;新增學生\u0026lt;/button\u0026gt; 20 \u0026lt;p\u0026gt; 21 \u0026lt;a href=\u0026#34;https://Edit-Mr.github.io\u0026#34;\u0026gt;毛哥EM\u0026lt;/a\u0026gt;製作 22 \u0026lt;/p\u0026gt; 23 \u0026lt;/main\u0026gt; 24\u0026lt;/body\u0026gt; sign-up.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;title\u0026gt;新增學生 - 點名系統\u0026lt;/title\u0026gt; 5 \u0026lt;!-- 網站資訊 --\u0026gt; 6 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;使用Google sheet的api紀錄出缺席\u0026#34; /\u0026gt; 7 \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;毛哥EM\u0026#34; /\u0026gt; 8 \u0026lt;!-- 讓網址正常顯示以及裝飾 --\u0026gt; 9 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 10 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;00BFFF\u0026#34; /\u0026gt; 11 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34; media=\u0026#34;screen\u0026#34; /\u0026gt; 12 \u0026lt;!-- 載入jQuery --\u0026gt; 13 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 14\u0026lt;/head\u0026gt; 15\u0026lt;body\u0026gt; 16 \u0026lt;main\u0026gt; 17 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;index.html\u0026#34;\u0026gt;點名系統\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 18 \u0026lt;p\u0026gt;新增學生\u0026lt;/p\u0026gt; 19 \u0026lt;input type=\u0026#34;text\u0026#34; class=\u0026#34;form-control\u0026#34; id=\u0026#34;name\u0026#34; /\u0026gt; 20 \u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;sendOrder\u0026#34;\u0026gt;新增\u0026lt;/button\u0026gt; 21 \u0026lt;p\u0026gt; 22 \u0026lt;a href=\u0026#34;https://Edit-Mr.github.io\u0026#34;\u0026gt;毛哥EM\u0026lt;/a\u0026gt;製作\u0026lt;br /\u0026gt; 23 送出後請稍等數秒 勿重複新增 24 \u0026lt;/p\u0026gt; 25 \u0026lt;/main\u0026gt; 26 \u0026lt;script\u0026gt; 27 $(function () { 28 // 監聽 按鈕點擊 29 30 $(\u0026#34;#sendOrder\u0026#34;).click(function (e) { 31 // 姓名 32 33 var name = $(\u0026#34;#name\u0026#34;).val(); 34 35 $(\u0026#34;input\u0026#34;).focus(function () { 36 $(this).css(\u0026#34;border\u0026#34;, \u0026#34;\u0026#34;); 37 }); 38 39 // 擋住不填資料 40 41 if (name == \u0026#34;\u0026#34;) { 42 $(\u0026#34;#name\u0026#34;).css(\u0026#34;border\u0026#34;, \u0026#34;1px solid #ff0000\u0026#34;); 43 } else { 44 var name = name.replace(\u0026#34; \u0026#34;, \u0026#34;\u0026#34;); 45 46 var data = { 47 name: name, 48 }; 49 50 $.ajax({ 51 // 這邊用get type 52 53 type: \u0026#34;get\u0026#34;, 54 55 // api url - google appscript 產出的 url 56 57 url: \u0026#34;https://script.google.com/............\u0026#34;, 58 59 // 剛剛整理好的資料帶入 60 61 data: data, 62 63 // 資料格式是JSON 64 65 dataType: \u0026#34;JSON\u0026#34;, 66 67 // 成功送出 會回頭觸發下面這塊 68 69 success: function (response) { 70 console.log(response); 71 72 alert(\u0026#34;新增成功!!\u0026#34;); 73 }, 74 }); 75 } 76 }); 77 }); 78 \u0026lt;/script\u0026gt; 79\u0026lt;/body\u0026gt; check-in.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;title\u0026gt;報到 - 點名系統\u0026lt;/title\u0026gt; 5 \u0026lt;!-- 網站資訊 --\u0026gt; 6 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;使用Google sheet的api紀錄出缺席\u0026#34; /\u0026gt; 7 \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;毛哥EM\u0026#34; /\u0026gt; 8 \u0026lt;!-- 讓網址正常顯示已經裝飾 --\u0026gt; 9 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 10 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;00BFFF\u0026#34; /\u0026gt; 11 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34; media=\u0026#34;screen\u0026#34; /\u0026gt; 12 \u0026lt;!-- 載入jQuery和學生列表 --\u0026gt; 13 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 14\u0026lt;/head\u0026gt; 15\u0026lt;script\u0026gt; 16 //用Get讀取資料 17 window.onload = () =\u0026gt; { 18 // api url - google appscript 產出的 url 19 let requestURL = \u0026#34;https://script.google.com/.........\u0026#34;; 20 let request = new XMLHttpRequest(); 21 request.open(\u0026#34;GET\u0026#34;, requestURL); 22 request.responseType = \u0026#34;json\u0026#34;; 23 request.send(); 24 //收到資料後輪流做成按鈕 25 request.onload = function () { 26 let student = request.response; 27 for (var i in student) { 28 var now = student[i]; 29 var stu = now.name; 30 var left = now.left; 31 --left; 32 var but = \u0026#39;\u0026lt;button id=\u0026#34;\u0026#39; + stu + \u0026#39;\u0026#34;\u0026gt;\u0026#39; + stu + \u0026#34;\u0026lt;/button\u0026gt;\u0026#34;; 33 console.log(but); 34 $(\u0026#34;#students\u0026#34;).append(but); 35 var iden = \u0026#34;#\u0026#34; + stu; 36 var click = \u0026#39;to(\u0026#34;\u0026#39; + stu + \u0026#39;\u0026#34;, \u0026#39; + left + \u0026#34;);\u0026#34;; 37 $(iden).attr(\u0026#34;onclick\u0026#34;, click); 38 } 39 //載入完成後更改副標題 40 $(\u0026#34;#header\u0026#34;).text(\u0026#34;點擊姓名即可完成報到\u0026#34;); 41 }; 42 }; 43 function to(name, have) { 44 var currentdate = new Date(); 45 var filltime = currentdate.getFullYear() + \u0026#34;/\u0026#34; + (currentdate.getMonth() + 1) + \u0026#34;/\u0026#34; + currentdate.getDate() + \u0026#34; \u0026#34; + currentdate.getHours() + \u0026#34;:\u0026#34; + currentdate.getMinutes() + \u0026#34;:\u0026#34; + currentdate.getSeconds(); 46 // 打包 要的資料 47 var course = have; 48 console.log(course); 49 var data = { 50 name: name, 51 time: filltime, 52 remain: course, 53 }; 54 var tag = name; 55 $.ajax({ 56 // 這邊用get type 57 type: \u0026#34;get\u0026#34;, 58 // api url - google appscript 產出的 url 59 url: \u0026#34;https://script.google.com/.........\u0026#34;, 60 // 剛剛整理好的資料帶入 61 data: data, 62 // 資料格式是JSON 63 dataType: \u0026#34;JSON\u0026#34;, 64 // 成功送出 會回頭觸發下面這塊 65 success: function (response) { 66 var msg = response; 67 alert(\u0026#34;報到成功! 還剩\u0026#34; + course + \u0026#34;堂課\u0026#34;); 68 }, 69 }); 70 //報到完成的顯示在下方框框並將按鈕隱藏 71 $(\u0026#34;#ed\u0026#34;).prepend(\u0026#34;\u0026lt;li\u0026gt;\u0026#34; + tag + \u0026#34;\u0026lt;/li\u0026gt;\u0026#34;); 72 var id = \u0026#34;#\u0026#34; + tag; 73 $(id).fadeOut(); 74 } 75\u0026lt;/script\u0026gt; 76\u0026lt;/head\u0026gt; 77\u0026lt;body\u0026gt; 78 \u0026lt;main\u0026gt; 79 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;index.html\u0026#34;\u0026gt;點名系統\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 80 \u0026lt;p id=\u0026#34;header\u0026#34;\u0026gt;載入中\u0026lt;/p\u0026gt; 81 \u0026lt;div id=\u0026#34;students\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; 82 \u0026lt;h2\u0026gt;已到學生\u0026lt;/h2\u0026gt; 83 \u0026lt;p class=\u0026#34;ed\u0026#34; id=\u0026#34;ed\u0026#34;\u0026gt;\u0026lt;/p\u0026gt; 84 \u0026lt;p\u0026gt;\u0026lt;a href=\u0026#34;https://Edit-Mr.github.io\u0026#34;\u0026gt;毛哥EM\u0026lt;/a\u0026gt;製作\u0026lt;/p\u0026gt; 85 \u0026lt;/main\u0026gt; 86\u0026lt;/body\u0026gt; search.html 1\u0026lt;!DOCTYPE html\u0026gt; 2\u0026lt;head\u0026gt; 3 \u0026lt;meta charset=\u0026#34;utf-8\u0026#34; /\u0026gt; 4 \u0026lt;title\u0026gt;查詢 - 點名系統\u0026lt;/title\u0026gt; 5 \u0026lt;!-- 網站資訊 --\u0026gt; 6 \u0026lt;meta name=\u0026#34;description\u0026#34; content=\u0026#34;使用Google sheet的api紀錄出缺席\u0026#34; /\u0026gt; 7 \u0026lt;meta name=\u0026#34;author\u0026#34; content=\u0026#34;毛哥EM\u0026#34; /\u0026gt; 8 \u0026lt;!-- 讓網址正常顯示以及裝飾 --\u0026gt; 9 \u0026lt;meta name=\u0026#34;viewport\u0026#34; content=\u0026#34;width=device-width, initial-scale=1\u0026#34; /\u0026gt; 10 \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;00BFFF\u0026#34; /\u0026gt; 11 \u0026lt;link rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34; href=\u0026#34;style.css\u0026#34; media=\u0026#34;screen\u0026#34; /\u0026gt; 12 \u0026lt;!-- 載入jQuery --\u0026gt; 13 \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.1/jquery.min.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; 14\u0026lt;/head\u0026gt; 15\u0026lt;body\u0026gt; 16 \u0026lt;main\u0026gt; 17 \u0026lt;h1\u0026gt;\u0026lt;a href=\u0026#34;index.html\u0026#34;\u0026gt;點名系統\u0026lt;/a\u0026gt;\u0026lt;/h1\u0026gt; 18 \u0026lt;p\u0026gt;紀錄查詢\u0026lt;/p\u0026gt; 19 \u0026lt;input type=\u0026#34;text\u0026#34; id=\u0026#34;name\u0026#34; /\u0026gt; 20 \u0026lt;button type=\u0026#34;button\u0026#34; id=\u0026#34;send\u0026#34;\u0026gt;查詢\u0026lt;/button\u0026gt; 21 \u0026lt;!-- 顯示查詢結果的表格 先隱藏 --\u0026gt; 22 \u0026lt;table class=\u0026#34;table table-striped\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt; 23 \u0026lt;thead\u0026gt; 24 \u0026lt;tr\u0026gt; 25 \u0026lt;th\u0026gt;姓名\u0026lt;/th\u0026gt; 26 \u0026lt;th\u0026gt;報到時間\u0026lt;/th\u0026gt; 27 \u0026lt;th\u0026gt;剩下課堂\u0026lt;/th\u0026gt; 28 \u0026lt;/tr\u0026gt; 29 \u0026lt;/thead\u0026gt; 30 \u0026lt;tbody id=\u0026#34;dataView\u0026#34;\u0026gt; 31 \u0026lt;!-- 查詢到的資料會插入到這裡 --\u0026gt; 32 \u0026lt;/tbody\u0026gt; 33 \u0026lt;/table\u0026gt; 34 \u0026lt;p\u0026gt; 35 \u0026lt;a href=\u0026#34;https://Edit-Mr.github.io\u0026#34;\u0026gt;毛哥EM\u0026lt;/a\u0026gt;製作\u0026lt;br /\u0026gt; 36 送出後請稍等數秒 37 \u0026lt;/p\u0026gt; 38 \u0026lt;/main\u0026gt; 39 \u0026lt;script\u0026gt; 40 //當傳送按鈕被點擊 41 $(function () { 42 $(\u0026#34;#send\u0026#34;).click(function (e) { 43 var status = true; 44 var name = $(\u0026#34;#name\u0026#34;).val(); 45 $(\u0026#34;input\u0026#34;).focus(function () { 46 $(this).css(\u0026#34;border\u0026#34;, \u0026#34;\u0026#34;); 47 }); 48 //擋住沒有輸入姓名 49 if (name == \u0026#34;\u0026#34;) { 50 $(\u0026#34;#name\u0026#34;).css(\u0026#34;border\u0026#34;, \u0026#34;1px solid #ff0000\u0026#34;); 51 } else { 52 var data = { 53 name: name, 54 }; 55 //Post到前面做的API，記得更改網址 56 $.ajax({ 57 // 這邊用post type 58 type: \u0026#34;post\u0026#34;, 59 // api url - google appscript 產出的 url 60 url: \u0026#34;https://script.google.com/...........\u0026#34;, 61 data: data, 62 dataType: \u0026#34;JSON\u0026#34;, 63 success: function (response) { 64 var content = \u0026#34;\u0026#34;; 65 //把資料一行行做出表格 66 response.forEach((element) =\u0026gt; { 67 var [name, time, remain] = element.data; 68 var index = element.index; 69 content += `\u0026lt;tr\u0026gt; 70 \u0026lt;td\u0026gt;${name}\u0026lt;/td\u0026gt; 71 \u0026lt;td\u0026gt;${new Date(time)}\u0026lt;/td\u0026gt; 72 \u0026lt;td\u0026gt;${remain}\u0026lt;/td\u0026gt; 73 \u0026lt;/tr\u0026gt;`; 74 }); 75 //如果有資料的話顯示表格，否則提示查無資料 76 if (content) { 77 document.getElementsByClassName(\u0026#34;table-striped\u0026#34;)[0].style.display = \u0026#34;table\u0026#34;; 78 } else { 79 alert(\u0026#34;查無資料\u0026#34;); 80 } 81 var dataView = document.getElementById(\u0026#34;dataView\u0026#34;); 82 dataView.innerHTML = content; 83 $(\u0026#34;#name\u0026#34;).val(\u0026#34;\u0026#34;); 84 }, 85 }); 86 } 87 }); 88 }); 89 \u0026lt;/script\u0026gt; 90\u0026lt;/body\u0026gt; style.css 1@charset \u0026#34;utf-8\u0026#34;; 2/*按鈕 3-----------------*/ 4button { 5 outline: 0; 6 font-size: 1.5em; 7 font-weight: 600; 8 background: #fff; 9 border: none; 10 margin: 5px; 11 padding: 0.5em; 12 transition: all 0.3s ease-out; 13 box-shadow: inset 0 -8px 0 0 rgba(0, 0, 0, 0.2), 1px 1px 0 0 deepskyblue, 2px 2px 0 0 deepskyblue, 3px 3px 0 0 deepskyblue, 4px 4px 0 0 deepskyblue, 5px 5px 0 0 deepskyblue, 6px 6px 0 0 deepskyblue, 7px 7px 0 0 deepskyblue, 14 8px 8px 0 0 deepskyblue, 9px 9px 0 0 deepskyblue, 10px 10px 0 0 deepskyblue, 11px 11px 0 0 deepskyblue, 12px 12px 0 0 deepskyblue; 15} 16button:hover { 17 color: #444; 18 box-shadow: inset 0 -4px 0 0 rgba(0, 0, 0, 0.2), 1px 1px 0 0 deepskyblue, 2px 2px 0 0 deepskyblue, 3px 3px 0 0 deepskyblue, 4px 4px 0 0 deepskyblue, 5px 5px 0 0 deepskyblue; 19} 20button:active { 21 color: #222; 22} 23/*其他 24-----------------*/ 25a { 26 color: white; 27 text-decoration: none; 28} 29a:hover { 30 text-decoration: underline; 31} 32.ed { 33 padding: 5px; 34 border: 5px white solid; 35 border-radius: 10px; 36} 37input { 38 outline: 0; 39 font-size: 1.5em; 40 font-weight: 600; 41 background: #fff; 42 border: none; 43 box-shadow: inset 0 -4px 0 0 rgba(0, 0, 0, 0.2), 1px 1px 0 0 deepskyblue, 2px 2px 0 0 deepskyblue, 3px 3px 0 0 deepskyblue, 4px 4px 0 0 deepskyblue, 5px 5px 0 0 deepskyblue; 44 margin: 5px; 45 padding: 0.5em; 46 transition: all 0.3s ease-out; 47 box-shadow: inset 0 -8px 0 0 rgba(0, 0, 0, 0.2), 1px 1px 0 0 deepskyblue, 2px 2px 0 0 deepskyblue, 3px 3px 0 0 deepskyblue, 4px 4px 0 0 deepskyblue, 5px 5px 0 0 deepskyblue, 6px 6px 0 0 deepskyblue, 7px 7px 0 0 deepskyblue, 48 8px 8px 0 0 deepskyblue, 9px 9px 0 0 deepskyblue, 10px 10px 0 0 deepskyblue, 11px 11px 0 0 deepskyblue, 12px 12px 0 0 deepskyblue; 49} 50body { 51 background-color: lightskyblue; 52 color: white; 53} 54main { 55 position: relative; 56 margin: auto; 57 width: 100%; 58 height: 100%; 59 text-align: center; 60} 61h1 { 62 margin-bottom: -10px; 63} 64 65table { 66 margin-top: 30px; 67 color: black; 68 border-spacing: 1; 69 border-collapse: collapse; 70 background: white; 71 border-radius: 6px; 72 max-width: 100%; 73 width: 100%; 74} 75table * { 76 position: relative; 77} 78table td, 79table th { 80 padding-left: 8px; 81} 82table thead tr { 83 height: 60px; 84 background: deepskyblue; 85 font-size: 16px; 86} 87table tbody tr { 88 height: 48px; 89 border-bottom: 1px solid #e3f1d5; 90} 這樣就完成囉\n","link":"https://EM-Tec.github.io/post/frog_check_in/","section":"post","tags":["自製","HTML","CSS","JavaScript","Github","GAS"],"title":"【GAS】自製點名系統"},{"body":"關於此網站 從小接觸3C，累積的大量的個人技巧及作品。許多超讚軟體或工具沒什麼中文資源，而英文許多也只有官方文件，根本不適合人類閱讀，因此決定創建部落格與大家以白話的方式分享，就算不懂程式也可輕鬆使用。文章從國中陸陸續續更新到現在。\n版權宣告 寫技術性文章十分不易，不像許多媒體滑滑DCard,PTT就可以複製出一篇文章。因此如果有引用我的文章或作品的話，希望能標明出處，我會十分感激的\n關於我 哈囉，我是毛哥EM，一位數位創作者。 我喜歡用科技來表達自己，進行各種各樣的創作，比如繪畫、音樂、平面設計和網頁設計。\n我的Github狀態 我有兩個GitHub帳戶，這樣我可以將我的部落個網站和其他網頁作品分開來放。\nEdit Mr EM-Tec 聯絡資訊 歡迎合作、共筆、委託www\nEmail: elvismao.070512@gmail.com Instergram: @em.tec.blog ","link":"https://EM-Tec.github.io/about/","section":"","tags":null,"title":"關於"},{"body":"使用多個螢幕可以大大的增加工作效率。比如說在開直播時可以在遊戲全螢幕時同時做OBS畫面切換或是查看聊天室。 但是你是否有發現所有螢幕的桌布都只能設定一樣的。而如果你像我一樣兩個螢幕比例不同的話，其中一張比例會直接跑掉，十分的影響美觀。\n但是有了MultiWall，你不但可以幫不同的螢幕設定不同的桌布，還可以讓一張背景橫跨多個桌布來達到延伸的效果。\nMultiWall 開發者:is.gd 軟體類型:免費軟體 網址:官網 使用教學 下載 從官網下載MultiWall並安裝\n設定桌布 建議開啟軟體之後先按下Detect來偵測桌面 接著選擇模式:延伸圖片或分別用不同的圖片 接著選取你電腦上的桌布或示範例圖庫 你可以給圖片加上各種濾鏡或特效，但是我建議在導入軟體之前就先編輯好\n最後按下apply即可 ","link":"https://EM-Tec.github.io/post/multiwall/","section":"post","tags":["Windows"],"title":"【MultiWall】讓不同螢幕放不同桌布"},{"body":"太長的網址常除了不好看占版面之外，也難以令人記住。因此所短網址是一個不錯的做法。而其中我最常用的就是is.gd，因為它is good~\n其實主要的原因是因為它很短，比bit.ly短了一個字母，而且頁面超簡單，載入速度快。而它也有可以API可以使用(Apple官方的縮短網址ios捷徑就是使用is.gd)\nis.gd 開發者:is.gd 網站類型:免費網站 網址:is.gd 前往is.gd並在方框輸入你要縮短的URL(我以EM's Base為例為例) 這時你可以直接按下Shorten來縮短，但是我們可以做更進一步的自訂。包括Lower case(全部小寫)，或Lower case pronounceable(可讀的小寫單字)。我通常會選擇Lower case pronounceable，我比較記得下來。最厲害的是你也可以自訂後面的網址！且完全免費！在輸入框填入想要的文字（六個字母以上）並按shorten即可。如果已經被使用過或不符合規定會提醒你。\n按下Shorten後即可得到一個連結。進到那個網址就會直接重新導向道你指定的網址。\nis.gd因為非常簡單所以深得我心，在必須手記網址時真的非常實用。功能強大，真心推薦給大家。順帶一提，is.gd的姊妹網站v.gd也是一樣的功能。但是因為我覺得頁面沒那麼好看所以還是習慣用 is.gd\n","link":"https://EM-Tec.github.io/post/is-gd/","section":"post","tags":null,"title":"【is.gd】超好用網址縮短！連Apple都在用"},{"body":"綠幕是拍片直播或視訊常用到的好幫手，因為它可以讓你輕鬆地去除掉背景。只需要在軟體中選擇綠幕顏色，並調整各種數據即可。但是如果沒有綠幕怎麼辦?這時可以使用電腦免費的視訊會議軟體Zoom達到一樣的效果。 toc = true\n步驟 製作背景 我們需要一張只有一個顏色的圖片來作為Zoom的背景。以和人物最不相關為原則(通常使用綠色)。你可以使用小畫家來繪製。\n用油漆塗滿你選的顏色\n設定Zoom 請先到到官網下載並安裝。安裝方式和其他軟體差不多 Zoom 開發者:Zoom Video Communications 軟體類型:商業軟體 下載位置:官網 登入Zoom 根據你的習慣選擇登入方式，我是使用Google登入，其他也都可以。\n開啟一個新的視訊會議 在應用程式點選新會議\n不用讓程式獲取音訊 點X就好了\n設定 點擊左上方的會議資訊，並進入設定。我們需要改兩個項目：\n取消勾選視訊下的一律在視訊上顯示參與者名稱(需要下滾)\n更改背景成剛才製作的圖片。\n縮小畫面 回到視訊，點選最小化。視窗會小到你只能看到自己。 小提醒 如果縮小畫面還是有名字的話，可以把視窗放大再縮小一次。\nOBS設定 進入OBS並攝取這個Zoom小視窗。我個人是使用Streamlabs OBS，因為介面好看。這裡提供我的作法。\n打開OBS，新增Scene 增加Window Capture 命名 可依你自己喜好。記得選擇新來源再按Add Source\n設定攝取來源 圖片內為推薦設定，不同可能造成攝取失敗。\n放到最大 可視情況調整 小提醒 要放到最大記得選「Fit to screen」而不是「Stretch to screen」，否則你的臉會變形。\n6.新增色鍵 色鍵(Color Key)可以去除指定的顏色。你可以根據情況調整參數，自己試試看\n最後你也可以根據需求增加其他畫面。\n","link":"https://EM-Tec.github.io/post/vb-cable/","section":"post","tags":["OBS","Windows"],"title":"【Zoom】是個超讚綠幕!輕鬆去背到OBS"},{"body":"","link":"https://EM-Tec.github.io/tags/obs/","section":"tags","tags":null,"title":"OBS"},{"body":"只要透過這個捷徑即可一鍵下載網頁中的指定或所有照片。只需要分享網頁並選擇此捷徑即會自動下載並詢問要儲存的照片，選擇後會儲存到相簿。\n儲存影像 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置: iCloud 捷徑有兩個不同模式，分別是「Safari網頁」和「網址下載」。原理不太一樣，詳細差異如下。\nSafari網頁 只適用於Safari。\n這個版本是直接下載當前網頁中所有包含圖像標籤''的元素並一一下載。\n網址下載 此版本適用於任何瀏覽器，甚至是複製網址即可。\n這個版本的原理是用捷徑重新讀取輸入的網址的網頁並抓取中所有能被捷徑判斷為圖片的影像。\n我該使用哪個 如果網站不是打開連結就能看到圖片（如需要登入、或是當場生成的影像），請使用Safari網頁版。其他網站（如維基百科、毛哥EM資訊密技）兩者皆可。\n如果你是Safari的使用者我推薦你使用Safari網頁版，讀取到的機率較高，且速度較快。\n使用方法 請在任意網頁按下分享鍵並選取捷徑，以及模式即可。下載的內容會直接儲存到相簿\n小提醒 如果手機說無法加入不受信任的捷徑，請參考這篇文章提供的方法。 ","link":"https://EM-Tec.github.io/post/shortcut-save_images/","section":"post","tags":["自製","ios捷徑"],"title":"【捷徑】一鍵下載網頁所有照片"},{"body":"我保證這是史上最快的簡訊實名制方法\n簡訊實名制 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置:iCloud 多人實名制 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置:iCloud 建議將它訂選在主畫面。要使用它只需要點一下，掃描，就結束了。重頭到尾之需點一下開啟，連傳送都不用點。有沒有超方便~\n多人怎麼辦？ 我有設計一個多人版的，但建議兩個都下載。因為如果只有一個人的話就不用再輸入人數了。 小提醒 如果手機說無法加入不受信任的捷徑，請參考這篇文章提供的方法。 你也可以用Siri執行這個捷徑。 ","link":"https://EM-Tec.github.io/post/shortcut-real_name_system/","section":"post","tags":["自製","ios捷徑"],"title":"【捷徑】史上最快簡訊實名制"},{"body":"想要加快工作效率，減少滑鼠的使用是個最直接的方法。這裡我提供了一些我常用但是很少人知道的快捷鍵供大家參考。\nWin+數字 - 快速開啟應用 Windows的工作列可以訂選軟體。使你快速找到並執行應用程式。但是你知道嗎，你可以使用快捷鍵Windows+數字鍵來快速開啟程式。像我是將調整各個音量比例的音量混音程式放在第一個。因此我只需要按下Windows+1就可以開啟，十分方便。\nWin+V - 查看剪貼版歷史 使用這個快捷鍵即可教出之前複製過的項目。只需點選要使用的項目就可以直接貼上。對我來說常用於需要複製大量位置不同的文字時非常方便。 需要注意的是，電腦第一次按下Windows+V之後才會開始記錄。因此不妨現在就按下吧。\nCrl+B Crl+I Crl+U 如果你正在進行文書處裡。想要將文字進行粗體必須要點又見或著是找上方的工作列。但是你知道嗎，你只需要反白文字後按下Crl+B就可以啦。同樣的，Crl+I是斜體(incline)，Crl+U是底線(Underline)。 Shift+方向鍵 如果你想要選取文字時，比起使用游標或著是手，使用快捷鍵Shift+方向鍵會方便精確許多。\nCrl+Shift+方向鍵 與快捷鍵Shift+方向鍵不同的是他會直接選取整個段落\n以上就是幾個我常用但很多人不知道的快捷鍵。若你知道其他快捷鍵也歡迎在下方分享\n","link":"https://EM-Tec.github.io/post/windows-hotkey/","section":"post","tags":["Windows"],"title":"【Windows】賭你不知道的必記快捷鍵"},{"body":"透過這個捷徑快速進入當節課堂的Meet，再也不用怕忘記課表\n記得在國二在家上課的時候常常忘記記課表及找不到Meet代碼，或著是來不及再去Classroom找，因此我做了這個捷徑。\n203 Meet 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置:iCloud 設定 當成功將捷徑加入裝置後，他會請你設定幾個變數。\n注意事項:直接按下一部即可 英會班級:衛道中學的英語會話課分成兩班，所以要在這裡輸入是A班還是B班。 使用者編號:如果沒有當堂課的Google Meet代碼，會連結到Classroom的畫面。如果這個裝置有多個帳號的話可以指定開啟哪一個帳號的Classroom。 原理 原理其實也很簡單，就是先Get一個我預先放在Github的JSON檔案來查看那一節是什麼課，再用Safari來打開它。Safari會自動開啟Google Meet並加入會議。有趣的是用Chrome開啟Google Meet連結並不會打開Google Meet 我覺得以我當時的設計得不錯，所以把檔案保留下來。 小提醒 但是這是當時的課程所以現在無法運作，但你可以下載下來做修改。 如果手機說無法加入不受信任的捷徑，請參考這篇文章提供的方法。 你也可以用Siri執行這個捷徑。 ","link":"https://EM-Tec.github.io/post/shortcut-joinmeetdirectly/","section":"post","tags":["自製","衛道中學","Github","JSON","ios捷徑"],"title":"【捷徑】快速進入當節課堂的Meet（備份）"},{"body":"不少人要下載Siri捷徑腳本時，都會因為捷徑的安全設定不允許不受信任的捷徑，導致無法順利下載此捷徑」\u0008那為什麼會變成這樣呢？難道都不能下載網頁上的捷徑腳本了嗎？\n其實這只是一個官方的安全性調整，在本站下載的Siri捷徑腳本是完全，不用擔心有安全疑慮。不過如果碰見這問題，可以透過以下方法來解決。\n解決方法 之需要到「設定」\u0026gt;「捷徑」內，將「允許不受信任的捷徑」開啟即可。 小提醒 如果手機有設定密碼可能會要求輸入 通常好用的捷徑腳本，是不會出現在官方捷徑資料庫內，這些都是由網友或我所製作而成，且本站所介紹過的捷徑腳本，也都會進行審核才會推薦分享，也歡迎大家可以分享，讓更多人看見。\n","link":"https://EM-Tec.github.io/post/shortcut-untrusted_shortcut/","section":"post","tags":["ios捷徑"],"title":"【捷徑】怎麼加入不受信任的捷徑?"},{"body":"只須點一下即可快速連結到衛道的網頁或檔案\n生為衛道的學生，不得不抱怨一下:頁面真的非常難找，都藏在非常深的目錄之下。因此我做了這個捷徑，讓你可以快速導航到你要的頁面。頁面也會隨時間進行更變，非常方便 衛道網頁書籤 開發者:毛哥EM(我) 軟體類型:ios捷徑 下載位置:iCloud 原理 原理其實也很簡單，就是先Get一個我預先放在Github的JSON檔案來查看我設定好的連結，再用選單讓你選。如果你選擇的是網頁的話會用Chrome來打開它；如果是檔案的話會直接下再並開啟預覽。 小提醒 如果手機說無法加入不受信任的捷徑，請參考這篇文章提供的方法。 你也可以用Siri執行這個捷徑。 ","link":"https://EM-Tec.github.io/post/shortcut-viatorbookmark/","section":"post","tags":["自製","ios捷徑","衛道中學","Github","JSON"],"title":"【捷徑】衛道網頁書籤"},{"body":"","link":"https://EM-Tec.github.io/tags/%E8%A1%9B%E9%81%93%E4%B8%AD%E5%AD%B8/","section":"tags","tags":null,"title":"衛道中學"},{"body":"","link":"https://EM-Tec.github.io/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://EM-Tec.github.io/tags/index/","section":"tags","tags":null,"title":"index"}]