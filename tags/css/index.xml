<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CSS on 毛哥EM資訊密技</title><link>https://EM-Tec.github.io/tags/css/</link><description>Recent content in CSS on 毛哥EM資訊密技</description><generator>Hugo -- gohugo.io</generator><copyright>毛哥EM</copyright><lastBuildDate>Tue, 19 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://EM-Tec.github.io/tags/css/index.xml" rel="self" type="application/rss+xml"/><item><title>Day5 載入中… Animation-delay</title><link>https://EM-Tec.github.io/post/2023ironman-5/</link><pubDate>Tue, 19 Sep 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/2023ironman-5/</guid><description>
假設你今天想製作這個載入動畫…
https://codepen.io/edit-mr/pen/YzdzvdV
可以看出來每個方塊的縮放速度是一樣的，只是越往右下就越有延遲對吧。昨天我們學到可以在 animation 設定延遲，其實也可以在 animation-delay 個別設定。讓我們來一步步用前面幾天學到的知識做出這個動畫吧。
用 flex 切版 在想要怎麼切板時可以尋找找齊排列的矩形來群組。以下是我想到的切版方式。
不知道這樣你知道如何下手了嗎?
我們先寫HTML。emmet縮寫如下。
1main&amp;gt;(.left&amp;gt;(.wheelBox&amp;gt;.wheel*2)+.box&amp;gt;div*25)+.right&amp;gt;.wheel*3 2&amp;lt;!-- 外框裡面 左邊 裝滾輪 裡面兩個 再一個裝按鈕 25個 右邊 三個滾輪--&amp;gt; CSS 設定一下寬高、形狀、與排列方式
提示: border-radius 設定大於等於 50% 即可生成圓形
1.box div, 2.wheel { 3 background-color: #000; 4} 5body { 6 height: 100vh; 7 display: flex; 8 justify-content: center; 9 align-items: center; 10} 11main { 12 width: 300px; 13 border: 4px solid #000; 14 display: flex; 15 border-radius: 20px; 16 padding: 10px; 17} 18.</description></item><item><title>Day4 自己動! @keyframes 與 Transition</title><link>https://EM-Tec.github.io/post/2023ironman-4/</link><pubDate>Mon, 18 Sep 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/2023ironman-4/</guid><description>
今天我們要來玩玩 CSS 動畫。CSS動畫有兩種:
@keyframes - 動作效果 transition - 轉場效果 我們今天都拿 PowerPoint 來舉例，雖然感覺現在的學生都快只認識 Canva 了(順帶一提 Canva 就是 CSS 動畫)
你可以想像 @Keyframes 是 PowerPoint的動畫
而且是一載入網頁就執行。當然我們可以透過 JavaScript 來指定執行的時間(比如說滾動到元素的時候)
而Transition是轉場裡面的轉化效果
當元素的外觀因為各種原因 CSS 被改變(比如說滑鼠滑過，JavaScript 設定，打開 F12 亂搞)，會平滑的轉換過去。我們先來講 Transition 因為他比較簡單。語法如下
1transition: 要改的屬性 持續時間 速度曲線 延遲; 2transition: background 4s ease-in-out 1s; 每一個屬性都可以分開設定，但真的不用跟自己過意不去。有興趣的連結下收
transition-delay transition-duration transition-property transition-timing-function 每一個屬性都可以分開設定，也可以省略一些屬性不寫。比如說
1transition: background 1s; 你可以在後面用逗號分隔其他元素
1transition: background 1s, color 2s; 秒數也可以用毫秒 ms，但我習慣使用秒因為比較短。如果是零點幾零可以省略。比如說以下幾個都是一樣效果
1transition: background 500ms; 2transition: background 0.5s; 3transition: background .5s; /* 是不是看起來超舒服!</description></item><item><title>Day3 用 Flex 切遍天下</title><link>https://EM-Tec.github.io/post/2023ironman-3/</link><pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/2023ironman-3/</guid><description>
當你拿到一張設計圖要照著做出來你的第一反應是什麼呢？是直接套 bootstrap 再說嗎？但我幾乎所有的切版**只要是整齊能畫出網格的，我都會使用flex。**而這個網格也不一定是正方形，只要是矩形就可以了。
什麼意思呢？假設 Google 拿了一張首頁的設計圖給我要我照著做出來（假設）
那麼我會先看出來整個頁面被包在一個和螢幕一樣大的 flex 方框，垂直排列。而排完剩餘的空間全部給一個空白的方框。而上面的 nav 目錄方框裡面分左右兩個方框，靠兩側對齊。
當然這沒有正確答案，但你可以發現其實只用 flex 就可以完成所有的切版作業了。因此讓我們先來認識他的基本語法吧。
Flex 基本語法 要使用 flex 很簡單，在 HTML 請你用一個箱子包住幾個元素。比如說我建立一個 &amp;lt;section&amp;gt; 包著幾個 &amp;lt;div&amp;gt; ，並設個背景顏色方便查看，同時附上昨天學到的快捷鍵。
1&amp;lt;!-- section&amp;gt;div*4 --&amp;gt; 2&amp;lt;section&amp;gt; 3 &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; 4 &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; 5 &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; 6 &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt; 7&amp;lt;/section&amp;gt; 1section { 2 background: #191d88; /* bg #191d88 */ 3 padding: 5px; /* p5 */ 4} 5 6div { 7 width: 100px; /* w100 */ 8 height: 100px; /* h100 */ 9 background: #ffc436; /* bg #ffc436 */ 10 margin: 20px; /* m20 */ 11} 因為 div 是區塊元素 (display: block) 所以元素都會換行，而這很重要因為這樣我們才能設定他的寬高。但如果我們加上 display: flex 就可以讓他們並排。</description></item><item><title>Day2 如何打的更快 | Emmet &amp; 預測輸入</title><link>https://EM-Tec.github.io/post/2023ironman-2/</link><pubDate>Sat, 16 Sep 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/2023ironman-2/</guid><description>
記得我在國一寫HTML的時候，傻傻的在那裡打小於、h1、大於、標題、小於、斜線、大於。我的朋友甚至發現了一個偷吃步就是先打好一堆大於小於，然後再填空。
既然HTML 和 CSS 都長那樣，這種繁瑣的操作早就可以交給電腦來解決。所以今天我要和你分享如何使用 Emmet 快速的打 HTML 以及 CSS
Emmet 可以做什麼呢？比如說我們想要建立一個一級標題，我們只需要先輸入 h1 再按下 Tab 即可，所有的標籤都可以這樣做。
不過 emmet 不只是幫你省打兩個大於小於的時間，他還有很多的語法可以供你使用。這裡我寫出幾個我最常使用的技巧。
基本 HTML5 架構 - ! 只要按下驚嘆號並按下 tab 就會自動生成一個基本的 HTML5 架構，非常方便。
添加class - . 比如說我想建立一個 img 圖片元素，並加上一個 class 叫做 avatar，我只需要打
1img.avatar 即可生成 &amp;lt;img *src*=&amp;quot;&amp;quot; *alt*=&amp;quot;&amp;quot; *class*=&amp;quot;avatar&amp;quot;&amp;gt;。而如果要建立的是一個div元素，因為平常大家太長用 div 了，直接打 .avatar 就可以了
包在裡面 - &amp;gt; 比如說我想要建立一個 li 清單包著一個超連結 a 元素，那麼只需要打
1li&amp;gt;a 即可生成 &amp;lt;li&amp;gt;&amp;lt;a *href*=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;。可以無限往下包
以及 - + 就跟 CSS 選取器 + 一樣，就是加在後面。比如說標題後面常接文章，我們就可以打
1h2+p 生成 &amp;lt;h2&amp;gt;&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;</description></item><item><title>Day1 相見歡 - 庫就不酷嗎？</title><link>https://EM-Tec.github.io/post/2023ironman-1/</link><pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/2023ironman-1/</guid><description>
Day1 相見歡 - 庫就不酷嗎？ 哈囉大家好我是毛哥EM，歡迎來到 【不用庫 也能酷 - 玩'轉 CSS &amp;amp; Js 特效 】
在這30天裡面我會先帶大家複習一些許多人搞不懂但很重要的語法，接者將揭開如何以最精簡的代碼，實現從簡單到複雜的特效，讓元素變得生動有趣。同時，我們也將挑戰自己，使用純JavaScript實現無需依賴庫的互動，從而提高網站效能和速度。
基本上如果你有追蹤且照著順序讀下來大部分的內容都會滿輕鬆的。而如果你是一位大神的話也歡迎沒事來逛逛，搞不好你會找到你沒聽過的各種冷知識喔w
無論你是前端初學者還是經驗豐富的開發者，這個系列都將帶給你嶄新的思維。帶你製作令人驚艷的網站。
背景 第一天來講一下為什麼我要來寫這個系列。我從小學三年級開始玩 Wix（類似 WordPress 或 Google Site 的視覺化網頁編輯器），做網頁就像做簡報一樣拉一拉就好了。不過做出來的網頁預設載入了一大堆厚重的函式庫，明明只是淡入淡出還需要GSAP。，載入6、7秒都算正常發揮。當時雖然不會 HTML 但按 F12 也能看出機器生成的程式碼又臭又長。加上 Wix 網站會有很醜的廣告橫幅，裡面充滿了各種付費解鎖功能，還有 RWD 非常難弄，讓我決定從此走向手刻這條不歸路…
然而並不只是機器生成的程式碼才有載入問題，在現代網頁函式庫的使用也是非常氾濫的。像是明明只是顯示號碼牌的網頁還要套 Bootstrap，因為懶得打 document.querySelector()而安裝 jQuery，甚至打開 Awwwards 隨便找一個得獎的網站都要放一個載入動畫，似乎在洗腦你好的網站就是要等待的。
也許是我這個剛要升上高二的菜鳥不太會用函式庫，但自己做除了載入更快以外和可自訂性也比較高。只要熟悉效果後面的原理自己做是不會比較慢的。
用庫就不酷了嗎? 然而不一定所有東西都是手刻才是最好的選擇。比如像是顯示 3D 模型的 three.js、手機擴增實境功能的 ar.js 都不是自己能夠輕鬆手刻的。現成的函式庫除了幫你省時以外大多瀏覽器相容性都不錯。你可以根據你自己開發和學習的成本取的一個甜蜜點。**做網站的方式千百種，只要能傳遞資訊和給使用者好體驗就是好網站。**不過對於簡單單一功能的函式庫，或是只需要大函式庫裡面的單一功能，那麼自己寫除了能省去學習及開發成本，也能避免一些衝突的問題。比如說這是一台車，並用以下程式把它致中。
1.car{ 2 position: absolute; 3 left: 50%; 4 top: 50%; 5 transform: translate(-50%, -50%); 6} 我使用Animate.CSS想要製作一個車開進來的效果，只需要加入一個class就可以了…
https://codepen.io/edit-mr/pen/bGObqWq
等等我們的定位怎麼跑掉啦? 仔細一看原來 Animate.css 也是使用 transform 屬性來製作動畫，所以我們互相衝突了。</description></item><item><title>EP.3 10分鐘 基本CSS教學</title><link>https://EM-Tec.github.io/post/webpallet-3/</link><pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/webpallet-3/</guid><description>
&lt;p>哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我要讓你10分鐘學會所有常用的CSS語法&lt;/p></description></item><item><title>EP.2 5分鐘完結HTML</title><link>https://EM-Tec.github.io/post/webpallet-2/</link><pubDate>Mon, 05 Jun 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/webpallet-2/</guid><description>
&lt;p>哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我要讓你5分鐘學會所有常用的HTML語法。&lt;/p></description></item><item><title>EP.1 什麼是網站?</title><link>https://EM-Tec.github.io/post/webpallet-1/</link><pubDate>Mon, 29 May 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/webpallet-1/</guid><description>
&lt;p>哈囉大家好，我是毛哥EM，歡迎來到網棧。今天我們要來聊聊什麼是網站&lt;/p></description></item><item><title>EP.0 歡迎來到網棧</title><link>https://EM-Tec.github.io/post/webpallet-0/</link><pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/webpallet-0/</guid><description>
&lt;h1 id="ep0-歡迎來到網棧">EP.0 歡迎來到網棧&lt;/h1>
&lt;p>哈囉大家好，我是毛哥EM，歡迎來到網棧。這是毛哥EM資訊密技的全新系列，我們將討論各種網頁設計的技術與技巧。&lt;/p></description></item><item><title>自製免費點名系統 - 複製貼上就能成為工程師</title><link>https://EM-Tec.github.io/post/rol-call/</link><pubDate>Mon, 01 May 2023 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/rol-call/</guid><description>
&lt;p>本文將教授如何使用程式製作一個簡單的點名網頁。透過這個點名系統，你可以方便地管理你的學生出席狀況，並且隨時查詢歷史出席紀錄。我們將使用 Google Apps Script, GitHub 和 Google Sheets 來建立這個點名系統。&lt;strong>我敢保證即使你完全不會程式也可以在5分鐘內完成&lt;/strong>。本文會詳細說明從建立 Google Sheets 到部屬網頁的步驟，並提供完整的程式碼和演示網頁。&lt;/p></description></item><item><title>【GAS】複製貼上讓試算表變身成網頁表格 秀爆你的客戶朋友！</title><link>https://EM-Tec.github.io/post/create-site-for-sheet/</link><pubDate>Sun, 14 Aug 2022 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/create-site-for-sheet/</guid><description>
&lt;p>直接把整個試算表連結發給別人除了要載入很久且會出現一堆不需要的按鍵，整個畫面很醜很沒有質感。而且如果你把其他隱私的資料也放在裡面，都會被一次看光光。那我們就來幫試算表包個糖衣吧&lt;/p></description></item><item><title>【GAS】自製點名系統</title><link>https://EM-Tec.github.io/post/frog_check_in/</link><pubDate>Thu, 07 Oct 2021 00:00:00 +0000</pubDate><guid>https://EM-Tec.github.io/post/frog_check_in/</guid><description>
&lt;p>大眼蛙教練的課程是以堂數做計算，也就是來一次算一次，而不是一段時間。因此每次學生上課都需要簽到，最後還需要人工來統計。因此我做了一個簡單的點名系統，讓電腦來做統計和計算的工作。&lt;/p></description></item></channel></rss>